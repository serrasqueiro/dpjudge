%!PS-Adobe-3.0
%%Title: Diplomacy Map (Canton)
%%Creator: dpmap, using a map created with DPeye by Mario Huys (woelpad@yahoo.com)
%%DocumentPaperSizes: Letter
%%LanguageLevel: 2
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentNeededResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndComments

%%BeginDefaults
%%PageResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndDefaults

% INFO
%  268  371 AFG    Afghanistan
%  732  475 AKI    Akita
%  607  546 AMU    Amur
%  114  306 ARA    Arabia
%  150  491 ARM    Armenia
%  230  211 ASE    Arabian Sea
%  452  292 ASM    Assam
%  113  442 BAG    Baghdad
%  245  316 BAL    Baluchistan
%  731   49 BAN    Banda Sea
%  100  532 BLA    Black Sea
%  402  176 BOB    Bay of Bengal
%  306  237 BOM    Bombay
%  628   70 BOR    Borneo
%   50  559 BUL    Bulgaria
%   69  544 BUL/EC Bulgaria (east coast)
%   31  544 BUL/SC Bulgaria (south coast)
%  474  237 BUR    Burma
%  402  268 CAL    Calcutta
%  545  172 CAM    Cambodia
%  596  315 CAN    Canton
%  642  318 CAN/EC Canton (east coast)
%  586  267 CAN/SC Canton (south coast)
%  519  328 CHU    Chungking
%   73  498 CON    Constantinople
%  789  349 CPO    Central Pacific Ocean
%  774  152 CSE    Celebes Sea
%   73  440 DAM    Damascus
%   49  421 DAM/SC Damascus (south coast)
%   59  457 DAM/WC Damascus (west coast)
%  344  283 DEL    Delhi
%  686  370 ECS    East China Sea
%   17  412 EGY    Egypt
%  396   84 EIO    East Indian Ocean
%  663  299 FOR    Formosa
%  467  154 GOM    Gulf of Martaban
%  527  131 GOS    Gulf of Siam
%  548  253 HAN    Hanoi
%  622  293 HKO    Hong Kong
%  578  190 HUE    Hue
%  531  576 IRK    Irkutsk
%  594   20 JAV    Java
%  557   64 JSE    Java Sea
%  466  401 KAN    Kansu
%  572  113 KAR    Karimata Strait
%  324  343 KAS    Kashmir
%  677  556 KHA    Khabarovsk
%  248  521 KIR    Kirghiz
%  679  420 KOR    Korea
%  727  440 KYO    Kyoto
%  532  230 LAO    Laos
%  349  208 MAD    Madras
%  521   88 MAL    Malaya
%  626  484 MAN    Manchuria
%  685  498 MAR    Maritime Province
%   24  475 MED    Mediterranian Sea
%  510  478 MON    Mongolia
%  203  571 MOS    Moscow
%  564  419 PEK    Peking
%  181  382 PER    Persia
%  217  285 PGU    Persian Gulf
%  680  236 PHI    Philippines
%  717  303 PSE    Philippine Sea
%  102  230 RED    Red Sea
%   64  582 RUM    Rumania
%  565  156 SAI    Saigon
%  635  113 SAR    Sarawak
%  715  403 SAS    Sasebo
%  629  208 SCS    South China Sea
%  141  566 SEV    Sevastopol
%  625  365 SHA    Shanghai
%  740  423 SHI    Shikoku
%  519  197 SIA    Siam
%  511  147 SIA/EC Siam (east coast)
%  486  123 SIA/WC Siam (west coast)
%  371  579 SIB    Siberia
%  382  414 SIN    Sinkiang
%  441   21 SIO    South Indian Ocean
%  699  463 SOJ    Sea of Japan
%  738  580 SOO    Sea of Okhotsk
%  510   51 SUM    Sumatra
%  399  333 TIB    Tibet
%  762  483 TOK    Tokyo
%  364  515 TOM    Tomsk
%  257  442 TUR    Turkestan
%  188   66 WIO    West Indian Ocean
%  651  402 YEL    Yellow Sea
%  731  527 YES    Yesso
%  517  275 YUN    Yunnan
% MAP

%%BeginProlog
% $_DPghost$_
systemdict /pdfmark known {
currentglobal true setglobal globaldict begin
/$_CurrentGlobal$_ exch def
/$_FormCount$_ 0 def
/$_Marks$_ [] def
/$_InFormPaint$_ false def
/$_FormPaintDepth$_ 0 def
$_CurrentGlobal$_ end setglobal
/$_begin$_ {
currentglobal true setglobal globaldict begin
/$_CurrentGlobal$_ exch def
} bind def
/$_end$_ {
$_CurrentGlobal$_ end setglobal
} bind def
/$_mark$_ {
count 1 sub exch sub $_Marks$_ aload length 1 add array astore /$_Marks$_ exch def
$_end$_
} bind def
/$_cleartomark$_ {
$_begin$_
count 1 sub 1 index sub $_Marks$_ 0 get sub
dup 0 gt {
dup 2 index 3 add 1 roll 1 add 1 index add exch roll { pop } repeat
} { pop pop } ifelse
$_Marks$_ dup length 1 sub 1 exch getinterval /$_Marks$_ exch def
} bind def
/$_GStates$_ [] def
/$_gsave$_ {
$_end$_ /$_GStates$_ $_GStates$_ aload
gstate currentgstate
exch length 1 add array astore def $_begin$_
} bind def
/$_grestore$_ {
$_end$_ /$_GStates$_ $_GStates$_ aload exch
setgstate
length 1 sub array astore def $_begin$_
} bind def
/$_execform$_ /execform load def
/$_defineform$_ {
/$_FormPaintDepth$_ $_FormPaintDepth$_ 1 add def
% -- REMOVE THIS LINE IF NESTED FORMS HAVE BEEN PATCHED. --
/$_InFormPaint$_ true def
% -- END REMOVAL --
1 index
dup /BBox get matrix exch
3 2 roll dup /Matrix get 3 index exch matrix concatmatrix
$_FormCount$_ 1 add dup /$_FormCount$_ exch def
dup log cvi 1 add
exch 1 index string cvs
1 index 8 add string
dup 0 ($_Form) putinterval
dup 6 4 3 roll putinterval
dup 3 2 roll 6 add ($_) putinterval
cvn cvx 1 array astore cvx
dup 3 2 roll
6 index { 2 copy 10 2 roll } if
2 array astore
2 index /$_FormSpec$_ 3 2 roll put
1 $_mark$_ [ /_objdef 3 2 roll
/BBox 5 index
/BP pdfmark 0 $_cleartomark$_
$_gsave$_
exch aload pop exch 3 index sub exch 2 index sub rectclip
exch matrix invertmatrix concat
newpath
1 $_mark$_ dup /PaintProc get exec 0 $_cleartomark$_
$_grestore$_
0 $_mark$_ [ /EP pdfmark 0 $_cleartomark$_
{
$_InFormPaint$_ not {
readonly
} if
pop
} if
$_FormPaintDepth$_ 1 sub dup /$_FormPaintDepth$_ exch def 0 le {
/$_InFormPaint$_ false def
} if
} bind def
/execform {
$_begin$_
$_InFormPaint$_ {
dup /$_FormSpec$_ known not 1 index wcheck and {
false $_defineform$_
} if false
} {
dup /$_FormSpec$_ known {
/$_FormSpec$_ get aload pop true
} {
dup wcheck {
true $_defineform$_ true
} {
false
} ifelse
} ifelse
} ifelse
{
$_gsave$_ concat
1 $_mark$_ [ exch /SP pdfmark 0 $_cleartomark$_
$_grestore$_
} {
1 $_mark$_ $_execform$_ 0 $_cleartomark$_
} ifelse
$_end$_
} bind def
/$_defineresource$_ /defineresource load def
/defineresource {
$_begin$_
dup /Form eq {
exch dup /$_FormSpec$_ known not 1 index wcheck and {
false $_defineform$_
} if exch
} if
3 $_mark$_ $_defineresource$_ 1 $_cleartomark$_
$_end$_
} bind def
} if
% /$_DPghost$_
%%EndProlog

%%BeginSetup
/bd { bind def } bind def
/xd { exch def } bd
/ld { load def } bd
/ifloor { .001 add floor cvi } bd
/iceiling { .001 sub ceiling cvi } bd
/min { 2 copy gt { exch } if pop } bd
/max { 2 copy lt { exch } if pop } bd
/secure_atan { 2 copy 0 eq exch 0 eq and { pop pop 0 } { atan } ifelse } bd
/center { 3 2 roll add 2 div 3 1 roll add 2 div exch } bd
/a /arc ld
/c /curveto ld
/d /setdash ld
/f /fill ld
/h /show ld
/k /stroke ld
/l /lineto ld
/m /moveto ld
/n /newpath ld
/o /rotate ld
/p /closepath ld
/r /grestore ld
/s /gsave ld
/t /translate ld
/w /setlinewidth ld
/x /scale ld
/y /scalefont ld
/z /setfont ld
/Powers 20 dict def
%%IncludeResource: font Helvetica-Bold
/MapUnitLetterFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Helvetica-Bold
/MapNameFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Courier
/TextFixedFont /Courier findfont def
%%IncludeResource: font Courier-Bold
/TextHeadingFont /Courier-Bold findfont def
%%IncludeResource: font Times-Roman
/TextTitleFont /Times-Roman findfont def
/PageSetup {
	612 0 t
	90 o
	/FinishReport { } def /InTextMode true def
	Black
	MovePhase
} bd
/ShowPage {
	DrawAliases
	DrawRemainingCenters
	InTextMode { FinishReport } { r } ifelse
	FrameMap
	showpage
} bd
/VisitColors {
	3 dict begin
	/c xd /r xd /g xd
	/BorderBlack .1 g
	/MountainGrey .5 g
	/IceGrey .9 g
	/ArrowBlack 0 g
	/ArrowWhite .9 g
	/Black 0 g
	/White .9 g
	/LandBrown .8 .7 .4 r
	/SeaBlue .1 .4 .6 r
	/ArrowRed 1 0 0 r
	/ArrowBlue .529 .808 .922 r
	/Blue 0 0 1 r
	/Yellow 1 1 0 r
	/Turquoise .2 .7 .7 r
	/Green 0 .7 0 r
	/Red 1 0 0 r
	/Orange 1 .6 0 r
	/Brown .6 .45 .2 r
	/DarkGreen 0 .4 0 r
	end
} def
/VisitPowers {
	1 dict begin
	/p xd
	/BRITAIN (B) /Blue /White p
	/CHINA (C) /Yellow /Black p
	/FRANCE (F) /Turquoise /Black p
	/HOLLAND (H) /Green /Black p
	/JAPAN (J) /Red /White p
	/RUSSIA (R) /White /Black p
	/TURKEY (T) /Orange /Black p
	/UNOWNED (?) /Brown /White p
	end
} def
/PaintFleet {
	begin
	.5 .5 x
	0 8 t
	-26 -7 m -26 -2 l -19 -2 l -19 -1 l % to bow
	-22 -1 l -22 0 l -15 0 l -15 1 l % A turret
	-18 1 l -18 2 l -10 2 l -10 0 l % B turret
	-9 0 l -9 4 l -8 4 l -8 6 l % conn tower
	-6 6 l -6 5 l -5 5 l -5 9 l % Infra struct
	-3 9 l -3 14 l -2 14 l -2 9 l % funnel 1
	0 9 l 0 5 l 1 5 l 1 8 l % funnel 2
	3 8 l 3 13 l 4 13 l 4 8 l % mast 2
	6 8 l 6 0 l 8 0 l 8 2 l % funnel 2
	16 2 l 16 1 l 13 1 l 13 0 l % C turret
	20 0 l 20 -1 l 17 -1 l 17 -2 l % D turret
	23 -2 l 23 -3 l 25 -3 l 25 -5 l % stern
	24 -5 l 24 -7 l p
	s 2 w Contrast k r Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/FleetTroopBBox [
	-13.5 0 13 11.5
] def
/PaintControlledFleet {
	begin
	.5 .5 x
	0 8 t
	-26 -7 m -26 -2 l -19 -2 l -19 -1 l % to bow
	-22 -1 l -22 0 l -15 0 l -15 1 l % A turret
	-18 1 l -18 2 l -10 2 l -10 0 l % B turret
	-9 0 l -9 4 l -8 4 l -8 6 l % conn tower
	-6 6 l -6 5 l -5 5 l -5 9 l % Infra struct
	-3 9 l -3 14 l -2 14 l -2 9 l % funnel 1
	0 9 l 0 5 l 1 5 l 1 8 l % funnel 2
	3 8 l 3 13 l 4 13 l 4 8 l % mast 2
	6 8 l 6 0 l 8 0 l 8 2 l % funnel 2
	16 2 l 16 1 l 13 1 l 13 0 l % C turret
	20 0 l 20 -1 l 17 -1 l 17 -2 l % D turret
	23 -2 l 23 -3 l 25 -3 l 25 -5 l % stern
	24 -5 l 24 -7 l p
	s s 6 w Outer k r 2 w Contrast k r Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledFleetTroopBBox [
	-14.5 -1 14 12.5
] def
/DrawFleet {
	SwitchToMapMode
	s t
	FleetTroops Power get execform
	r
} bd
/PaintArmy {
	begin
	.5 .5 x
	0 8 t
	n 0 0 9 0 360 a p % wheel
	2 w Contrast k
	-20 7 m 10 7 l 10 3 l 14 3 l
	14 1 l -16 1 l -16 3 l -20 3 l p % barrel
	4 2 m 24 -8 l 26 -8 l 18 -8 l -2 2 l % carriage
	s 2 w Contrast k r Paint f
	n 0 0 9 0 360 a p % wheel
	Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ArmyTroopBBox [
	-10.5 -1 13.5 9
] def
/PaintControlledArmy {
	begin
	.5 .5 x
	0 8 t
	n 0 0 9 0 360 a p % wheel
	s 6 w Outer k r 2 w Contrast k
	-20 7 m 10 7 l 10 3 l 14 3 l
	14 1 l -16 1 l -16 3 l -20 3 l p % barrel
	4 2 m 24 -8 l 26 -8 l 18 -8 l -2 2 l % carriage
	s s 6 w Outer k r 2 w Contrast k r Paint f
	n 0 0 9 0 360 a p % wheel
	Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledArmyTroopBBox [
	-11.5 -2 14.5 10
] def
/DrawArmy {
	SwitchToMapMode
	s t
	ArmyTroops Power get execform
	r
} bd
/DrawAlias {
	SwitchToMapMode
	s
	3 1 roll t
	.5 .5 x
	0 -14 t
	MapNameFont z
	dup stringwidth pop -2 div 0 neg m h
	r
} bd
/DrawName {
	pop pop pop
} bd
/VisitTerritories {
	5 dict begin
	/b xd
	/g xd
	/w xd
	/l xd
	/c xd
	(RUM) 64 582 c
	(SEV) 141 566 c
	(KHA) 677 556 c
	(YES) 731 527 c
	(CON) 73 498 c
	(MAR) 685 498 c
	(ARM) 150 491 c
	(MAN) 626 484 c
	(TOK) 762 483 c
	(AKI) 732 475 c
	(BAG) 113 442 c
	(KYO) 727 440 c
	(SHI) 740 423 c
	(KOR) 679 420 c
	(PEK) 564 419 c
	(EGY) 17 412 c
	(SAS) 715 403 c
	(PER) 181 382 c
	(SHA) 625 365 c
	(BAL) 245 316 c
	(ARA) 114 306 c
	(FOR) 663 299 c
	(HKO) 622 293 c
	(CAL) 402 268 c
	(HAN) 548 253 c
	(BOM) 306 237 c
	(BUR) 474 237 c
	(PHI) 680 236 c
	(MAD) 349 208 c
	(HUE) 578 190 c
	(CAM) 545 172 c
	(SAI) 565 156 c
	(SAR) 635 113 c
	(MAL) 521 88 c
	(BOR) 628 70 c
	(SUM) 510 51 c
	(JAV) 594 20 c
	(SIB) 371 579 l
	(IRK) 531 576 l
	(MOS) 203 571 l
	(AMU) 607 546 l
	(KIR) 248 521 l
	(TOM) 364 515 l
	(MON) 510 478 l
	(TUR) 257 442 l
	(SIN) 382 414 l
	(KAN) 466 401 l
	(AFG) 268 371 l
	(KAS) 324 343 l
	(TIB) 399 333 l
	(CHU) 519 328 l
	(ASM) 452 292 l
	(DEL) 344 283 l
	(YUN) 517 275 l
	(LAO) 532 230 l
	(SOO) 738 580 w
	(BLA) 100 532 w
	(MED) 24 475 w
	(SOJ) 699 463 w
	(YEL) 651 402 w
	(ECS) 686 370 w
	(CPO) 789 349 w
	(PSE) 717 303 w
	(PGU) 217 285 w
	(RED) 102 230 w
	(ASE) 230 211 w
	(SCS) 629 208 w
	(BOB) 402 176 w
	(GOM) 467 154 w
	(CSE) 774 152 w
	(GOS) 527 131 w
	(KAR) 572 113 w
	(EIO) 396 84 w
	(WIO) 188 66 w
	(JSE) 557 64 w
	(BAN) 731 49 w
	(SIO) 441 21 w
	(BUL) 50 559 g
	(DAM) 73 440 g
	(CAN) 596 315 g
	(SIA) 519 197 g
	(BUL/SC) 31 544 b
	(BUL/EC) 69 544 b
	(DAM/WC) 59 457 b
	(DAM/SC) 49 421 b
	(CAN/EC) 642 318 b
	(CAN/SC) 586 267 b
	(SIA/EC) 511 147 b
	(SIA/WC) 486 123 b
	end
} def
/VisitSupplies {
	2 dict begin
	/s xd
	/h xd
	/MOS 204 597 h
	/KHA 655 575 h
	/SEV 116 572 h
	/IRK 508 545 h
	/CON 47 523 h
	/TOK 754 468 h
	/DAM 78 463 h
	/PEK 590 431 h
	/KYO 719 429 h
	/BAG 115 427 h
	/SAS 714 392 h
	/SHA 651 369 h
	/TIB 425 343 h
	/CHU 553 340 h
	/DEL 338 307 h
	/CAL 424 263 h
	/HAN 547 243 h
	/HUE 579 174 h
	/MAD 336 167 h
	/SAI 552 147 h
	/BOR 589 77 h
	/SUM 531 39 h
	/JAV 567 21 h
	/RUM 80 570 s
	/MAN 627 464 s
	/KOR 658 451 s
	/PER 172 414 s
	/AFG 297 388 s
	/BAL 267 328 s
	/FOR 666 314 s
	/HKO 609 286 s
	/PHI 683 224 s
	/BUR 474 223 s
	/SIA 518 179 s
	/CAM 539 159 s
	/MAL 530 74 s
	end
} def
/DrawRemainingCenters {
	SwitchToMapMode
	UNOWNED
	Centers {
		{ load exec supply } { pop } ifelse
	} forall
} bd
/PaintHome {
	begin
	.7 .7 x
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/HomeCenterBBox [
	-4.2 -4.2 4.2 4.2
] def
/PaintControlledHome {
	begin
	.7 .7 x
	Outer
	n 0 0 10 0 360 a f
	Contrast
	n 0 0 8 0 360 a f
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/ControlledHomeCenterBBox [
	-7 -7 7 7
] def
/PaintSupply {
	begin
	.7 .7 x
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/SupplyCenterBBox [
	-4.2 -4.2 4.2 4.2
] def
/PaintControlledSupply {
	begin
	.7 .7 x
	Outer
	n 0 0 10 0 360 a f
	Contrast
	n 0 0 8 0 360 a f
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/ControlledSupplyCenterBBox [
	-7 -7 7 7
] def
/supply {
	SwitchToMapMode
	Centers exch false put
	s t
	Power get execform
	r
} bd
/SetArrowStateOk {
	[] 0 d
} bd
/OkOrder {
	/SetArrowState /SetArrowStateOk ld
} bd
/SetArrowStateFailed {
	[4 6] 2 d
} bd
/FailedOrder {
	/SetArrowState /SetArrowStateFailed ld
} bd
/MovePhase {
	/ArrowColor /ArrowBlack ld
	/ArrowBase 20 def
	/TraceArrowHead /TraceSingleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/RetreatPhase {
	/ArrowColor /ArrowRed ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/ProposePhase {
	/ArrowColor /ArrowWhite ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/TraceSingleArrowHead {
	% draw the arrow head ...
	n
	dup -5 m
	dup 20 add 0 l
	dup 5 l
	p
} bd
/TraceDoubleArrowHead {
	% draw the double arrow head ...
	n
	dup -5 m
	dup 19.8 add
	dup -1 l
	dup -5 l
	dup 20 add 0 l
	dup 5 l
	1 l
	dup 5 l
	p
} bd
/PaintArrowMove {
	s
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.5 .5 x
	0 8 t
	o
	.5 div ArrowBase sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% if base is still too long, shorten it some more
	% to make arrow head touch support circle
	dup 14 gt {
		14 sub
	} {
		pop 0
	} ifelse
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowCircle {
	s
	5 1 roll
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.5 .5 x
	0 8 t
	o
	.5 div
	1 index sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% draw the circle ...
	1 w
	n
	2 copy add 0 4 3 roll 0 360 a
	p k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowArrive {
	s
	t
	.5 .5 x
	0 8 t
	180 rotate 54 ArrowBase add neg 0 t
	40
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	-5 0 m -10 0 l
	-15 0 m -20 0 l
	k
	r
} bd
/PaintArrowDepart {
	s
	t
	.5 .5 x
	0 8 t
	-54 0 t
	40
	2 w
	0 0 m
	0 l
	-6 0 m -10 0 l
	-16 0 m -20 0 l
	k
	r
} bd
/ArrowMove {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowMove
	r
} bd
/ArrowHold {
	SwitchToMapMode
	s
	SetArrowState
	24 PaintArrowCircle
	r
} bd
/ArrowSupport {
	SwitchToMapMode
	s
	SetArrowState
	center
	8 PaintArrowCircle
	r
} bd
/ArrowConvoy {
	SwitchToMapMode
	s
	SetArrowState
	center
	12 PaintArrowCircle
	r
} bd
/ArrowArrive {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArrive
	r
} bd
/ArrowDepart {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowDepart
	r
} bd
/ArrowRetreat {
	RetreatPhase
	ArrowMove
	MovePhase
} bd
/ArrowPropose {
	ProposePhase
	ArrowMove
	MovePhase
} bd
/ArrowRetreatArrive {
	RetreatPhase
	ArrowArrive
	MovePhase
} bd
/ArrowRetreatDepart {
	RetreatPhase
	ArrowDepart
	MovePhase
} bd
/BuildUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.5 .5 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/SlashUnit {
	s
	3 1 roll t
	.5 .5 x
	0 8 t
	n
	-21 -16 m
	11 16 l
	21 16 l
	-11 -16 l
	p
	exec
	r
} bd
/DestroyUnit {
	SwitchToMapMode
	{ ArrowRed f } SlashUnit
} bd
/DisbandUnit {
	SwitchToMapMode
	{ s ArrowWhite f r 1 w ArrowRed k } SlashUnit
} bd
/RemoveUnit {
	SwitchToMapMode
	{ ArrowWhite f } SlashUnit
} bd
/FindUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.5 .5 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/LoseUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.5 .5 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/QueryUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.5 .5 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/MapForm <<
	/FormType 1
	/Matrix matrix
	/BBox [ 0 0 806 611 ]
	/FormDict 1 dict
	/PaintProc {
		/FormDict get begin
		s
		SeaBlue 0 0 806 611 rectfill
		IncludeLand
		IncludeInternalBorders
		IncludeBorders
		IncludeMountain
		IncludeLake
		r
		end
	} bind
>> def
/DrawMap {
	PageSetup
	SwitchToMapMode
	MapForm execform
	/Centers << Centers { pop true } forall >> def
	UNOWNED
} bd
/DrawSupplies {
	SwitchToMapMode
	UNOWNEDCENTER
	{ HomeCenters 3 1 roll 4 3 roll supply } bind
	{ SupplyCenters 3 1 roll 4 3 roll supply } bind
	VisitSupplies
} bd
/DrawAliases {
	NameTerritories
} bd
/NameTerritories {
	SwitchToMapMode
	s
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ White 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ pop pop pop } bind
	VisitTerritories
	r
} bd
/GetControlledPower {
	1 index dup length string cvs 1 index dup length string cvs
	1 index length dup 2 index length add 1 add string
	dup 0 6 5 roll putinterval dup 2 index 124 put dup 3 2 roll 1 add 4 3 roll putinterval cvn
	3 1 roll Powers 3 index known {
		pop pop
	} {
		8 dict dup begin
		exch Powers exch get /Paint get /Outer xd
		Powers 2 index get { def } forall
		end
		dup ControlledFleetTroopBBox /PaintControlledFleet load CreateTroop FleetTroops 4 index 3 2 roll put
		dup ControlledArmyTroopBBox /PaintControlledArmy load CreateTroop ArmyTroops 4 index 3 2 roll put
		dup ControlledHomeCenterBBox /PaintControlledHome load CreateTroop HomeCenters 4 index 3 2 roll put
		dup ControlledSupplyCenterBBox /PaintControlledSupply load CreateTroop SupplyCenters 4 index 3 2 roll put
		Powers 2 index 3 2 roll put
		[ /Power 3 index 4 3 roll {
			ChangeController {
				Power GetControlledPower exch
				/ChangeController false def
			} if pop
		} bind /exec load /def load ] cvx 2 index xd
	} ifelse
} bd
/Controls {
	/ChangeController true def
} bd
/CreateTroop {
	<<
		/BBox 4 3 roll
		/PaintProc 5 4 roll
		6 5 roll {} forall
		/FormType 1
		/Matrix matrix
	>>
} bd
/CreateTroops {
	<< 3 1 roll Powers {
		3 index 3 index CreateTroop 4 2 roll
	} forall pop pop >>
} bd
/SplitString {
	7 dict begin
	/nrChars xd
	/indentString xd
	/objectString xd
	/objectLast objectString length 1 sub def
	% Short string?
	objectLast nrChars lt {
		false objectString
	} {
		% Look for a suitable place to split.
		% First tracking backwards, if that doesn't work, look forward.
		/splitIndex -1 def
		nrChars -1 0 {
			objectString 1 index get 32 eq {
				/splitIndex xd exit
			} if pop
		} for splitIndex -1 eq {
			nrChars 1 add 1 objectLast {
				objectString 1 index get 32 eq {
					/splitIndex xd exit
				} if pop
			} for
		} if
		splitIndex -1 eq splitIndex objectLast eq or {
			false objectString
		} {
			% The first part.
			objectString 0 splitIndex getinterval
			% The second part.
			objectString splitIndex 1 add objectLast splitIndex sub getinterval
			% Add indentation if needed.
			indentString length 0 gt {
				dup length indentString length add string
				dup 0 indentString putinterval
				dup indentString length 4 3 roll putinterval
			} if
			% Add white space of the first part.
			/nonSpaceIndex objectLast 1 add def
			0 1 objectLast {
				objectString 1 index get 32 ne {
					/nonSpaceIndex xd exit
				} if pop
			} for
			nonSpaceIndex 0 gt nonSpaceIndex splitIndex lt and {
				dup length nonSpaceIndex add string
				dup 0 objectString 0 nonSpaceIndex getinterval putinterval
				dup nonSpaceIndex 4 3 roll putinterval
			} if
			exch true exch
		} ifelse
	} ifelse
	end
} bd
/DrawLayoutBorders {
	s
	TextFixedFont 8 y z
	r
} bd
/Owner <<
	/Steps [
		{ /Count 0 def /Y 152.24 def false true } bind
		{
			Count 15 ge { false true } {
				117 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				21.6 Y m h
				true false
			} ifelse
		} bind
		{
			117 SplitString [ exch {
				21.6 24.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				21.6 24.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 117 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OwnerReport {
	SwitchToTextMode
	Owner begin Start end
	/FinishReport /FinishOwnerReport load def
} bd
/WriteOwner {
	Owner begin Write end
} bd
/FinishOwnerReport {
	Owner begin Finish end
} bd
/Adjustment <<
	/Steps [
		{ /Count 0 def /Y 104.24 def false true } bind
		{
			Count 9 ge { false true } {
				37 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				592.8 Y m h
				true false
			} ifelse
		} bind
		{
			37 SplitString [ exch {
				592.8 24.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				592.8 24.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 37 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 8 y z
		592.8 104.24 moveto
		(Adjustments) h
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/AdjustReport {
	SwitchToTextMode
	Adjustment begin Start end
	/FinishReport /FinishAdjustReport load def
} bd
/WriteAdjust {
	Adjustment begin Write end
} bd
/FinishAdjustReport {
	Adjustment begin Finish end
} bd
/Retreat <<
	/Steps [
		{ /Count 0 def /Y 184.24 def false true } bind
		{
			Count 8 ge { false true } {
				37 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				592.8 Y m h
				true false
			} ifelse
		} bind
		{
			37 SplitString [ exch {
				592.8 112.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				592.8 112.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 37 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 8 y z
		592.8 184.24 moveto
		(Retreats) h
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/RetreatReport {
	SwitchToTextMode
	Retreat begin Start end
	/FinishReport /FinishRetreatReport load def
} bd
/WriteRetreat {
	Retreat begin Write end
} bd
/FinishRetreatReport {
	Retreat begin Finish end
} bd
/Order <<
	/Steps [
		{ /Count 0 def /Y 552.24 def false true } bind
		{
			Count 44 ge { false true } {
				37 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				592.8 Y m h
				true false
			} ifelse
		} bind
		{
			37 SplitString [ exch {
				592.8 192.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				592.8 192.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 37 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OrderReport {
	SwitchToTextMode
	Order begin Start end
	/FinishReport /FinishOrderReport load def
} bd
/WriteOrder {
	Order begin Write end
} bd
/FinishOrderReport {
	Order begin Finish end
} bd
/DrawTitle {
	SwitchToTextMode
	TextTitleFont 24 y z
	(Diplomacy)
	592.8 572.72 m h
	TextTitleFont 16 y z
	dup stringwidth pop dup 177.6 gt {
		592.8 550 m
		177.6 exch div dup 1 x exch
		0 4.48 rmoveto h
		1 exch div 1 x
	} {
		pop 592.8 554.48 m h
	} ifelse
} bd
/SwitchToTextMode {
	InTextMode {
		FinishReport /FinishReport { } def
	} {
		r /InTextMode true def
	} ifelse
} bd
/SwitchToMapMode {
	InTextMode {
		FinishReport /FinishReport { } def
		/InTextMode false def
		s
		25.6 165.14 553.6 417.73 rectclip .6968 .6968 x 31 231.26 t
		ArrowColor
		OkOrder
	} if
} bd
/FrameMap {
	s
	2 w LandBrown
	21.6 161.14 m 583.2 161.14 l 583.2 586.86 l 21.6 586.86 l
	p
	s 8 w Black k r
	clipsave clip k cliprestore
	r
} bd
/IncludeLand {
	s
	.1667 .1667 x
	/fk {
		p
		s LandBrown f r
		k
	} bd
	3 w BorderBlack
	OutlineCoastlineDimblack
	r
} bd
/IncludeInternalBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	3 w [ 18 6 ] 9 d BorderBlack
	OutlineInternal1Dimblack
	OutlineInternal2Dimblack
	r
} bd
/IncludeBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	6 w BorderBlack
	OutlineNational1Black
	OutlineNational2Black
	r
} bd
/IncludeMountain {
	s
	.1667 .1667 x
	/fk {
		p
		s MountainGrey f r
		k
	} bd
	6 w BorderBlack
	OutlineMountainDimblack
	r
} bd
/IncludeLake {
	s
	.1667 .1667 x
	/fk {
		p
		s SeaBlue f r
		k
	} bd
	3 w BorderBlack
	OutlineCoastlineBlue
	r
} bd
/OutlineCoastlineDimblack {
	6 114 m
	72 282 l
	42 288 l
	48 325 39 353 30 390 c
	17 440 49 475 60 516 c
	66 540 36 553 42 576 c
	49 607 93 670 114 696 c
	131 717 170 719 192 732 c
	223 750 233 793 264 816 c
	289 834 326 838 354 852 c
	380 865 397 905 420 924 c
	486 978 546 1044 600 1110 c
	634 1152 659 1197 678 1242 c
	683 1254 707 1281 702 1296 c
	699 1302 664 1321 660 1320 c
	651 1317 648 1300 636 1296 c
	619 1290 579 1296 564 1296 c
	540 1296 506 1314 480 1308 c
	451 1300 404 1287 378 1296 c
	347 1305 341 1392 330 1416 c
	317 1440 294 1426 294 1458 c
	303 1459 332 1462 324 1488 c
	315 1512 284 1523 270 1542 c
	235 1585 223 1680 210 1734 c
	198 1781 206 1850 198 1902 c
	195 1917 185 1930 180 1944 c
	173 1959 187 1983 180 1998 c
	174 2008 158 2015 156 2028 c
	153 2040 170 2053 174 2064 c
	180 2083 167 2091 162 2106 c
	151 2130 173 2164 180 2184 c
	190 2215 160 2260 150 2286 c
	135 2321 161 2360 168 2388 c
	186 2461 121 2547 156 2616 c
	183 2602 186 2500 234 2532 c
	249 2542 256 2559 270 2568 c
	288 2531 274 2496 264 2466 c
	258 2449 269 2428 264 2412 c
	255 2385 234 2356 246 2322 c
	252 2302 273 2287 282 2268 c
	294 2237 282 2196 276 2172 c
	265 2131 297 2111 300 2082 c
	300 2074 284 2064 282 2058 c
	274 2035 293 2026 300 2010 c
	315 1972 270 1934 282 1908 c
	304 1854 333 1802 348 1746 c
	352 1728 339 1701 336 1686 c
	328 1655 341 1620 336 1590 c
	334 1580 324 1565 330 1554 c
	368 1477 481 1516 546 1500 c
	597 1487 616 1520 660 1524 c
	688 1526 721 1503 756 1512 c
	784 1519 807 1542 834 1554 c
	863 1566 876 1520 906 1530 c
	936 1540 966 1547 996 1560 c
	1008 1565 1018 1546 1032 1554 c
	1056 1568 1063 1611 1092 1626 c
	1117 1638 1169 1667 1176 1704 c
	1135 1724 1130 1764 1104 1794 c
	1091 1808 1061 1812 1050 1836 c
	1026 1883 1116 1951 1080 1980 c
	1055 1999 1034 1955 1014 1944 c
	982 1925 942 1932 912 1950 c
	899 1957 876 1974 870 1986 c
	860 2002 883 2011 888 2022 c
	906 2066 825 2074 804 2064 c
	774 2123 756 2178 732 2238 c
	698 2317 761 2340 822 2310 c
	835 2303 848 2318 864 2310 c
	891 2294 884 2255 894 2232 c
	919 2170 936 2107 978 2052 c
	1016 2000 1037 2085 1074 2070 c
	1099 2059 1111 2006 1122 1986 c
	1131 1967 1153 1964 1164 1950 c
	1197 1904 1259 1842 1308 1818 c
	1325 1809 1334 1845 1356 1836 c
	1375 1828 1395 1803 1416 1800 c
	1429 1797 1435 1813 1446 1818 c
	1471 1828 1487 1806 1506 1800 c
	1528 1792 1564 1818 1590 1806 c
	1623 1789 1599 1773 1590 1758 c
	1614 1740 l
	1600 1720 1593 1726 1578 1716 c
	1539 1690 1625 1679 1632 1674 c
	1560 1644 l
	1565 1611 1611 1546 1644 1530 c
	1654 1524 1674 1537 1680 1536 c
	1693 1532 1711 1498 1716 1488 c
	1728 1457 1699 1438 1692 1416 c
	1685 1395 1691 1350 1698 1332 c
	1705 1310 1720 1288 1728 1266 c
	1732 1252 1720 1223 1728 1212 c
	1735 1200 1758 1197 1770 1182 c
	1784 1162 1794 1132 1806 1110 c
	1832 1057 1837 990 1860 936 c
	1883 878 1883 834 1926 792 c
	1934 783 1943 762 1962 774 c
	1976 782 1975 810 1986 822 c
	1996 834 2011 823 2022 840 c
	2039 866 2035 905 2046 936 c
	2060 978 2085 1019 2100 1062 c
	2106 1081 2092 1109 2100 1128 c
	2111 1156 2144 1162 2160 1182 c
	2169 1193 2163 1218 2172 1230 c
	2183 1244 2227 1254 2244 1266 c
	2280 1290 2302 1313 2334 1332 c
	2394 1368 2407 1459 2454 1506 c
	2465 1492 2483 1463 2508 1476 c
	2529 1486 2549 1530 2580 1518 c
	2635 1494 2614 1442 2664 1410 c
	2686 1394 2729 1387 2742 1362 c
	2749 1346 2720 1324 2730 1302 c
	2737 1283 2767 1277 2760 1254 c
	2754 1238 2708 1194 2736 1176 c
	2782 1144 2826 1201 2850 1230 c
	2868 1200 l
	2877 1205 2888 1236 2904 1230 c
	2955 1206 2894 1149 2904 1122 c
	2921 1068 2936 1006 2958 954 c
	2965 935 2951 925 2946 912 c
	2941 900 2949 882 2946 870 c
	2938 840 2902 794 2922 756 c
	2929 741 2950 734 2958 720 c
	2968 698 2967 669 2982 648 c
	2996 627 3027 637 3036 612 c
	3045 583 3012 538 3030 510 c
	3062 455 3143 398 3204 378 c
	3231 419 3208 467 3198 510 c
	3191 537 3216 569 3210 588 c
	3195 632 3171 700 3120 726 c
	3100 735 3008 727 3000 750 c
	2988 780 3043 835 3048 864 c
	3052 889 3042 1031 3114 996 c
	3150 978 l
	3175 965 3181 914 3210 912 c
	3232 910 3250 924 3270 918 c
	3261 892 3268 887 3276 864 c
	3281 847 3259 826 3270 810 c
	3274 803 3304 799 3312 804 c
	3353 829 3382 896 3426 924 c
	3448 938 3513 963 3522 990 c
	3528 1009 3508 1032 3516 1056 c
	3523 1078 3554 1122 3540 1152 c
	3529 1172 3481 1192 3462 1212 c
	3409 1264 3359 1335 3342 1404 c
	3338 1418 3314 1446 3324 1464 c
	3335 1485 3370 1487 3378 1518 c
	3381 1531 3363 1545 3372 1560 c
	3382 1579 3440 1600 3450 1572 c
	3452 1563 3436 1548 3444 1536 c
	3446 1531 3468 1516 3474 1518 c
	3505 1525 3487 1562 3498 1578 c
	3507 1591 3522 1577 3534 1584 c
	3549 1592 3545 1612 3558 1620 c
	3568 1626 3589 1618 3600 1626 c
	3616 1638 3622 1665 3648 1674 c
	3665 1679 3662 1661 3672 1656 c
	3673 1654 3734 1654 3738 1656 c
	3755 1666 3742 1693 3762 1704 c
	3792 1720 3845 1758 3858 1788 c
	3861 1796 3879 1806 3876 1818 c
	3871 1832 3857 1844 3852 1860 c
	3858 1866 l
	3884 1861 3920 1897 3906 1932 c
	3902 1940 3885 1949 3894 1962 c
	3901 1973 3922 1968 3930 1986 c
	3936 2001 3916 2010 3912 2022 c
	3902 2044 3933 2073 3948 2088 c
	3926 2109 3923 2119 3948 2136 c
	3948 2142 l
	3896 2176 3980 2175 3990 2190 c
	3979 2199 3960 2201 3954 2214 c
	3944 2230 3960 2240 3942 2256 c
	3900 2290 3788 2313 3768 2376 c
	3754 2416 3789 2431 3804 2460 c
	3814 2480 3792 2500 3786 2514 c
	3807 2528 3856 2562 3804 2580 c
	3773 2590 3774 2566 3756 2556 c
	3741 2548 3715 2564 3696 2556 c
	3680 2549 3671 2516 3648 2526 c
	3636 2530 3629 2543 3624 2550 c
	3618 2556 3602 2561 3600 2568 c
	3584 2610 3671 2612 3690 2622 c
	3716 2635 3729 2674 3756 2688 c
	3801 2710 3784 2617 3816 2604 c
	3837 2594 3840 2635 3846 2646 c
	3857 2669 3884 2668 3906 2658 c
	3898 2636 3900 2633 3918 2616 c
	3924 2616 l
	3936 2634 l
	3983 2610 3983 2557 4002 2514 c
	4010 2492 3993 2431 4014 2418 c
	4036 2403 4061 2437 4074 2448 c
	4134 2436 l
	4158 2472 4132 2475 4122 2508 c
	4101 2569 4077 2615 4050 2670 c
	4034 2700 3954 2721 3966 2766 c
	3975 2802 4013 2819 4026 2856 c
	4033 2877 4027 2908 4050 2922 c
	4061 2928 4078 2914 4092 2916 c
	4111 2917 4102 2926 4116 2934 c
	4126 2940 4147 2927 4158 2934 c
	4168 2940 4197 2972 4194 2988 c
	4191 2999 4175 3008 4182 3024 c
	4190 3044 4210 3062 4218 3084 c
	4225 3107 4195 3120 4188 3138 c
	4183 3149 4192 3167 4188 3180 c
	4184 3191 4168 3198 4164 3210 c
	4156 3229 4192 3241 4194 3258 c
	4194 3267 4177 3273 4182 3282 c
	4193 3303 4218 3316 4218 3342 c
	4218 3361 4185 3397 4176 3414 c
	4158 3443 4125 3453 4110 3480 c
	4095 3503 4069 3602 4032 3546 c
	4026 3546 l
	4014 3562 3968 3604 3942 3594 c
	3927 3587 3920 3565 3906 3558 c
	3884 3547 3851 3577 3828 3564 c
	3813 3555 3806 3536 3792 3528 c
	3770 3560 3837 3622 3858 3654 c
	3858 3666 l
	0 3666 l
	0 3126 l
	6 3120 l
	30 3102 l
	50 3143 36 3154 78 3168 c
	72 3198 l
	78 3195 90 3186 96 3186 c
	154 3179 87 3244 96 3258 c
	107 3276 144 3294 162 3312 c
	187 3290 241 3281 258 3258 c
	287 3215 229 3184 210 3156 c
	200 3141 182 3135 174 3120 c
	164 3102 188 3090 186 3078 c
	180 3044 141 3035 162 2994 c
	171 3001 183 3013 198 3006 c
	211 2999 211 2982 222 2976 c
	242 2963 303 2996 318 2970 c
	327 2952 321 2918 336 2904 c
	343 2896 367 2873 378 2868 c
	400 2856 415 2888 432 2856 c
	448 2823 359 2770 342 2748 c
	326 2727 262 2646 228 2664 c
	205 2675 186 2711 162 2718 c
	111 2730 49 2706 6 2742 c
	6 2742 l
	0 2742 l
	0 114 l
	6 114 l
	fk
	6 3030 m
	6 3030 l
	54 2988 l
	68 3016 20 3057 0 3078 c
	0 3030 l
	6 3030 l
	fk
	4830 660 m
	4809 628 4751 537 4710 606 c
	4690 638 4754 657 4746 690 c
	4738 720 4676 743 4662 714 c
	4686 690 l
	4658 676 4655 702 4632 708 c
	4599 716 4492 668 4530 624 c
	4560 630 l
	4542 600 l
	4586 563 4591 629 4632 636 c
	4657 585 4557 572 4572 546 c
	4583 524 4594 544 4608 534 c
	4618 525 4610 510 4626 504 c
	4645 495 4663 540 4680 546 c
	4730 562 4778 471 4824 540 c
	4836 540 l
	4836 660 l
	4830 660 l
	fk
	4830 120 m
	4816 99 4814 64 4800 48 c
	4767 11 4693 38 4662 54 c
	4644 6 l
	4638 6 l
	4632 6 l
	4626 0 l
	4836 0 l
	4836 120 l
	4830 120 l
	fk
	4062 3630 m
	4091 3615 4094 3600 4074 3576 c
	4050 3591 4041 3605 4062 3630 c
	fk
	4266 3420 m
	4291 3369 4357 3351 4380 3306 c
	4400 3265 4339 3283 4326 3300 c
	4318 3284 4335 3253 4314 3246 c
	4300 3241 4276 3271 4272 3282 c
	4260 3309 4261 3345 4248 3372 c
	4228 3411 4175 3438 4158 3480 c
	4151 3496 4114 3543 4146 3558 c
	4161 3565 4181 3529 4194 3522 c
	4233 3499 4347 3474 4266 3420 c
	fk
	4518 3270 m
	4498 3308 4511 3329 4524 3366 c
	4527 3376 4534 3404 4554 3396 c
	4602 3375 4547 3274 4518 3270 c
	fk
	4344 3090 m
	4293 3150 4265 3202 4356 3240 c
	4370 3246 4406 3224 4422 3222 c
	4445 3218 4476 3249 4494 3240 c
	4564 3201 4398 3119 4422 3072 c
	4441 3032 4492 3017 4512 2982 c
	4523 2960 4516 2924 4530 2904 c
	4537 2892 4551 2900 4560 2886 c
	4574 2859 4557 2833 4548 2814 c
	4537 2792 4542 2763 4530 2742 c
	4508 2705 4473 2678 4458 2640 c
	4445 2610 4473 2573 4452 2544 c
	4432 2516 4392 2528 4368 2496 c
	4362 2488 4339 2465 4344 2454 c
	4368 2394 4380 2367 4314 2334 c
	4299 2326 4280 2304 4260 2316 c
	4235 2329 4259 2353 4248 2370 c
	4239 2382 4226 2369 4218 2382 c
	4203 2403 4213 2476 4224 2496 c
	4230 2507 4250 2507 4254 2520 c
	4260 2544 4261 2603 4296 2622 c
	4317 2633 4309 2639 4326 2652 c
	4340 2663 4360 2651 4374 2670 c
	4393 2697 4344 2725 4362 2760 c
	4382 2801 4414 2833 4446 2880 c
	4469 2914 4423 2928 4404 2946 c
	4365 2980 4289 3035 4344 3090 c
	fk
	126 3018 m
	138 2999 135 3000 120 2982 c
	104 3000 104 3007 126 3018 c
	fk
	4002 2340 m
	4004 2348 4003 2368 4008 2376 c
	4039 2432 4070 2305 4002 2340 c
	fk
	4320 2310 m
	4334 2292 4331 2291 4320 2274 c
	4297 2285 4297 2298 4320 2310 c
	fk
	4194 2016 m
	4156 2060 4223 2101 4230 2064 c
	4231 2055 4210 2035 4206 2028 c
	4200 2020 4202 2020 4194 2016 c
	fk
	3984 1908 m
	4015 1923 4028 1886 4032 1866 c
	4037 1833 4034 1793 4026 1758 c
	4021 1741 4031 1720 4014 1710 c
	3971 1684 3929 1748 3918 1776 c
	3900 1817 3950 1891 3984 1908 c
	fk
	1164 1614 m
	1122 1578 l
	1107 1607 1136 1636 1164 1614 c
	fk
	4200 1290 m
	4213 1268 4262 1201 4290 1188 c
	4332 1166 4391 1140 4416 1092 c
	4437 1049 4416 928 4374 1014 c
	4368 1014 l
	4360 999 4366 972 4356 960 c
	4339 941 4278 925 4254 936 c
	4236 943 4233 973 4218 978 c
	4198 983 4153 918 4134 948 c
	4124 962 4160 1000 4170 1008 c
	4201 1034 4228 1016 4260 1032 c
	4276 1040 4322 1100 4326 1116 c
	4332 1140 4252 1160 4236 1170 c
	4218 1179 4225 1203 4218 1218 c
	4178 1204 4193 1219 4188 1242 c
	4184 1256 4149 1290 4140 1302 c
	4134 1302 l
	4075 1231 4077 1303 4044 1344 c
	4040 1339 4035 1322 4032 1320 c
	4014 1305 3981 1317 3990 1344 c
	3995 1360 4007 1370 4020 1380 c
	4025 1383 4028 1391 4026 1398 c
	4018 1416 3993 1427 3984 1446 c
	3969 1475 4014 1577 4044 1590 c
	4080 1605 4072 1553 4080 1542 c
	4088 1529 4095 1541 4104 1536 c
	4124 1522 4158 1486 4164 1464 c
	4172 1431 4113 1374 4146 1338 c
	4179 1300 4236 1366 4266 1374 c
	4299 1382 4292 1342 4272 1332 c
	4258 1324 4250 1327 4236 1314 c
	4223 1302 4212 1298 4200 1290 c
	fk
	3564 1548 m
	3574 1551 3604 1528 3606 1518 c
	3607 1506 3561 1460 3552 1458 c
	3532 1453 3478 1467 3498 1506 c
	3509 1528 3544 1541 3564 1548 c
	fk
	804 1326 m
	832 1336 905 1294 852 1266 c
	817 1247 760 1310 804 1326 c
	fk
	4020 1272 m
	4044 1274 4083 1230 4050 1212 c
	4022 1197 3965 1267 4020 1272 c
	fk
	4290 1266 m
	4310 1275 4383 1220 4338 1200 c
	4321 1192 4246 1246 4290 1266 c
	fk
	4098 1230 m
	4131 1248 4195 1185 4152 1170 c
	4127 1161 4054 1206 4098 1230 c
	fk
	4032 1182 m
	4090 1152 4051 1083 4008 1062 c
	3985 1089 4011 1157 4032 1182 c
	fk
	4200 1164 m
	4220 1143 4229 1129 4236 1104 c
	4240 1084 4213 1053 4194 1062 c
	4153 1078 4181 1145 4200 1164 c
	fk
	4266 1134 m
	4272 1134 l
	4288 1114 4285 1111 4266 1098 c
	4251 1115 4251 1116 4266 1134 c
	fk
	2658 1044 m
	2680 1021 2679 949 2658 924 c
	2625 956 2625 1011 2658 1044 c
	fk
	2100 852 m
	2116 859 2169 820 2178 804 c
	2201 756 2185 704 2136 684 c
	2093 666 2003 701 2034 762 c
	2042 778 2059 788 2070 804 c
	2078 816 2083 844 2100 852 c
	fk
	3894 474 m
	3922 445 3910 450 3900 420 c
	3894 402 3913 397 3912 384 c
	3909 356 3845 329 3822 324 c
	3783 314 3766 356 3732 348 c
	3715 343 3668 315 3654 324 c
	3638 333 3647 356 3630 366 c
	3605 379 3602 335 3576 342 c
	3544 349 3564 371 3546 384 c
	3532 393 3515 372 3504 378 c
	3442 408 3466 558 3528 528 c
	3541 544 3531 555 3540 570 c
	3546 581 3560 577 3570 582 c
	3593 593 3596 611 3612 624 c
	3623 632 3647 633 3660 642 c
	3682 658 3692 696 3714 708 c
	3731 717 3762 709 3780 720 c
	3791 726 3786 741 3792 750 c
	3805 773 3833 779 3846 804 c
	3851 815 3858 847 3876 852 c
	3891 855 3917 842 3936 846 c
	3945 847 3966 859 3978 852 c
	4019 827 3954 808 3948 792 c
	3940 773 3970 769 3966 750 c
	3958 720 3925 694 3918 666 c
	3909 633 3970 634 3978 606 c
	3990 556 3931 492 3894 474 c
	fk
	4050 486 m
	4075 473 4125 499 4140 516 c
	4145 521 4158 551 4170 552 c
	4171 552 4196 535 4200 534 c
	4182 498 l
	4243 457 4152 461 4170 426 c
	4182 401 4236 343 4218 318 c
	4206 302 4193 311 4182 300 c
	4175 293 4169 275 4158 270 c
	4111 246 4143 356 4098 336 c
	4079 327 4091 313 4086 300 c
	4071 266 4034 256 4008 270 c
	4010 285 4038 323 4032 336 c
	4014 371 3970 336 3960 378 c
	3954 398 3988 408 3996 426 c
	4015 473 4002 537 4032 576 c
	4083 644 4153 633 4218 660 c
	4249 673 4265 716 4296 732 c
	4323 745 4342 705 4332 684 c
	4319 659 4290 653 4278 648 c
	4253 637 4236 608 4212 600 c
	4202 596 4178 602 4170 600 c
	4160 597 4152 570 4140 564 c
	4126 557 4105 565 4092 558 c
	4066 543 4057 508 4050 486 c
	fk
	2706 720 m
	2726 706 2742 684 2730 660 c
	2701 664 2693 695 2706 720 c
	fk
	4404 678 m
	4422 654 l
	4416 648 l
	4392 666 l
	4404 678 l
	fk
	4380 636 m
	4406 631 4444 619 4440 594 c
	4437 580 4444 552 4428 546 c
	4381 527 4365 607 4380 636 c
	fk
	2910 444 m
	2900 448 2879 452 2874 462 c
	2860 484 2882 503 2850 522 c
	2826 535 2797 532 2784 564 c
	2774 587 2771 627 2808 618 c
	2869 602 2962 549 3000 486 c
	3011 465 3015 439 3030 420 c
	3049 394 3059 408 3078 402 c
	3124 386 3141 316 3186 294 c
	3204 284 3227 279 3246 270 c
	3276 254 3313 186 3294 150 c
	3243 57 3154 167 3102 198 c
	3073 214 3040 234 3012 252 c
	2995 262 2978 253 2964 276 c
	2951 294 2936 326 2928 348 c
	2923 359 2933 379 2928 390 c
	2913 417 2897 407 2910 444 c
	fk
	4254 522 m
	4254 516 l
	4218 510 l
	4222 536 4234 538 4254 522 c
	fk
	4470 516 m
	4480 518 4548 519 4536 492 c
	4529 478 4477 454 4464 450 c
	4422 436 4434 507 4470 516 c
	fk
	4398 468 m
	4443 468 4401 389 4368 408 c
	4331 427 4374 468 4398 468 c
	fk
	2832 444 m
	2865 459 2888 394 2856 378 c
	2835 367 2802 430 2832 444 c
	fk
	4686 312 m
	4692 325 4702 340 4710 354 c
	4722 376 4766 419 4782 372 c
	4785 360 4768 350 4764 342 c
	4747 308 4721 282 4686 312 c
	fk
	2880 336 m
	2904 276 l
	2868 264 2846 313 2880 336 c
	fk
	3312 312 m
	3345 320 3413 265 3354 246 c
	3305 229 3238 293 3312 312 c
	fk
	4626 294 m
	4596 264 l
	4566 299 4590 329 4626 294 c
	fk
	3486 276 m
	3461 239 3442 240 3408 264 c
	3428 304 3455 306 3486 276 c
	fk
	4392 204 m
	4370 182 4349 166 4326 186 c
	4340 214 4369 226 4392 204 c
	fk
	4470 222 m
	4527 236 4462 150 4458 144 c
	4430 103 4390 118 4362 102 c
	4350 95 4343 76 4332 72 c
	4320 67 4299 92 4302 102 c
	4304 112 4320 113 4326 120 c
	4353 152 4423 210 4470 222 c
	fk
	4296 168 m
	4242 88 4218 245 4296 168 c
	fk
	3456 144 m
	3504 192 3607 153 3660 132 c
	3703 113 3744 149 3780 114 c
	3731 40 3630 41 3558 60 c
	3517 70 3485 54 3444 72 c
	3409 86 3344 66 3318 96 c
	3309 105 3333 162 3348 168 c
	3359 172 3368 153 3378 150 c
	3413 138 3421 195 3456 144 c
	fk
	4104 168 m
	4148 179 4180 128 4122 114 c
	4060 98 4033 150 4104 168 c
	fk
	3888 138 m
	3900 102 l
	3925 127 3958 165 3996 150 c
	4018 140 4016 111 3996 102 c
	3968 89 3798 63 3888 138 c
	fk
	3810 120 m
	3831 129 3857 88 3828 72 c
	3803 58 3784 108 3810 120 c
	fk
	4686 90 m
	4667 71 4664 67 4644 84 c
	4656 108 4666 109 4686 90 c
	fk
	3996 60 m
	4005 78 4064 118 4080 90 c
	4104 46 4012 46 3996 60 c
	fk
} bd
/OutlineInternal1Dimblack {
	726 3660 m
	780 3630 l
	804 3570 l
	876 3522 l
	906 3468 l
	984 3450 l
	1068 3396 l
	1045 3351 1123 3345 1152 3312 c
	1092 3270 l
	1074 3204 l
	978 3168 l
	930 3084 l
	fk
	1680 3660 m
	1666 3618 1636 3575 1626 3534 c
	1619 3508 1642 3496 1620 3468 c
	1599 3442 1572 3478 1554 3450 c
	1541 3429 1573 3419 1560 3402 c
	1551 3391 1543 3402 1536 3396 c
	1507 3371 1470 3338 1470 3294 c
	1566 3246 l
	1620 3258 l
	1644 3234 l
	fk
	2946 3660 m
	2940 3636 l
	2988 3600 l
	2958 3552 l
	2910 3576 l
	2895 3547 2905 3469 2880 3450 c
	2839 3418 2848 3489 2832 3498 c
	2823 3502 2778 3479 2772 3474 c
	2751 3456 2762 3414 2754 3390 c
	2739 3347 2722 3319 2688 3294 c
	2677 3286 2669 3265 2676 3252 c
	2701 3200 2751 3211 2790 3192 c
	2759 3171 2772 3165 2772 3132 c
	fk
	3642 3660 m
	3636 3629 3602 3648 3588 3624 c
	3573 3599 3644 3538 3660 3528 c
	3648 3474 l
	3546 3444 l
	3546 3402 l
	3498 3366 l
	3534 3342 l
	3504 3327 3476 3296 3498 3264 c
	3414 3198 l
	3372 3180 l
	3360 3108 l
	fk
	4572 3372 m
	4830 3432 l
	fk
	4212 3330 m
	4266 3294 l
	fk
	4512 3288 m
	4494 3240 l
	fk
	246 3264 m
	312 3282 l
	348 3258 l
	fk
	4302 3252 m
	4314 3216 l
	fk
	4074 3186 m
	4084 3189 4119 3217 4128 3216 c
	4151 3212 4137 3187 4164 3210 c
	fk
	1866 3210 m
	1884 3132 l
	1860 3078 l
	1890 3036 l
	1824 2982 l
	1752 2898 l
	fk
	4374 3084 m
	4374 3023 4439 3013 4464 2964 c
	4468 2954 4491 2901 4488 2892 c
	4480 2870 4451 2811 4470 2784 c
	4474 2776 4527 2761 4536 2760 c
	fk
	1326 2940 m
	1464 2922 l
	fk
	2364 2916 m
	2390 2911 2415 2896 2442 2892 c
	2476 2886 2521 2911 2544 2856 c
	2548 2844 2533 2824 2532 2814 c
	2529 2797 2560 2769 2574 2760 c
	2625 2725 2667 2753 2700 2688 c
	2708 2671 2716 2664 2706 2646 c
	2668 2581 2623 2609 2574 2574 c
	2560 2564 2562 2545 2550 2538 c
	2508 2513 2473 2547 2454 2490 c
	2508 2442 l
	2568 2430 l
	2610 2370 l
	2586 2334 2560 2341 2604 2298 c
	2589 2288 2530 2274 2508 2280 c
	2497 2282 2477 2301 2466 2298 c
	2429 2285 2392 2228 2346 2244 c
	2339 2246 2334 2260 2328 2262 c
	2310 2264 2280 2223 2262 2220 c
	2240 2216 2217 2247 2196 2244 c
	2165 2238 2146 2199 2118 2190 c
	2082 2178 2069 2237 2028 2196 c
	fk
	426 2856 m
	438 2851 460 2835 474 2838 c
	487 2840 497 2853 510 2850 c
	550 2839 583 2803 624 2790 c
	645 2782 665 2802 684 2796 c
	719 2784 769 2739 810 2760 c
	fk
	2682 1884 m
	2682 1905 2680 1955 2688 1968 c
	2699 1987 2742 2024 2742 2046 c
	2742 2069 2710 2105 2706 2130 c
	2701 2158 2727 2176 2730 2202 c
	2730 2211 2713 2227 2742 2232 c
	2799 2241 2791 2151 2850 2142 c
	2861 2140 2874 2155 2886 2154 c
	2906 2150 2926 2112 2946 2112 c
	2958 2112 2975 2133 2988 2136 c
	2998 2137 3020 2120 3030 2124 c
	3044 2129 3041 2153 3060 2160 c
	3087 2169 3134 2192 3138 2232 c
	3139 2247 3116 2249 3114 2262 c
	3112 2268 3133 2297 3138 2304 c
	3162 2292 l
	3186 2328 l
	3126 2400 l
	3068 2371 3086 2398 3048 2430 c
	2984 2482 2960 2498 2988 2580 c
	2992 2593 2981 2615 2988 2628 c
	3003 2655 3058 2632 3078 2628 c
	3105 2621 3132 2652 3156 2658 c
	3182 2664 3211 2630 3234 2634 c
	3251 2636 3272 2660 3288 2670 c
	3323 2690 3396 2671 3420 2718 c
	3427 2732 3403 2748 3402 2760 c
	3400 2770 3420 2794 3426 2802 c
	3459 2842 3487 2808 3528 2808 c
	fk
	4560 2826 m
	4598 2826 4618 2781 4632 2754 c
	4653 2710 4662 2663 4674 2616 c
	4685 2570 4662 2517 4674 2472 c
	4691 2403 4652 2312 4632 2250 c
	4620 2215 4621 2181 4608 2148 c
	4594 2115 4601 2073 4590 2040 c
	4567 1971 4516 1910 4494 1842 c
	4482 1806 4493 1763 4482 1728 c
	4471 1695 4440 1674 4428 1644 c
	4389 1551 4341 1454 4284 1368 c
	fk
	2142 2814 m
	2190 2778 l
	2262 2808 l
	fk
	4368 2766 m
	4426 2766 4427 2714 4416 2670 c
	4412 2654 4422 2629 4416 2616 c
	4398 2581 4364 2581 4344 2556 c
	4329 2537 4330 2504 4302 2490 c
	4283 2480 4262 2503 4248 2508 c
	fk
	258 2670 m
	270 2574 l
	fk
	264 2436 m
	339 2511 428 2580 540 2580 c
	fk
	552 2580 m
	621 2556 584 2520 618 2472 c
	630 2454 656 2453 666 2430 c
	670 2418 662 2400 666 2388 c
	674 2355 707 2328 732 2304 c
	fk
	4146 2454 m
	4218 2418 l
	fk
	4044 2418 m
	4038 2388 l
	fk
	2898 1878 m
	2910 1914 l
	2940 1896 l
	2976 1926 l
	2994 1878 l
	3036 1902 l
	3052 1877 3059 1799 3090 1788 c
	3097 1785 3118 1798 3126 1800 c
	3139 1802 3145 1788 3156 1788 c
	3211 1788 3212 1855 3198 1884 c
	3230 1911 3232 1894 3264 1884 c
	3287 1876 3300 1897 3330 1878 c
	3343 1894 3355 1916 3378 1920 c
	3407 1924 3426 1877 3456 1926 c
	3471 1951 3414 1981 3414 2010 c
	3414 2037 3472 2058 3468 2088 c
	3463 2112 3421 2146 3396 2142 c
	3391 2141 3369 2129 3366 2130 c
	3346 2134 3336 2173 3336 2190 c
	3336 2215 3359 2196 3366 2220 c
	3366 2221 3354 2232 3360 2238 c
	3380 2258 3414 2256 3438 2280 c
	3431 2289 3408 2311 3408 2322 c
	3408 2349 3473 2392 3498 2388 c
	3524 2383 3561 2349 3588 2352 c
	3610 2353 3605 2394 3630 2388 c
	3655 2381 3653 2342 3684 2340 c
	3724 2336 3724 2393 3762 2400 c
	fk
	3882 2298 m
	4002 2346 l
	fk
	4308 2328 m
	4314 2310 l
	fk
	4314 2274 m
	4303 2208 4261 2127 4218 2076 c
	fk
	4188 2022 m
	4179 1968 4090 1857 4032 1848 c
	fk
	1746 1974 m
	1764 1967 1785 1973 1806 1968 c
	1824 1963 1836 1943 1854 1938 c
	1886 1927 1920 1959 1938 1980 c
	2040 1914 l
	2064 1920 l
	2160 1878 l
	fk
	3906 1908 m
	3954 1884 l
	fk
	1620 1866 m
	1634 1853 1647 1856 1662 1848 c
	1682 1835 1677 1812 1698 1800 c
	1721 1786 1758 1789 1782 1776 c
	1804 1763 1793 1741 1812 1728 c
	1832 1713 1853 1715 1866 1734 c
	1896 1692 l
	1884 1632 l
	1896 1596 l
	1950 1586 1928 1555 1950 1512 c
	1958 1494 1983 1487 1998 1476 c
	1994 1470 1978 1446 1980 1440 c
	1984 1424 2011 1429 2010 1410 c
	2008 1390 1985 1394 1974 1386 c
	1942 1363 1951 1332 1974 1314 c
	1952 1288 1935 1223 1974 1200 c
	1991 1189 2030 1207 2034 1170 c
	2038 1120 1877 1110 1944 1044 c
	1836 984 l
	fk
	2364 1806 m
	2346 1764 l
	2328 1710 l
	2294 1743 2202 1723 2268 1680 c
	2202 1644 l
	2184 1488 l
	2134 1520 2099 1436 2142 1404 c
	2154 1394 2180 1361 2196 1356 c
	2221 1347 2228 1392 2250 1392 c
	2256 1392 2274 1377 2280 1374 c
	2328 1428 l
	2388 1404 l
	fk
	2472 1806 m
	2494 1798 2535 1794 2550 1770 c
	2557 1756 2550 1737 2568 1728 c
	2587 1717 2627 1729 2640 1704 c
	2654 1675 2551 1639 2628 1614 c
	2676 1686 2664 1583 2694 1554 c
	fk
	1428 1800 m
	1432 1771 1466 1702 1446 1668 c
	1428 1638 1295 1600 1254 1626 c
	1226 1642 1199 1680 1164 1680 c
	fk
	3972 1710 m
	3972 1652 4008 1630 4032 1584 c
	fk
	846 1548 m
	846 1501 875 1502 888 1464 c
	905 1412 865 1366 852 1326 c
	fk
	3186 1518 m
	3195 1458 3254 1425 3282 1386 c
	3299 1361 3320 1321 3336 1296 c
	3348 1275 3332 1239 3342 1218 c
	3360 1173 3378 1132 3378 1080 c
	fk
	4830 1494 m
	4524 1272 l
	4356 1152 l
	fk
	684 1302 m
	792 1308 l
	fk
	870 1296 m
	895 1291 911 1256 924 1236 c
	948 1193 985 1149 1020 1122 c
	1049 1098 1090 1086 1122 1068 c
	1168 1040 1213 1002 1254 978 c
	1321 937 1472 947 1548 966 c
	1649 991 1754 1004 1794 1122 c
	fk
	2658 1044 m
	2664 1085 2692 1176 2736 1176 c
	fk
	3402 1038 m
	3468 954 l
	fk
	3516 984 m
	3550 984 3555 951 3570 930 c
	3591 899 3602 871 3618 834 c
	3626 813 3612 783 3618 762 c
	3622 742 3633 694 3624 672 c
	3615 652 3606 641 3606 618 c
	fk
	4134 954 m
	3978 846 l
	fk
	2658 930 m
	2658 836 2665 784 2712 714 c
	fk
	2016 840 m
	2070 816 l
	fk
	3300 804 m
	3300 710 3269 642 3204 588 c
	fk
	2190 756 m
	2252 756 2309 712 2364 690 c
	2379 683 2401 694 2418 690 c
	2450 681 2506 697 2538 684 c
	2559 675 2582 665 2610 672 c
	2640 679 2664 690 2700 690 c
	fk
	2082 678 m
	2046 540 l
	2028 402 l
	1992 306 l
	1986 174 l
	1956 126 l
	1944 0 l
	fk
	2730 666 m
	2730 630 2758 626 2784 618 c
	fk
	3516 534 m
	3600 504 l
	3648 540 l
	3774 612 l
	3840 612 l
	3882 654 l
	3918 654 l
	fk
	4440 606 m
	4524 630 l
	fk
	4194 534 m
	4284 564 l
	4374 594 l
	fk
	3966 564 m
	4014 540 l
	fk
	3006 474 m
	3054 480 l
	fk
	4014 270 m
	3942 252 l
	3840 168 l
	3750 132 l
	fk
	3294 144 m
	3324 132 l
	fk
	3618 42 m
	3612 0 l
	fk
} bd
/OutlineInternal2Dimblack {
	3588 3444 m
	3602 3400 3654 3369 3696 3396 c
	3708 3403 3715 3438 3738 3426 c
	3763 3411 3749 3379 3762 3360 c
	3804 3292 3862 3380 3894 3402 c
	3918 3372 3903 3382 3894 3354 c
	3890 3342 3909 3335 3906 3324 c
	3899 3304 3876 3290 3870 3270 c
	3891 3259 3907 3233 3930 3222 c
	3950 3211 3968 3236 3984 3234 c
	4023 3227 4093 3165 4080 3138 c
	fk
	1644 3234 m
	1680 3264 l
	1698 3235 1729 3179 1770 3186 c
	1779 3187 1790 3200 1800 3204 c
	1819 3210 1848 3200 1866 3210 c
	1879 3217 1879 3240 1896 3246 c
	1911 3251 1941 3222 1956 3228 c
	1969 3233 1967 3261 1980 3270 c
	1997 3281 2037 3293 2058 3300 c
	2083 3308 2130 3281 2154 3276 c
	2177 3270 2216 3288 2238 3294 c
	2277 3303 2308 3271 2334 3264 c
	2348 3259 2427 3320 2442 3330 c
	2478 3264 l
	2550 3294 l
	2640 3258 l
	2676 3270 l
	fk
	1152 3312 m
	1193 3312 1266 3314 1296 3288 c
	1309 3275 1299 3241 1320 3234 c
	1344 3224 1347 3277 1362 3288 c
	1388 3307 1435 3312 1470 3312 c
	fk
	4014 3102 m
	4019 3132 4044 3124 4068 3132 c
	fk
	4338 3084 m
	4422 3090 l
	fk
	780 2994 m
	816 2940 l
	822 2844 l
	fk
	1602 2910 m
	1615 2905 1634 2888 1650 2892 c
	1666 2896 1696 2929 1716 2922 c
	1725 2917 1730 2902 1740 2898 c
	1780 2880 1843 2889 1866 2844 c
	fk
	624 2790 m
	522 2742 l
	546 2580 l
	fk
	4470 2784 m
	4416 2736 l
	fk
	2706 2658 m
	2808 2652 l
	2910 2610 l
	2994 2634 l
	fk
	4302 2490 m
	4350 2472 l
	fk
	2508 2280 m
	2500 2232 2503 2206 2544 2166 c
	2562 2196 l
	2706 2136 l
	fk
	3132 2220 m
	3168 2172 l
	3246 2178 l
	3282 2142 l
	3342 2160 l
	fk
	3456 1956 m
	3516 2046 l
	3564 2040 l
	3636 2076 l
	3702 2022 l
	3762 2076 l
	3846 2046 l
	3870 2058 l
	3912 2046 l
	fk
	3300 1878 m
	3252 1788 l
	3252 1710 l
	3282 1689 3302 1681 3336 1698 c
	3365 1654 3282 1662 3282 1608 c
	fk
	1992 1476 m
	2088 1482 l
	2124 1440 l
	fk
	3336 1296 m
	3378 1314 l
	fk
	3264 654 m
	3340 602 3350 462 3462 444 c
	fk
	2022 384 m
	2088 360 l
	2388 306 l
	2610 300 l
	2754 282 l
	2862 300 l
	fk
	2934 330 m
	2892 318 l
	fk
} bd
/OutlineNational1Black {
	330 3648 m
	323 3609 274 3620 258 3588 c
	250 3573 234 3514 240 3498 c
	243 3488 256 3487 252 3474 c
	239 3436 194 3438 174 3408 c
	151 3373 173 3371 186 3342 c
	189 3332 180 3317 180 3306 c
	fk
	1374 2358 m
	1420 2388 1468 2397 1518 2418 c
	1543 2428 1562 2459 1590 2466 c
	1645 2479 1695 2432 1740 2418 c
	1770 2407 1780 2445 1806 2448 c
	1853 2451 1843 2407 1872 2400 c
	1880 2397 1906 2411 1920 2406 c
	1929 2402 1936 2386 1950 2394 c
	1958 2398 1965 2408 1962 2418 c
	1956 2434 1932 2472 1938 2490 c
	1949 2525 1979 2550 2010 2520 c
	2043 2553 2057 2531 2088 2544 c
	2109 2552 2148 2580 2166 2592 c
	2188 2606 2206 2647 2214 2670 c
	2217 2681 2205 2691 2208 2700 c
	2215 2721 2254 2708 2268 2730 c
	2284 2755 2263 2793 2274 2814 c
	2288 2840 2327 2839 2346 2862 c
	2351 2869 2372 2906 2370 2916 c
	2365 2932 2346 2936 2352 2958 c
	2356 2976 2373 2983 2382 3000 c
	2398 3032 2345 3049 2388 3078 c
	2397 3084 2403 3069 2412 3072 c
	2432 3078 2424 3107 2442 3114 c
	2452 3117 2473 3096 2484 3096 c
	2500 3094 2523 3107 2544 3102 c
	2568 3095 2601 3073 2628 3078 c
	2671 3085 2708 3175 2766 3144 c
	2800 3125 2814 3071 2850 3054 c
	2906 3025 3003 3072 3054 3072 c
	3074 3072 3075 3044 3090 3036 c
	3099 3030 3177 3030 3186 3036 c
	3197 3043 3195 3062 3210 3072 c
	3236 3089 3311 3126 3348 3114 c
	3373 3105 3406 3074 3432 3072 c
	3462 3069 3457 3162 3492 3174 c
	3522 3184 3556 3141 3582 3150 c
	3651 3173 3697 3210 3780 3210 c
	3793 3210 3816 3221 3828 3216 c
	3839 3210 3846 3192 3858 3186 c
	3869 3180 3889 3191 3900 3186 c
	3914 3178 3913 3158 3930 3150 c
	3960 3134 3994 3137 4014 3102 c
	4044 3046 3977 3015 3966 2982 c
	3961 2967 3971 2947 3966 2934 c
	3955 2909 3920 2893 3912 2868 c
	3906 2850 3918 2825 3912 2808 c
	3900 2772 3857 2747 3846 2712 c
	3840 2695 3852 2680 3852 2664 c
	fk
	810 3144 m
	879 3144 892 3098 948 3066 c
	961 3058 983 3063 996 3054 c
	1014 3040 1011 3022 1032 3012 c
	fk
	786 2328 m
	786 2346 781 2370 786 2388 c
	788 2397 807 2420 804 2430 c
	799 2444 774 2452 768 2466 c
	762 2476 762 2539 768 2550 c
	782 2578 825 2593 840 2622 c
	851 2645 827 2665 822 2682 c
	812 2710 806 2815 822 2838 c
	855 2888 895 2782 912 2778 c
	925 2774 935 2808 954 2796 c
	963 2789 964 2757 966 2748 c
	fk
	1278 1848 m
	1288 1869 1309 1874 1320 1890 c
	1332 1908 1304 1934 1320 1956 c
	1329 1969 1348 1967 1356 1980 c
	1364 1994 1345 2008 1338 2016 c
	1314 2039 1236 2112 1296 2142 c
	1332 2160 1377 2113 1404 2100 c
	1442 2080 1503 2101 1542 2082 c
	1567 2069 1598 1987 1644 2010 c
	1671 2023 1694 2046 1722 2058 c
	1737 2064 1760 2057 1770 2076 c
	1777 2090 1751 2103 1770 2118 c
	1800 2141 1855 2150 1878 2196 c
	1889 2219 1870 2241 1890 2268 c
	1904 2287 1955 2283 1974 2274 c
	1996 2262 1987 2241 1998 2226 c
	2008 2209 2032 2207 2040 2196 c
	2049 2181 2046 2152 2052 2136 c
	2060 2110 2089 2094 2100 2070 c
	2112 2039 2061 2029 2082 2004 c
	2100 1980 2162 1965 2190 1956 c
	fk
	6 2010 m
	84 1992 l
	156 2034 l
	fk
	0 2016 m
	6 2010 l
	fk
	2496 1884 m
	2509 1886 2524 1899 2538 1896 c
	2563 1889 2584 1864 2616 1872 c
	2629 1875 2660 1896 2676 1890 c
	2689 1884 2688 1869 2706 1872 c
	2734 1876 2751 1905 2778 1914 c
	2794 1919 2828 1899 2844 1896 c
	2859 1892 2872 1909 2886 1902 c
	2912 1887 2948 1803 2958 1776 c
	2977 1716 2866 1652 2892 1602 c
	2919 1546 2951 1627 2988 1608 c
	3002 1600 3001 1580 3018 1572 c
	3039 1561 3057 1565 3072 1536 c
	3085 1509 3062 1459 3078 1434 c
	3084 1422 3123 1417 3114 1398 c
	3108 1385 3092 1385 3084 1374 c
	3068 1352 3083 1308 3096 1290 c
	3149 1334 3140 1315 3192 1284 c
	3211 1272 3234 1300 3246 1278 c
	3255 1258 3254 1221 3264 1194 c
	3270 1174 3322 1154 3306 1128 c
	3288 1098 3252 1104 3228 1092 c
	3188 1072 3150 1027 3150 984 c
	fk
	3612 1650 m
	3594 1667 3568 1691 3588 1716 c
	3594 1724 3614 1727 3618 1740 c
	3623 1763 3589 1772 3612 1806 c
	3669 1892 3814 1868 3858 1782 c
	fk
	3030 630 m
	3037 677 3084 639 3114 654 c
	3134 664 3135 678 3162 678 c
	fk
} bd
/OutlineNational2Black {
	390 3654 m
	486 3564 l
	510 3486 l
	564 3390 l
	fk
	246 3474 m
	299 3474 293 3426 336 3402 c
	352 3392 379 3404 396 3396 c
	430 3378 447 3343 468 3318 c
	fk
	3576 3150 m
	3576 3115 3591 3053 3606 3024 c
	3612 3011 3631 3000 3624 2982 c
	3608 2944 3607 2890 3588 2856 c
	3573 2831 3539 2830 3528 2814 c
	3518 2800 3543 2781 3534 2766 c
	3519 2742 3468 2728 3492 2682 c
	3507 2650 3546 2668 3570 2670 c
	3600 2672 3608 2695 3630 2706 c
	3645 2713 3653 2684 3672 2694 c
	3705 2710 3724 2738 3750 2688 c
	fk
	3966 2934 m
	4026 2898 l
	fk
	1140 2604 m
	1164 2604 1244 2609 1266 2598 c
	1286 2586 1301 2553 1314 2538 c
	1356 2485 1394 2427 1374 2346 c
	1368 2323 1351 2307 1344 2286 c
	1336 2262 1351 2231 1344 2208 c
	1336 2186 1300 2149 1284 2130 c
	fk
	1926 2394 m
	1914 2340 l
	1944 2286 l
	fk
	1746 2058 m
	1746 2034 1763 1989 1752 1968 c
	1738 1943 1700 1958 1680 1950 c
	1645 1935 1596 1844 1596 1806 c
	fk
	2640 1470 m
	2664 1499 2672 1523 2688 1554 c
	2700 1578 2709 1559 2724 1566 c
	2735 1571 2750 1603 2754 1614 c
	2768 1658 2752 1706 2808 1734 c
	2827 1743 2842 1720 2862 1734 c
	2884 1748 2872 1754 2874 1770 c
	2876 1796 2918 1800 2940 1800 c
	fk
	3072 1536 m
	3111 1536 3143 1503 3186 1518 c
	3219 1529 3192 1568 3210 1590 c
	3244 1633 3259 1612 3300 1596 c
	3314 1589 3319 1608 3330 1614 c
	3357 1627 3374 1590 3378 1572 c
	fk
	2958 924 m
	3046 938 2974 1091 2964 1134 c
	2956 1163 2985 1202 2970 1230 c
	2958 1251 2904 1270 2904 1296 c
	2904 1319 2944 1321 2952 1344 c
	2957 1359 2937 1366 2940 1380 c
	2945 1415 3049 1424 3078 1434 c
	fk
	3288 1110 m
	3299 1087 3338 1073 3366 1080 c
	3378 1083 3410 1100 3420 1086 c
	3425 1077 3408 1036 3402 1032 c
	3376 1015 3338 1002 3318 972 c
	3298 942 3315 925 3270 918 c
	fk
} bd
/OutlineMountainDimblack {
	2478 1806 m
	2430 1821 2380 1796 2334 1812 c
	2303 1822 2278 1831 2250 1848 c
	2221 1864 2181 1867 2154 1884 c
	2123 1902 2152 1965 2190 1956 c
	2218 1948 2256 1947 2286 1938 c
	2321 1926 2351 1899 2388 1890 c
	2418 1882 2490 1916 2502 1884 c
	2503 1878 2481 1812 2478 1806 c
	fk
} bd
/OutlineCoastlineBlue {
	642 3306 m
	606 3270 l
	635 3255 725 3263 738 3288 c
	715 3306 661 3306 696 3348 c
	786 3312 l
	810 3318 l
	846 3282 l
	900 3264 l
	883 3239 828 3200 792 3222 c
	783 3227 767 3265 750 3240 c
	734 3217 760 3187 774 3174 c
	813 3134 897 3058 828 3012 c
	817 3004 792 2999 780 2994 c
	721 2969 657 3052 624 3078 c
	613 3085 600 3110 588 3114 c
	572 3117 537 3111 516 3120 c
	498 3127 485 3142 468 3150 c
	448 3158 411 3124 390 3132 c
	356 3143 354 3209 312 3174 c
	295 3190 283 3225 312 3240 c
	310 3239 325 3232 330 3234 c
	347 3241 343 3265 360 3276 c
	368 3281 369 3266 378 3270 c
	396 3276 390 3304 408 3312 c
	423 3319 436 3291 444 3282 c
	489 3327 527 3361 582 3384 c
	594 3389 636 3412 642 3378 c
	647 3346 604 3343 642 3306 c
	fk
	3162 3372 m
	3176 3378 3201 3357 3198 3342 c
	3194 3328 3179 3318 3174 3306 c
	3165 3285 3181 3257 3180 3240 c
	3178 3223 3125 3192 3114 3186 c
	3092 3173 3070 3194 3078 3216 c
	3083 3233 3103 3242 3114 3258 c
	3133 3286 3122 3354 3162 3372 c
	fk
	1164 2802 m
	1182 2792 1196 2810 1212 2802 c
	1243 2784 1234 2711 1206 2700 c
	1176 2687 1158 2721 1128 2706 c
	1164 2646 l
	1140 2622 l
	1116 2574 l
	1074 2586 l
	978 2634 l
	972 2688 l
	960 2748 l
	966 2744 980 2731 990 2736 c
	1001 2741 996 2758 1002 2766 c
	1015 2785 1078 2782 1032 2814 c
	1037 2823 1058 2833 1050 2850 c
	1040 2868 1006 2899 1014 2922 c
	1018 2934 1032 2940 1038 2952 c
	1046 2968 1022 2987 1032 3006 c
	1045 3033 1128 3117 1158 3108 c
	1186 3098 1204 3071 1236 3066 c
	1253 3063 1264 3087 1278 3084 c
	1291 3080 1337 3030 1344 3018 c
	1355 2995 1332 2979 1326 2964 c
	1319 2948 1332 2926 1332 2916 c
	1330 2896 1307 2899 1296 2892 c
	1246 2859 1219 2924 1170 2892 c
	1143 2874 1192 2853 1182 2832 c
	1175 2818 1166 2818 1164 2802 c
	fk
	1626 2970 m
	1614 2899 1528 2834 1464 2808 c
	1457 2805 1403 2826 1392 2832 c
	1488 2946 l
	1518 2994 l
	1626 2970 l
	fk
	1866 2844 m
	1891 2856 1914 2836 1944 2844 c
	2000 2858 2013 2883 2076 2868 c
	2096 2862 2157 2826 2142 2802 c
	2113 2757 2046 2847 2010 2826 c
	1977 2806 2006 2769 1980 2754 c
	1972 2749 1954 2754 1950 2760 c
	1928 2788 1872 2804 1866 2844 c
	fk
} bd
{
	currentdict end 3 1 roll [ exch /setgray load ] cvx def begin
}{
	currentdict end 5 1 roll [ 4 1 roll /setrgbcolor load ] cvx def begin
}{
	currentdict end 6 1 roll [ 5 1 roll /setcmykcolor load ] cvx def begin
} bind VisitColors
/ChangeController false def
s
MapUnitLetterFont z
{
	exch load exch load
	2 index [ exch n 0 0 m true charpath pathbbox 3 2 roll add -2 div 3 1 roll add -2 div exch ] 3 1 roll
	4 dict begin /Contrast xd /Paint xd /Offset xd /Letter xd currentdict end
	currentdict end 3 1 roll
	Powers 2 index 3 2 roll put
	[ /Power 2 index {
		ChangeController {
			Power GetControlledPower
			/ChangeController false def
		} if
	} bind /exec load /def load ] cvx def
	begin
} VisitPowers
r
/FleetTroops FleetTroopBBox /PaintFleet load CreateTroops def
/ArmyTroops ArmyTroopBBox /PaintArmy load CreateTroops def
/Centers <<
	{ pop pop true } bind
	{ pop pop true } bind
	VisitSupplies
>> def
/HomeCenters HomeCenterBBox /PaintHome load CreateTroops def
/SupplyCenters SupplyCenterBBox /PaintSupply load CreateTroops def
{ currentdict end 4 1 roll [ HomeCenters 4 2 roll 4 index ] cvx def begin } bind
{ currentdict end 4 1 roll [ SupplyCenters 4 2 roll 4 index ] cvx def begin } bind
VisitSupplies
/BRITAINCENTER /BRITAIN ld
/CHINACENTER /CHINA ld
/FRANCECENTER /FRANCE ld
/HOLLANDCENTER /HOLLAND ld
/JAPANCENTER /JAPAN ld
/RUSSIACENTER /RUSSIA ld
/TURKEYCENTER /TURKEY ld
/UNOWNEDCENTER /UNOWNED ld
%%EndSetup
