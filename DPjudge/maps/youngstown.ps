%!PS-Adobe-3.0
%%Title: Diplomacy Map (Youngstown)
%%Creator: dpmap, using a map created with DPeye by Mario Huys (woelpad@yahoo.com)
%%DocumentPaperSizes: A4
%%LanguageLevel: 2
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentNeededResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndComments

%%BeginDefaults
%%PageResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndDefaults

% INFO
%  764  818 ACI    Arctic Circle
%  315  290 ADE    Gulf of Aden
%  217  693 ADR    Adriatic Sea
%  222  597 AEG    Aegean Sea
%  473  421 AFG    Afghanistan
%  992  515 AKI    Akita
%  220  654 ALB    Albania
%   92  755 ALG    Algeria
%  693  183 AND    Andaman Sea
%  307  580 ANK    Ankara
%  812  224 ANN    Annam
%  210  672 APU    Apulia
%  424  280 ARA    Arabian Sea
%  348  541 ARM    Armenia
%  326  464 BAG    Baghdad
%  338  760 BAL    Baltic Sea
%  535  807 BAR    Barents Sea
%  242  793 BEL    Belgium
%  635  233 BEN    Bay of Bengal
%  297  774 BER    Berlin
%  312  605 BLA    Black Sea
%  273  738 BOH    Bohemia
%  872   94 BOR    Borneo
%  368  764 BOT    Gulf of Bothnia
%  202  824 BRE    Brest
%  688  269 BRM    Burma
%  897  153 BRU    Brunei
%  253  694 BUD    Budapest
%  258  636 BUL    Bulgaria
%  276  624 BUL/EC Bulgaria (east coast)
%  247  621 BUL/SC Bulgaria (south coast)
%  219  781 BUR    Burgundy
%  658  301 CAL    Calcutta
%  782  205 CAM    Cambodia
%  874  355 CAN    Canton
%  406  538 CAS    Caspian Sea
%  897   54 CEL    Celebes Sea
%  554  171 CEY    Ceylon
%  285  885 CLY    Clyde
%  259  600 CON    Constantinople
%  237  286 DAN    Danakil
%  548  276 DEC    Deccan
%  555  331 DEL    Delhi
%  312  796 DEN    Denmark
%   94  203 EAF    East Africa
%  234  551 EAS    Eastern Mediterranean Sea
%  945  369 ECS    East China Sea
%  296  867 EDI    Edinburgh
%  193  499 EGY    Egypt
%  215  474 EGY/EC Egypt (east coast)
%  202  539 EGY/NC Egypt (north coast)
%  660   84 EIO    East Indian Ocean
%  221  839 ENG    English Channel
%  194  349 ETH    Ethiopia
%   77  490 FEZ    Fezzan
%  408  772 FIN    Finland
%  904  325 FOR    Formosa
%  996  471 FUJ    Fuji
%  287  705 GAL    Galicia
%  179  804 GAS    Gascony
%  221  632 GRE    Greece
%  818  389 HAN    Hankow
%  288  803 HEL    Helgoland Bight
%  572  404 HIM    Himalayas
%  988  561 HOK    Hokkaido
%  262  809 HOL    Holland
%  782  459 IMO    Inner Mongolia
%  176  634 ION    Ionian Sea
%  389  420 IRA    Iran
%  236  885 IRE    Ireland
%  218  872 IRI    Irish Sea
%  953  501 JAP    Sea of Japan
%  851   35 JAV    Java
%  752  138 JOH    Joharra
%  263  505 JOR    Jordan
%  263  518 JOR/NC Jordan (north coast)
%  244  493 JOR/WC Jordan (west coast)
%  770  403 KAN    Kansu
%  957  612 KAR    Karafuto
%  550  398 KAS    Kashmir
%  272  783 KIE    Kiel
%  283  685 KLU    Klug
%  929  454 KOR    Korea
%  983  488 KYO    Kyoto
%  955  437 KYU    Kyushu
%  758  265 LAO    Laos
%  120  633 LIB    Libya
%  252  831 LON    London
%  368  734 LVN    Livonia
%  266  861 LVP    Liverpool
%  166  748 LYO    Gulf of Lyon
%  533  195 MAD    Madras
%  815   69 MAL    Malay Sea
%  882  510 MAN    Manchuria
%   93  872 MAO    Mid-Atlantic Ocean
%  183  777 MAR    Marseilles
%  215  247 MOG    Mogadiscio
%  233  678 MON    Monte Negro
%   67  790 MOR    Morocco
%  428  655 MOS    Moscow
%  248  759 MUN    Munich
%  263  898 NAO    North Atlantic Ocean
%  185  667 NAP    Naples
%  282  412 NEJ    Nejd
%  242  446 NEJ/EC Nejd (east coast)
%  329  414 NEJ/WC Nejd (west coast)
%  594  349 NEP    Nepal
% 1003  602 NPO    North Pacific Ocean
%  294  835 NTH    North Sea
%  408  865 NWG    Norwegian Sea
%  341  829 NWY    Norway
%  326  885 OBA    Off Board A
%  145  885 OBB    Off Board B
%   28  885 OBC    Off Board C
%   28  805 OBD    Off Board D
%   28  721 OBE    Off Board E
%   28  349 OBF    Off Board F
%   28  141 OBG    Off Board G
%  142   28 OBH    Off Board H
%  424   28 OBI    Off Board I
% 1005   28 OBJ    Off Board J
% 1005  220 OBK    Off Board K
% 1005  800 OBL    Off Board L
%  949  669 OKH    Sea of Okhotsk
%  737  507 OMO    Outer Mongolia
%  572  638 OMS    Omsk
%  973  451 OSA    Osaka
%  207  805 PAR    Paris
%  847  443 PEK    Peking
%  164  565 PEN    Pentopolis
%  354  391 PER    Persian Gulf
%  920  268 PHI    Philippines
%  232  814 PIC    Picardy
%  209  753 PIE    Piedmont
%  122  847 POR    Portugal
%  298  750 POS    Posen
%  333  737 PRU    Prussia
%  513  297 RAJ    Rajasthan
%  221  402 RED    Red Sea
%  197  716 ROM    Rome
%  247  776 RUH    Ruhr
%  289  651 RUM    Rumania
%   68  702 SAH    Sahara
%  788  178 SAI    Saigon
%  940  635 SAK    Sakhalin
%   30  855 SAO    South Atlantic Ocean
%  272  762 SAX    Saxony
%  877  219 SCS    South China Sea
%  244  661 SER    Serbia
%  356  598 SEV    Sevastopol
%  721  277 SHA    Shan
%  799  146 SIA    Gulf of Siam
%  864  724 SIB    Siberia
%  798  310 SIK    Sikang
%  295  728 SIL    Silesia
%  613  452 SIN    Sinkiang
%  325  813 SKA    Skagerrak
%  271  562 SMY    Smyrna
%  461  360 SND    Sind
%  248  165 SOM    Somali Sea
%  142  802 SPA    Spain
%  149  834 SPA/NC Spain (north coast)
%  112  791 SPA/SC Spain (south coast)
%  984  272 SPO    South Pacific Ocean
%  447  722 STP    St Petersburg
%  491  741 STP/NC St Petersburg (north coast)
%  396  739 STP/SC St Petersburg (south coast)
%  183  415 SUD    Sudan
%  232  519 SUE    Suez
%  763   75 SUM    Sumatra
%  340  786 SWE    Sweden
%  226  762 SWI    Switzerland
%  289  529 SYR    Syria
%  754  227 THA    Thailand
%  750  199 THA/EC Thailand (east coast)
%  722  204 THA/WC Thailand (west coast)
%  669  379 TIB    Tibet
%  979   72 TIM    Timor Sea
% 1007  498 TOK    Tokyo
%  820  250 TON    Gulf of Tonkin
%  231  706 TRI    Trieste
%  123  685 TUN    Tunis
%  518  478 TUR    Turkestan
%  200  735 TUS    Tuscany
%  245  737 TYR    Tyrolia
%  173  700 TYS    Tyrrhenian Sea
%  321  676 UKR    Ukraine
%  219  723 VEN    Venice
%  256  721 VIE    Vienna
%  913  610 VLA    Vladivostok
%  774  286 VTN    Viet Nam
%  237  852 WAL    Wales
%  311  709 WAR    Warsaw
%  127  748 WES    Western Mediterranean Sea
%  454  110 WIO    West Indian Ocean
%  897  436 YEL    Yellow Sea
%  317  327 YEM    Yemen
%  267  843 YOR    Yorkshire
% MAP

%%BeginSetup
/bd { bind def } bind def
/xd { exch def } bd
/ld { load def } bd
/ifloor { .001 add floor cvi } bd
/iceiling { .001 sub ceiling cvi } bd
/min { 2 copy gt { exch } if pop } bd
/max { 2 copy lt { exch } if pop } bd
/secure_atan { 2 copy 0 eq exch 0 eq and { pop pop 0 } { atan } ifelse } bd
/center { 3 2 roll add 2 div 3 1 roll add 2 div exch } bd
/a /arc ld
/c /curveto ld
/d /setdash ld
/f /fill ld
/h /show ld
/k /stroke ld
/l /lineto ld
/m /moveto ld
/n /newpath ld
/o /rotate ld
/p /closepath ld
/r /grestore ld
/s /gsave ld
/t /translate ld
/w /setlinewidth ld
/x /scale ld
/y /scalefont ld
/z /setfont ld
/Powers 20 dict def
%%IncludeResource: font Helvetica-Bold
/MapUnitLetterFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Helvetica-Bold
/MapNameFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Courier
/TextFixedFont /Courier findfont def
%%IncludeResource: font Courier-Bold
/TextHeadingFont /Courier-Bold findfont def
%%IncludeResource: font Times-Roman
/TextTitleFont /Times-Roman findfont def
/PageSetup {
	595 0 t
	90 o
	/FinishReport { } def /InTextMode true def
	Black
	MovePhase
} bd
/ShowPage {
	DrawAliases
	InTextMode { FinishReport } { r } ifelse
	FrameMap
	showpage
} bd
/VisitColors {
	3 dict begin
	/c xd /r xd /g xd
	/BorderBlack .1 g
	/MountainGrey .5 g
	/IceGrey .9 g
	/ArrowBlack 0 g
	/ArrowWhite .9 g
	/Black 0 g
	/White .9 g
	/Grey .7 g
	/LandBrown .8 .7 .4 r
	/SeaBlue .1 .4 .6 r
	/ArrowRed 1 0 0 r
	/ArrowBlue .529 .808 .922 r
	/DarkGreen 0 .4 0 r
	/Red 1 0 0 r
	/Orange 1 .6 0 r
	/Blue 0 0 1 r
	/Turquoise .2 .7 .7 r
	/Green 0 .7 0 r
	/Mauve 1 0 1 r
	/Yellow 1 1 0 r
	/Brown .6 .45 .2 r
	end
} def
/VisitPowers {
	1 dict begin
	/p xd
	/AUSTRIA (A) /Red /Black p
	/CHINA (C) /Orange /White p
	/ENGLAND (E) /Blue /White p
	/FRANCE (F) /Turquoise /Black p
	/GERMANY (G) /Black /White p
	/ITALY (I) /Green /Black p
	/JAPAN (J) /Grey /Black p
	/INDIA (N) /Mauve /White p
	/RUSSIA (R) /White /Black p
	/TURKEY (T) /Yellow /Black p
	/UNOWNED (?) /Brown /White p
	end
} def
/Controls {
	/ChangeController true def
} bd
/DrawFleet {
	SwitchToMapMode
	Power begin
	s t
	.5 .5 x
	0 8 t
	-26 -7 m -26 -2 l -19 -2 l -19 -1 l % to bow
	-22 -1 l -22 0 l -15 0 l -15 1 l % A turret
	-18 1 l -18 2 l -10 2 l -10 0 l % B turret
	-9 0 l -9 4 l -8 4 l -8 6 l % conn tower
	-6 6 l -6 5 l -5 5 l -5 9 l % Infra struct
	-3 9 l -3 14 l -2 14 l -2 9 l % funnel 1
	0 9 l 0 5 l 1 5 l 1 8 l % funnel 2
	3 8 l 3 13 l 4 13 l 4 8 l % mast 2
	6 8 l 6 0 l 8 0 l 8 2 l % funnel 2
	16 2 l 16 1 l 13 1 l 13 0 l % C turret
	20 0 l 20 -1 l 17 -1 l 17 -2 l % D turret
	23 -2 l 23 -3 l 25 -3 l 25 -5 l % stern
	24 -5 l 24 -7 l p
	s Controlled { s 6 w Outer k r } if 2 w Contrast k r Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	r
	end
} bd
/DrawArmy {
	SwitchToMapMode
	Power begin
	s t
	.5 .5 x
	0 8 t
	n 0 0 9 0 360 a p % wheel
	Controlled { s 6 w Outer k r } if 2 w Contrast k
	-20 7 m 10 7 l 10 3 l 14 3 l
	14 1 l -16 1 l -16 3 l -20 3 l p % barrel
	4 2 m 24 -8 l 26 -8 l 18 -8 l -2 2 l % carriage
	s Controlled { s 6 w Outer k r } if 2 w Contrast k r Paint f
	n 0 0 9 0 360 a p % wheel
	Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	r
	end
} bd
/DrawAlias {
	SwitchToMapMode
	s
	3 1 roll t
	.5 .5 x
	0 -14 t
	MapNameFont z
	dup stringwidth pop -2 div 0 neg m h
	r
} bd
/DrawName {
	pop pop pop
} bd
/VisitTerritories {
	6 dict begin
	/i xd
	/m xd
	/b xd
	/w xd
	/l xd
	/c xd
	(IRE) 236 885 c
	(CLY) 285 885 c
	(EDI) 296 867 c
	(LVP) 266 861 c
	(WAL) 237 852 c
	(POR) 122 847 c
	(YOR) 267 843 c
	(LON) 252 831 c
	(NWY) 341 829 c
	(BRE) 202 824 c
	(PIC) 232 814 c
	(HOL) 262 809 c
	(GAS) 179 804 c
	(DEN) 312 796 c
	(BEL) 242 793 c
	(MOR) 67 790 c
	(SWE) 340 786 c
	(KIE) 272 783 c
	(MAR) 183 777 c
	(BER) 297 774 c
	(FIN) 408 772 c
	(ALG) 92 755 c
	(PIE) 209 753 c
	(POS) 298 750 c
	(PRU) 333 737 c
	(TUS) 200 735 c
	(LVN) 368 734 c
	(SIB) 864 724 c
	(VEN) 219 723 c
	(ROM) 197 716 c
	(TRI) 231 706 c
	(TUN) 123 685 c
	(MON) 233 678 c
	(NAP) 185 667 c
	(APU) 210 672 c
	(ALB) 220 654 c
	(RUM) 289 651 c
	(GRE) 221 632 c
	(SAK) 940 635 c
	(LIB) 120 633 c
	(KAR) 957 612 c
	(VLA) 913 610 c
	(CON) 259 600 c
	(SEV) 356 598 c
	(ANK) 307 580 c
	(PEN) 164 565 c
	(SMY) 271 562 c
	(HOK) 988 561 c
	(ARM) 348 541 c
	(SYR) 289 529 c
	(AKI) 992 515 c
	(MAN) 882 510 c
	(TOK) 1007 498 c
	(KYO) 983 488 c
	(FUJ) 996 471 c
	(BAG) 326 464 c
	(KOR) 929 454 c
	(OSA) 973 451 c
	(PEK) 847 443 c
	(KYU) 955 437 c
	(IRA) 389 420 c
	(SUD) 183 415 c
	(SND) 461 360 c
	(CAN) 874 355 c
	(ETH) 194 349 c
	(YEM) 317 327 c
	(FOR) 904 325 c
	(SIK) 798 310 c
	(CAL) 658 301 c
	(RAJ) 513 297 c
	(VTN) 774 286 c
	(DAN) 237 286 c
	(BRM) 688 269 c
	(PHI) 920 268 c
	(MOG) 215 247 c
	(ANN) 812 224 c
	(CAM) 782 205 c
	(EAF) 94 203 c
	(MAD) 533 195 c
	(SAI) 788 178 c
	(CEY) 554 171 c
	(JOH) 752 138 c
	(BRU) 897 153 c
	(BOR) 872 94 c
	(SUM) 763 75 c
	(JAV) 851 35 c
	(PAR) 207 805 l
	(SPA) 142 802 l
	(BUR) 219 781 l
	(RUH) 247 776 l
	(MUN) 248 759 l
	(SAX) 272 762 l
	(BOH) 273 738 l
	(TYR) 245 737 l
	(SIL) 295 728 l
	(VIE) 256 721 l
	(STP) 447 722 l
	(WAR) 311 709 l
	(GAL) 287 705 l
	(SAH) 68 702 l
	(BUD) 253 694 l
	(KLU) 283 685 l
	(UKR) 321 676 l
	(SER) 244 661 l
	(MOS) 428 655 l
	(OMS) 572 638 l
	(BUL) 258 636 l
	(OMO) 737 507 l
	(JOR) 263 505 l
	(EGY) 193 499 l
	(FEZ) 77 490 l
	(TUR) 518 478 l
	(IMO) 782 459 l
	(SIN) 613 452 l
	(AFG) 473 421 l
	(NEJ) 282 412 l
	(KAN) 770 403 l
	(KAS) 550 398 l
	(HAN) 818 389 l
	(TIB) 669 379 l
	(NEP) 594 349 l
	(DEL) 555 331 l
	(SHA) 721 277 l
	(DEC) 548 276 l
	(LAO) 758 265 l
	(THA) 754 227 l
	(NAO) 263 898 w
	(MAO) 93 872 w
	(IRI) 218 872 w
	(NWG) 408 865 w
	(SAO) 30 855 w
	(ENG) 221 839 w
	(NTH) 294 835 w
	(SKA) 325 813 w
	(BAR) 535 807 w
	(HEL) 288 803 w
	(BOT) 368 764 w
	(BAL) 338 760 w
	(WES) 127 748 w
	(LYO) 166 748 w
	(TYS) 173 700 w
	(ADR) 217 693 w
	(OKH) 949 669 w
	(ION) 176 634 w
	(BLA) 312 605 w
	(NPO) 1003 602 w
	(AEG) 222 597 w
	(EAS) 234 551 w
	(SUE) 232 519 w
	(JAP) 953 501 w
	(YEL) 897 436 w
	(RED) 221 402 w
	(PER) 354 391 w
	(ECS) 945 369 w
	(ADE) 315 290 w
	(ARA) 424 280 w
	(SPO) 984 272 w
	(TON) 820 250 w
	(BEN) 635 233 w
	(SCS) 877 219 w
	(AND) 693 183 w
	(SOM) 248 165 w
	(SIA) 799 146 w
	(WIO) 454 110 w
	(EIO) 660 84 w
	(TIM) 979 72 w
	(MAL) 815 69 w
	(CEL) 897 54 w
	(SPA/NC) 149 834 b
	(SPA/SC) 112 791 b
	(STP/NC) 491 741 b
	(STP/SC) 396 739 b
	(BUL/EC) 276 624 b
	(BUL/SC) 247 621 b
	(EGY/NC) 202 539 b
	(JOR/NC) 263 518 b
	(JOR/WC) 244 493 b
	(EGY/EC) 215 474 b
	(NEJ/EC) 242 446 b
	(NEJ/WC) 329 414 b
	(THA/WC) 722 204 b
	(THA/EC) 750 199 b
	(SWI) 226 762 m
	(HIM) 572 404 m
	(ACI) 764 818 i
	(CAS) 406 538 i
	end
} def
/VisitSupplies {
	1 dict begin
	/s xd
	/IRE 247 878 s
	/EDI 278 867 s
	/LVP 257 854 s
	/POR 103 847 s
	/BRE 203 839 s
	/LON 241 826 s
	/SPA 129 814 s
	/NWY 344 814 s
	/MOR 57 807 s
	/PAR 223 805 s
	/BEL 247 804 s
	/HOL 264 798 s
	/KIE 292 787 s
	/DEN 311 784 s
	/SWE 361 783 s
	/MAR 187 764 s
	/BER 289 762 s
	/POS 308 757 s
	/MUN 249 748 s
	/STP 409 734 s
	/VEN 229 731 s
	/WAR 316 721 s
	/TRI 233 720 s
	/VIE 266 715 s
	/ROM 196 704 s
	/BUD 267 699 s
	/TUN 141 691 s
	/NAP 196 691 s
	/MOS 411 681 s
	/SER 252 675 s
	/KLU 277 673 s
	/BUL 252 647 s
	/RUM 277 645 s
	/SEV 320 622 s
	/GRE 218 615 s
	/CON 269 609 s
	/OMS 580 602 s
	/PEN 163 597 s
	/SMY 242 588 s
	/KAR 971 588 s
	/ANK 287 585 s
	/MAN 889 539 s
	/VLA 929 530 s
	/OMO 763 526 s
	/EGY 218 514 s
	/BAG 325 486 s
	/TOK 1009 485 s
	/IRA 384 480 s
	/SIN 648 473 s
	/KYO 975 471 s
	/KOR 917 466 s
	/PEK 838 464 s
	/OSA 981 460 s
	/HAN 843 378 s
	/DEL 548 357 s
	/FOR 910 340 s
	/ETH 167 319 s
	/YEM 277 318 s
	/CAN 844 308 s
	/CAL 632 289 s
	/VTN 784 280 s
	/PHI 922 245 s
	/BRM 701 236 s
	/MOG 191 231 s
	/MAD 553 215 s
	/THA 741 211 s
	/CAM 781 193 s
	/SAI 800 187 s
	/CEY 549 157 s
	/JOH 754 117 s
	/BOR 830 98 s
	/JAV 807 37 s
	end
} def
/supply {
	SwitchToMapMode
	Power begin
	s
	t
	.7 .7 x
	Controlled {
		Outer
		n 0 0 8 0 360 a f
		Contrast
		n 0 0 6 0 360 a f
	} if
	Paint
	n 0 0 4 0 360 a f
	r
	end
} bd
/VisitOffBoardBoxes {
	3 dict begin
	/d xd
	/f xd
	/h xd
	(OBC) (BDHIJK) 28 885 h
	(OBB) (ACKL) 145 885 h
	(OBA) (BL) 326 885 h
	(OBL) (ABK) 1005 800 h
	(OBK) (BCJL) 1005 220 h
	(OBH) (CGI) 142 28 h
	(OBI) (CH) 424 28 h
	(OBJ) (CK) 1005 28 h
	(OBD) (CEFG) 28 805 f
	(OBG) (DEFH) 28 141 f
	(OBE) (DG) 28 721 d
	(OBF) (DG) 28 349 d
	end
} def
/SetArrowStateOk {
	[] 0 d
} bd
/OkOrder {
	/SetArrowState /SetArrowStateOk ld
} bd
/SetArrowStateFailed {
	[4 6] 2 d
} bd
/FailedOrder {
	/SetArrowState /SetArrowStateFailed ld
} bd
/MovePhase {
	/ArrowColor /ArrowBlack ld
	/ArrowBase 20 def
	/TraceArrowHead /TraceSingleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/RetreatPhase {
	/ArrowColor /ArrowRed ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/ProposePhase {
	/ArrowColor /ArrowWhite ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/TraceSingleArrowHead {
	% draw the arrow head ...
	n
	dup -5 m
	dup 20 add 0 l
	dup 5 l
	p
} bd
/TraceDoubleArrowHead {
	% draw the double arrow head ...
	n
	dup -5 m
	dup 19.8 add
	dup -1 l
	dup -5 l
	dup 20 add 0 l
	dup 5 l
	1 l
	dup 5 l
	p
} bd
/PaintArrowMove {
	s
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.5 .5 x
	0 8 t
	o
	.5 div ArrowBase sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% if base is still too long, shorten it some more
	% to make arrow head touch support circle
	dup 14 gt {
		14 sub
	} {
		pop 0
	} ifelse
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowCircle {
	s
	5 1 roll
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.5 .5 x
	0 8 t
	o
	.5 div
	1 index sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% draw the circle ...
	1 w
	n
	2 copy add 0 4 3 roll 0 360 a
	p k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowArrive {
	s
	t
	.5 .5 x
	0 8 t
	180 rotate 54 ArrowBase add neg 0 t
	40
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	-5 0 m -10 0 l
	-15 0 m -20 0 l
	k
	r
} bd
/PaintArrowDepart {
	s
	t
	.5 .5 x
	0 8 t
	-54 0 t
	40
	2 w
	0 0 m
	0 l
	-6 0 m -10 0 l
	-16 0 m -20 0 l
	k
	r
} bd
/ArrowMove {
	SwitchToMapMode
	s
	SetArrowState
	HVDoubleLine {
		PaintArrowMove
	} if PaintArrowMove
	r
} bd
/HVDoubleLine {
	6 dict begin
	/y1 xd /x1 xd /y0 xd /x0 xd
	/hWrap x1 x0 gt {
		x0 309.9 lt x1 309.9 ge and { x1 x0 sub 516.5 div } { 0 } ifelse
	} {
		x1 309.9 lt x0 309.9 ge and { x0 x1 sub 516.5 div } { 0 } ifelse
	} ifelse def
	/vWrap y1 y0 gt {
		y0 639.0999999999999 lt y1 639.0999999999999 ge and { y1 y0 sub 456.5 div } { 0 } ifelse
	} {
		y1 639.0999999999999 lt y0 639.0999999999999 ge and { y0 y1 sub 456.5 div } { 0 } ifelse
	} ifelse def
	hWrap 1 gt vWrap 1 gt and {
		vWrap hWrap lt { /hWrap } { /vWrap } ifelse 0 def
	} if
	hWrap 1 gt {
		x0 y0 x1 x0 gt {
			x1 1033 sub y1 x0 1033 add y0
		} {
			x1 1033 add y1 x0 1033 sub y0
		} ifelse x1 y1 true
	} {
		vWrap 1 gt {
			y1 y0 gt {
				x0 y0 x1 y1 913 sub x0 y0 913 add x1 y1 true
			} {
				x0 y0 x1 y1 913 add x0 y0 913 sub x1 y1 true
			} ifelse
		} {
			x0 y0 x1 y1 false
		} ifelse
	} ifelse
	end
} bd
/ArrowHold {
	SwitchToMapMode
	s
	SetArrowState
	HVDoubleLine {
		24 PaintArrowCircle
	} if 24 PaintArrowCircle
	r
} bd
/ArrowSupport {
	SwitchToMapMode
	s
	SetArrowState
	HVDoublePointToMidLine {
		8 PaintArrowCircle
	} if 8 PaintArrowCircle
	r
} bd
/HVDoublePointToMidLine {
	6 dict begin
	/y2 xd /x2 xd /y1 xd /x1 xd
	/hWrap x2 x1 gt {
		x1 309.9 lt x2 309.9 ge and { x2 x1 sub 516.5 div } { 0 } ifelse
	} {
		x2 309.9 lt x1 309.9 ge and { x1 x2 sub 516.5 div } { 0 } ifelse
	} ifelse def
	/vWrap y2 y1 gt {
		y1 639.0999999999999 lt y2 639.0999999999999 ge and { y2 y1 sub 456.5 div } { 0 } ifelse
	} {
		y2 639.0999999999999 lt y1 639.0999999999999 ge and { y1 y2 sub 456.5 div } { 0 } ifelse
	} ifelse def
	hWrap 1 gt vWrap 1 gt and {
		vWrap hWrap lt { /hWrap } { /vWrap } ifelse 0 def
	} if
	x1 x2 add hWrap 1 gt {
		1033 1 index 1033 gt { sub } { add } ifelse
	} if 2 div y1 y2 add vWrap 1 gt {
		913 1 index 913 gt { sub } { add } ifelse
	} if 2 div HVDoubleLine
	end
} bd
/ArrowConvoy {
	SwitchToMapMode
	s
	SetArrowState
	HVDoublePointToMidLine {
		12 PaintArrowCircle
	} if 12 PaintArrowCircle
	r
} bd
/ArrowArrive {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArrive
	r
} bd
/ArrowDepart {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowDepart
	r
} bd
/ArrowRetreat {
	RetreatPhase
	ArrowMove
	MovePhase
} bd
/ArrowPropose {
	ProposePhase
	ArrowMove
	MovePhase
} bd
/ArrowRetreatArrive {
	RetreatPhase
	ArrowArrive
	MovePhase
} bd
/ArrowRetreatDepart {
	RetreatPhase
	ArrowDepart
	MovePhase
} bd
/BuildUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.5 .5 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/SlashUnit {
	s
	3 1 roll t
	.5 .5 x
	0 8 t
	n
	-21 -16 m
	11 16 l
	21 16 l
	-11 -16 l
	p
	exec
	r
} bd
/DestroyUnit {
	SwitchToMapMode
	{ ArrowRed f } SlashUnit
} bd
/DisbandUnit {
	SwitchToMapMode
	{ s ArrowWhite f r 1 w ArrowRed k } SlashUnit
} bd
/RemoveUnit {
	SwitchToMapMode
	{ ArrowWhite f } SlashUnit
} bd
/FindUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.5 .5 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/LoseUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.5 .5 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/QueryUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.5 .5 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/SplitString {
	7 dict begin
	/nrChars xd
	/indentString xd
	/objectString xd
	/objectLast objectString length 1 sub def
	% Short string?
	objectLast nrChars lt {
		false objectString
	} {
		% Look for a suitable place to split.
		% First tracking backwards, if that doesn't work, look forward.
		/splitIndex -1 def
		nrChars -1 0 {
			objectString 1 index get 32 eq {
				/splitIndex xd exit
			} if pop
		} for splitIndex -1 eq {
			nrChars 1 add 1 objectLast {
				objectString 1 index get 32 eq {
					/splitIndex xd exit
				} if pop
			} for
		} if
		splitIndex -1 eq splitIndex objectLast eq or {
			false objectString
		} {
			% The first part.
			objectString 0 splitIndex getinterval
			% The second part.
			objectString splitIndex 1 add objectLast splitIndex sub getinterval
			% Add indentation if needed.
			indentString length 0 gt {
				dup length indentString length add string
				dup 0 indentString putinterval
				dup indentString length 4 3 roll putinterval
			} if
			% Add white space of the first part.
			/nonSpaceIndex objectLast 1 add def
			0 1 objectLast {
				objectString 1 index get 32 ne {
					/nonSpaceIndex xd exit
				} if pop
			} for
			nonSpaceIndex 0 gt nonSpaceIndex splitIndex lt and {
				dup length nonSpaceIndex add string
				dup 0 objectString 0 nonSpaceIndex getinterval putinterval
				dup nonSpaceIndex 4 3 roll putinterval
			} if
			exch true exch
		} ifelse
	} ifelse
	end
} bd
/DrawLayoutBorders {
	s
	TextFixedFont 7 y z
	r
} bd
/Owner <<
	/Steps [
		{ /Count 0 def /Y 110.46 def false true } bind
		{
			Count 10 ge { false true } {
				121 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				15.7 Y m h
				true false
			} ifelse
		} bind
		{
			121 SplitString [ exch {
				15.7 33.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				15.7 33.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 121 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OwnerReport {
	SwitchToTextMode
	Owner begin Start end
	/FinishReport /FinishOwnerReport load def
} bd
/WriteOwner {
	Owner begin Write end
} bd
/FinishOwnerReport {
	Owner begin Finish end
} bd
/Adjustment <<
	/Steps [
		{ /Count 0 def /Y 145.46 def false true } bind
		{
			Count 15 ge { false true } {
				70 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				532.3 Y m h
				true false
			} ifelse
		} bind
		{
			70 SplitString [ exch {
				532.3 33.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				532.3 33.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 70 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 7 y z
		532.3 145.46 moveto
		(Adjustments) h
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/AdjustReport {
	SwitchToTextMode
	Adjustment begin Start end
	/FinishReport /FinishAdjustReport load def
} bd
/WriteAdjust {
	Adjustment begin Write end
} bd
/FinishAdjustReport {
	Adjustment begin Finish end
} bd
/Retreat <<
	/Steps [
		{ /Count 0 def /Y 229.46 def false true } bind
		{
			Count 10 ge { false true } {
				70 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				532.3 Y m h
				true false
			} ifelse
		} bind
		{
			70 SplitString [ exch {
				532.3 152.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				532.3 152.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 70 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 7 y z
		532.3 229.46 moveto
		(Retreats) h
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/RetreatReport {
	SwitchToTextMode
	Retreat begin Start end
	/FinishReport /FinishRetreatReport load def
} bd
/WriteRetreat {
	Retreat begin Write end
} bd
/FinishRetreatReport {
	Retreat begin Finish end
} bd
/Order <<
	/Steps [
		{ /Count 0 def /Y 537.46 def false true } bind
		{
			Count 42 ge { false true } {
				34 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				532.3 Y m h
				true false
			} ifelse
		} bind
		{ /Count 0 def /Y 537.46 def false true } bind
		{
			Count 41 ge { false true } {
				34 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				683.5 Y m h
				true false
			} ifelse
		} bind
		{
			34 SplitString [ exch {
				683.5 243.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				683.5 243.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 34 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OrderReport {
	SwitchToTextMode
	Order begin Start end
	/FinishReport /FinishOrderReport load def
} bd
/WriteOrder {
	Order begin Write end
} bd
/FinishOrderReport {
	Order begin Finish end
} bd
/DrawTitle {
	SwitchToTextMode
	TextTitleFont 14 y z
	(Diplomacy)
	532.3 553.42 m h
	TextTitleFont 14 y z
	dup stringwidth pop dup 294 gt {
		532.3 535.5 m
		294 exch div dup 1 x exch
		0 3.92 rmoveto h
		1 exch div 1 x
	} {
		pop 532.3 539.42 m h
	} ifelse
} bd
/SwitchToTextMode {
	InTextMode {
		FinishReport /FinishReport { } def
	} {
		r /InTextMode true def
	} ifelse
} bd
/SwitchToMapMode {
	InTextMode {
		FinishReport /FinishReport { } def
		/InTextMode false def
		s
		19.7 119.5 500.2 440 rectclip .4863 .4863 x 38.29 241.62 t
		ArrowColor
		OkOrder
	} if
} bd
/FrameMap {
	s
	2 w LandBrown
	18.62 117.5 m 520.98 117.5 l 520.98 561.5 l 18.62 561.5 l
	p
	s 8 w Black k r
	clipsave clip k cliprestore
	r
} bd
/PaintMap {
	SwitchToMapMode
	s
	SeaBlue 0 0 1033 913 rectfill
	IncludeIce
	IncludeLand
	IncludeLake
	IncludeMountain
	IncludeBorders
	IncludeInternalBorders
	IncludeSeaBorders
	IncludeCanalBorders
	IncludePointers
	r
} bd
/DrawMap {
	PageSetup
	PaintMap
	DrawSupplies
	DrawOffBoardBoxes
} bd
/DrawSupplies {
	SwitchToMapMode
	UNOWNEDCENTER
	{ supply pop } bind
	VisitSupplies
} bd
/DrawOffBoard {
	s
	t
	.5 .5 x
	24.5 24.5 10.5 0 90 a
	-24.5 24.5 10.5 90 180 a
	-24.5 -24.5 10.5 180 270 a
	24.5 -24.5 10.5 270 0 a
	1 w BorderBlack
	p
	k
	r
} bd
/DrawOffBoardBoxes {
	SwitchToMapMode
	s
	{ DrawOffBoard pop pop } bind
	{ DrawOffBoard pop pop } bind
	{ DrawOffBoard pop pop } bind
	VisitOffBoardBoxes
	r
} bd
/DrawAliases {
	NameTerritories
	NameOffBoardBoxes
} bd
/NameTerritories {
	SwitchToMapMode
	s
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ White 3 2 roll DrawAlias } bind
	{ pop pop pop } bind
	{ pop pop pop } bind
	{ pop pop pop } bind
	VisitTerritories
	r
} bd
/NameOffBoardBoxes {
	SwitchToMapMode
	s
	{ White 2 copy 6 5 roll DrawAlias exch exch -7 add 3 2 roll DrawAlias } bind
	{ DarkGreen 2 copy 6 5 roll DrawAlias exch exch -7 add 3 2 roll DrawAlias } bind
	{ DarkGreen 2 copy 6 5 roll DrawAlias exch exch -7 add 3 2 roll DrawAlias } bind
	VisitOffBoardBoxes
	r
} bd
/IncludeIce {
	s
	.1667 .1667 x
	/fk {
		p
		s IceGrey f r
		k
	} bd
	3 w BorderBlack
	OutlineIceBlack
	r
} bd
/IncludeLand {
	s
	.1667 .1667 x
	/fk {
		p
		s LandBrown f r
		k
	} bd
	3 w BorderBlack
	OutlineContinentBlue
	r
} bd
/IncludeLake {
	s
	.1667 .1667 x
	/fk {
		p
		s SeaBlue f r
		k
	} bd
	3 w BorderBlack
	OutlineContinentCyan
	r
} bd
/IncludeMountain {
	s
	.1667 .1667 x
	/fk {
		p
		s MountainGrey f r
		k
	} bd
	6 w BorderBlack
	OutlineContinentMagenta
	r
} bd
/IncludeBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	6 w BorderBlack
	OutlineBorders1Black
	OutlineBorders2Black
	r
} bd
/IncludeInternalBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	3 w [ 18 6 ] 9 d BorderBlack
	OutlineBorders1Maroon
	OutlineBorders2Maroon
	r
} bd
/IncludeSeaBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	3 w [ 18 6 ] 9 d BorderBlack
	OutlineBorders1Purple
	OutlineBorders2Purple
	r
} bd
/IncludeCanalBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	3 w BorderBlack
	OutlineBorders1Navy
	r
} bd
/IncludePointers {
	s
	/fk {
		p
		s White f r
		k
	} bd
	.38 w ArrowBlack
	ShapeArrows
	r
} bd
/OutlineIceBlack {
	3720 5472 m
	3412 4530 l
	3331 4296 l
	3309 4213 l
	3348 4206 l
	3474 4206 l
	3984 4206 l
	4368 4206 l
	4542 4207 l
	4638 4284 l
	4812 4434 l
	5352 4900 l
	5520 5046 l
	5601 5118 l
	5604 5220 l
	5604 5466 l
	5604 5466 l
	5604 5478 l
	3720 5478 l
	3720 5472 l
	fk
} bd
/OutlineContinentBlue {
	6 318 m
	70 380 167 429 258 438 c
	329 444 427 443 477 504 c
	502 534 511 573 530 606 c
	553 646 592 689 597 738 c
	607 826 571 952 620 1038 c
	650 1091 715 1131 768 1161 c
	856 1211 953 1278 1050 1312 c
	1161 1350 1266 1398 1368 1456 c
	1419 1485 1464 1496 1512 1536 c
	1573 1587 1664 1603 1689 1698 c
	1698 1734 1620 1715 1602 1722 c
	1528 1751 1457 1774 1386 1800 c
	1358 1809 1314 1800 1303 1836 c
	1291 1871 1313 1886 1324 1914 c
	1331 1935 1322 1964 1320 1986 c
	1312 2057 1257 2117 1248 2184 c
	1242 2222 1268 2239 1272 2274 c
	1277 2320 1242 2365 1248 2412 c
	1253 2454 1293 2496 1306 2538 c
	1315 2570 1298 2613 1297 2646 c
	1296 2666 1311 2685 1314 2706 c
	1316 2726 1307 2746 1309 2766 c
	1310 2795 1326 2821 1330 2850 c
	1340 2904 1341 2965 1351 3018 c
	1358 3051 1405 3122 1396 3150 c
	1379 3210 1288 3197 1248 3234 c
	1192 3284 1134 3362 1105 3432 c
	1085 3481 1084 3554 1038 3589 c
	1022 3601 997 3616 978 3613 c
	933 3604 896 3532 855 3600 c
	837 3628 824 3711 828 3744 c
	830 3769 848 3790 846 3816 c
	839 3883 713 3986 769 4056 c
	788 4080 820 4062 838 4081 c
	847 4090 841 4105 849 4114 c
	857 4127 886 4128 900 4134 c
	887 4151 882 4177 868 4194 c
	858 4207 840 4210 829 4224 c
	814 4245 813 4278 796 4302 c
	758 4356 696 4409 669 4470 c
	659 4490 660 4510 647 4530 c
	601 4594 513 4630 470 4698 c
	455 4719 441 4787 440 4812 c
	438 4835 456 4852 426 4869 c
	404 4880 377 4860 354 4867 c
	278 4891 228 4941 144 4932 c
	90 4926 64 4891 6 4896 c
	0 4896 l
	0 318 l
	6 318 l
	fk
	6192 648 m
	6159 688 6061 671 6042 624 c
	6192 636 l
	6198 636 l
	6198 648 l
	6192 648 l
	fk
	6192 144 m
	6178 102 6141 79 6162 36 c
	6111 -1 6089 34 6042 42 c
	5997 48 5970 18 5934 0 c
	6198 0 l
	6198 144 l
	6192 144 l
	fk
	1470 5386 m
	1500 5391 1493 5351 1512 5343 c
	1531 5333 1550 5350 1571 5332 c
	1595 5310 1587 5243 1554 5233 c
	1535 5228 1528 5245 1512 5247 c
	1482 5249 1451 5207 1417 5229 c
	1400 5239 1394 5264 1380 5278 c
	1358 5296 1316 5317 1341 5352 c
	1364 5386 1394 5338 1422 5347 c
	1441 5352 1447 5381 1470 5386 c
	fk
	1824 5238 m
	1752 5244 l
	1757 5233 1765 5224 1770 5214 c
	1808 5136 1702 5180 1674 5190 c
	1668 5184 l
	1682 5132 1645 5130 1623 5094 c
	1612 5075 1612 5056 1596 5040 c
	1583 5027 1552 5018 1545 5002 c
	1536 4985 1559 4962 1541 4945 c
	1506 4913 1478 4980 1452 4932 c
	1397 4959 1393 5028 1365 5076 c
	1347 5105 1312 5110 1302 5148 c
	1384 5122 l
	1428 5088 l
	1413 5114 1393 5140 1404 5172 c
	1456 5156 1443 5135 1494 5178 c
	1538 5107 1551 5150 1608 5184 c
	1568 5214 1628 5277 1668 5295 c
	1731 5324 1791 5288 1824 5238 c
	fk
	1278 3732 m
	1271 3761 1233 3779 1236 3810 c
	1238 3839 1263 3918 1285 3940 c
	1314 3968 1347 3968 1357 4014 c
	1364 4051 1346 4086 1339 4122 c
	1329 4175 1355 4240 1380 4284 c
	1356 4296 l
	1363 4311 1408 4374 1350 4363 c
	1302 4353 1300 4300 1287 4266 c
	1278 4243 1257 4229 1249 4206 c
	1239 4172 1259 4151 1264 4122 c
	1266 4108 1251 4104 1251 4092 c
	1250 4077 1261 4058 1264 4044 c
	1268 4021 1266 3968 1242 3957 c
	1202 3937 1244 4024 1206 4030 c
	1176 4036 1175 3985 1158 3973 c
	1144 3963 1131 3974 1116 3970 c
	1101 3967 1073 3957 1065 3978 c
	1059 3989 1137 4035 1144 4062 c
	1170 4153 1131 4242 1170 4332 c
	1188 4374 1241 4407 1218 4458 c
	1200 4495 1133 4506 1105 4537 c
	1075 4571 1110 4633 1050 4657 c
	1019 4669 1007 4618 978 4623 c
	937 4628 908 4688 870 4702 c
	849 4709 801 4721 780 4714 c
	760 4707 748 4686 726 4686 c
	696 4685 600 4709 585 4734 c
	568 4759 573 4797 555 4824 c
	541 4846 487 4869 486 4896 c
	484 4925 514 4942 519 4968 c
	528 5005 481 5030 498 5070 c
	527 5060 564 5063 587 5089 c
	595 5098 593 5115 606 5121 c
	629 5131 685 5108 714 5112 c
	765 5117 809 5153 852 5178 c
	865 5152 893 5143 904 5118 c
	926 5060 925 4995 946 4938 c
	955 4910 953 4878 984 4863 c
	1052 4828 1133 4921 1165 4962 c
	1173 4972 1188 4978 1192 4992 c
	1198 5008 1182 5109 1228 5085 c
	1267 5064 1255 5006 1272 4974 c
	1320 5010 l
	1332 4988 1316 4962 1329 4945 c
	1356 4906 1410 4918 1446 4906 c
	1465 4900 1476 4873 1494 4861 c
	1530 4837 1582 4856 1620 4866 c
	1626 4860 l
	1608 4848 l
	1614 4842 l
	1666 4850 1677 4792 1710 4765 c
	1743 4739 1799 4748 1776 4686 c
	1794 4674 1832 4654 1838 4630 c
	1842 4613 1823 4604 1838 4585 c
	1865 4550 1920 4551 1949 4518 c
	1968 4495 1936 4465 1968 4453 c
	2049 4424 2070 4511 2136 4518 c
	2209 4525 2158 4445 2184 4441 c
	2238 4431 2226 4525 2262 4534 c
	2307 4547 2340 4474 2370 4453 c
	2389 4440 2415 4434 2436 4422 c
	2471 4525 2315 4510 2304 4584 c
	2288 4685 2407 4738 2496 4740 c
	2527 4740 2608 4725 2589 4782 c
	2562 4863 2486 4777 2436 4782 c
	2355 4788 2291 4822 2234 4734 c
	2221 4714 2234 4685 2214 4671 c
	2177 4645 2155 4680 2124 4678 c
	2093 4677 2054 4637 2028 4623 c
	1997 4605 1885 4634 1896 4674 c
	1903 4696 1928 4704 1941 4722 c
	1972 4762 2026 4817 2040 4866 c
	2002 4881 1939 4882 1920 4926 c
	1892 4987 2057 5077 2106 5086 c
	2146 5092 2214 5034 2256 5023 c
	2345 5001 2401 5051 2484 5056 c
	2519 5059 2550 5036 2586 5052 c
	2562 5082 l
	2607 5099 2619 5060 2652 5053 c
	2668 5049 2688 5060 2706 5058 c
	2728 5054 2740 5033 2760 5025 c
	2788 5011 2823 5020 2850 4998 c
	2893 4960 2947 4893 2880 4860 c
	2905 4797 2943 4745 2960 4674 c
	2965 4652 2984 4624 2979 4602 c
	2959 4505 2868 4541 2828 4602 c
	2810 4627 2809 4664 2796 4692 c
	2782 4664 2797 4641 2787 4614 c
	2775 4578 2740 4565 2742 4524 c
	2742 4503 2736 4448 2772 4459 c
	2793 4465 2781 4514 2808 4530 c
	2862 4458 l
	2883 4509 2958 4549 2994 4482 c
	3024 4491 3062 4577 3078 4608 c
	3088 4593 3112 4574 3106 4554 c
	3099 4531 3031 4526 3060 4488 c
	3071 4473 3088 4473 3102 4483 c
	3138 4507 3214 4526 3258 4501 c
	3284 4485 3327 4429 3366 4441 c
	3389 4448 3389 4494 3402 4512 c
	3516 4356 l
	3559 4488 l
	3636 4572 l
	3651 4562 3681 4547 3676 4524 c
	3672 4505 3648 4500 3643 4482 c
	3623 4418 3618 4302 3564 4261 c
	3541 4243 3509 4261 3486 4254 c
	3576 4165 3609 4291 3666 4338 c
	3624 4370 3671 4471 3708 4500 c
	3720 4476 l
	3771 4492 3775 4471 3822 4458 c
	3831 4479 3820 4510 3835 4530 c
	3854 4555 3886 4542 3912 4555 c
	3951 4574 3969 4618 4008 4638 c
	4047 4658 4089 4647 4128 4665 c
	4164 4681 4164 4729 4194 4738 c
	4216 4745 4229 4724 4248 4717 c
	4287 4704 4340 4709 4372 4672 c
	4409 4629 4319 4561 4326 4518 c
	4488 4560 l
	4551 4561 l
	4536 4602 l
	4577 4619 4637 4611 4668 4578 c
	4683 4560 4711 4504 4740 4513 c
	4763 4520 4739 4544 4749 4558 c
	4756 4569 4766 4561 4776 4564 c
	4789 4569 4818 4602 4827 4615 c
	4844 4639 4824 4677 4839 4702 c
	4874 4762 5012 4729 5070 4759 c
	5097 4772 5110 4807 5142 4816 c
	5163 4821 5185 4805 5202 4794 c
	5223 4828 5253 4874 5266 4914 c
	5272 4934 5264 4955 5269 4974 c
	5273 4995 5311 5046 5328 5064 c
	5372 5111 5438 5125 5490 5161 c
	5522 5185 5570 5265 5616 5236 c
	5635 5223 5647 5200 5664 5184 c
	5678 5169 5692 5161 5700 5142 c
	5651 5120 5621 5114 5592 5064 c
	5614 5045 5629 5010 5652 4998 c
	5686 4978 5737 4991 5764 4956 c
	5778 4938 5762 4921 5764 4902 c
	5773 4849 5808 4800 5814 4746 c
	5822 4659 5726 4583 5785 4494 c
	5818 4445 5875 4452 5908 4414 c
	5928 4390 5927 4358 5941 4332 c
	5978 4266 6056 4115 6024 4038 c
	5919 4095 5796 4177 5745 4290 c
	5733 4315 5750 4347 5748 4374 c
	5740 4454 5715 4578 5640 4620 c
	5640 4500 l
	5576 4550 5580 4410 5593 4374 c
	5600 4356 5616 4354 5626 4342 c
	5635 4332 5633 4324 5626 4314 c
	5591 4257 5540 4284 5503 4246 c
	5484 4226 5485 4197 5470 4176 c
	5444 4141 5400 4118 5389 4074 c
	5374 4018 5393 3951 5388 3894 c
	5385 3872 5368 3849 5370 3828 c
	5371 3801 5411 3809 5430 3810 c
	5476 3811 5511 3868 5554 3814 c
	5578 3784 5588 3735 5608 3702 c
	5629 3667 5663 3647 5680 3606 c
	5723 3497 5692 3301 5644 3198 c
	5625 3158 5572 3152 5551 3114 c
	5526 3069 5537 3032 5524 2988 c
	5513 2953 5476 2925 5454 2898 c
	5474 2885 5498 2884 5520 2873 c
	5557 2852 5619 2770 5632 2730 c
	5645 2685 5588 2621 5544 2624 c
	5515 2625 5497 2736 5488 2760 c
	5470 2803 5434 2763 5407 2781 c
	5382 2796 5407 2828 5392 2850 c
	5360 2894 5278 2827 5262 2796 c
	5250 2796 l
	5238 2819 5261 2873 5248 2883 c
	5210 2911 5155 2792 5136 2772 c
	5124 2759 5097 2745 5109 2724 c
	5116 2709 5135 2711 5148 2706 c
	5159 2700 5170 2684 5184 2684 c
	5198 2684 5202 2708 5214 2715 c
	5231 2724 5288 2722 5304 2709 c
	5335 2685 5221 2606 5227 2562 c
	5231 2534 5274 2531 5290 2514 c
	5303 2499 5301 2480 5311 2466 c
	5351 2411 5389 2400 5370 2328 c
	5459 2290 5373 2139 5346 2070 c
	5336 2045 5340 2014 5326 1992 c
	5312 1970 5291 1949 5274 1932 c
	5240 1898 5202 1873 5166 1845 c
	5149 1833 5142 1810 5124 1799 c
	5086 1776 5040 1787 5004 1761 c
	4987 1750 4950 1727 4941 1710 c
	4933 1697 4944 1673 4930 1665 c
	4905 1648 4887 1721 4860 1725 c
	4806 1734 4758 1658 4735 1620 c
	4708 1570 4728 1498 4776 1467 c
	4806 1446 4836 1449 4866 1422 c
	4914 1377 4931 1312 4932 1248 c
	4932 1222 4946 1193 4930 1170 c
	4906 1134 4830 1109 4794 1084 c
	4760 1060 4723 1007 4686 996 c
	4678 1016 4688 1046 4677 1068 c
	4662 1093 4630 1089 4609 1101 c
	4584 1114 4577 1144 4558 1162 c
	4535 1185 4507 1187 4482 1203 c
	4467 1211 4474 1237 4458 1240 c
	4438 1244 4427 1219 4420 1206 c
	4401 1168 4371 1084 4381 1044 c
	4389 1013 4425 931 4452 913 c
	4500 881 4584 852 4612 792 c
	4625 762 4618 730 4627 702 c
	4636 676 4665 664 4668 636 c
	4670 612 4656 595 4632 600 c
	4487 635 4483 764 4408 862 c
	4386 890 4312 931 4308 960 c
	4298 1021 4329 1080 4326 1140 c
	4323 1189 4296 1242 4285 1290 c
	4274 1331 4276 1389 4248 1422 c
	4220 1387 4126 1325 4089 1387 c
	4069 1418 4110 1453 4102 1488 c
	4084 1561 4018 1604 3984 1668 c
	3975 1684 3973 1723 3954 1730 c
	3932 1737 3910 1708 3894 1701 c
	3857 1683 3807 1705 3768 1689 c
	3723 1669 3732 1621 3696 1602 c
	3675 1591 3650 1589 3630 1578 c
	3565 1540 3512 1482 3450 1441 c
	3416 1419 3366 1422 3345 1380 c
	3329 1348 3348 1300 3340 1266 c
	3315 1160 3238 1063 3144 1014 c
	3094 1164 l
	3006 1440 l
	2976 1536 l
	2982 1716 l
	2994 1830 l
	2982 1813 2970 1788 2952 1779 c
	2897 1750 2846 1842 2826 1878 c
	2898 1890 l
	2880 1897 2861 1893 2844 1902 c
	2818 1914 2784 1968 2768 1992 c
	2751 2016 2753 2068 2729 2085 c
	2666 2128 2563 2105 2496 2139 c
	2449 2162 2349 2222 2325 2268 c
	2312 2292 2330 2317 2310 2340 c
	2281 2372 2232 2341 2202 2370 c
	2168 2402 2114 2469 2100 2514 c
	2093 2540 2111 2566 2103 2592 c
	2094 2624 2070 2641 2058 2670 c
	2045 2666 2026 2667 2016 2661 c
	1960 2628 2008 2533 2010 2490 c
	2011 2449 1984 2426 2004 2388 c
	2016 2394 2047 2429 2061 2411 c
	2085 2378 2023 2347 2025 2322 c
	2025 2298 2059 2287 2076 2279 c
	2140 2247 2223 2285 2280 2316 c
	2289 2276 2244 2241 2258 2202 c
	2274 2152 2372 2104 2346 2040 c
	2331 2002 2244 1993 2214 1968 c
	2200 1955 2193 1931 2178 1923 c
	2140 1901 2083 1915 2046 1907 c
	2026 1902 2012 1884 1992 1884 c
	1951 1884 1919 1913 1872 1908 c
	1847 1905 1840 1881 1818 1878 c
	1746 1866 1660 1889 1590 1896 c
	1520 1902 1431 1891 1374 1940 c
	1351 1959 1366 1992 1372 2016 c
	1385 2071 1422 2120 1422 2178 c
	1421 2240 1416 2307 1410 2370 c
	1406 2404 1388 2428 1392 2466 c
	1397 2521 1433 2557 1428 2616 c
	1425 2639 1409 2659 1407 2682 c
	1398 2771 1415 2904 1464 2976 c
	1380 2922 l
	1354 2981 1371 3081 1416 3126 c
	1478 3045 1559 3121 1614 3166 c
	1629 3180 1653 3187 1665 3204 c
	1688 3232 1699 3257 1734 3276 c
	1667 3313 l
	1590 3322 l
	1536 3411 l
	1482 3409 l
	1410 3510 l
	1458 3660 l
	1479 3669 1525 3675 1548 3663 c
	1562 3654 1564 3637 1584 3636 c
	1603 3634 1613 3660 1632 3655 c
	1649 3649 1661 3622 1680 3613 c
	1739 3587 1791 3610 1848 3562 c
	1903 3514 1919 3438 1986 3397 c
	2040 3364 2112 3392 2106 3462 c
	2098 3534 2031 3600 2016 3672 c
	2022 3678 l
	2093 3685 l
	2106 3717 l
	2154 3720 l
	2114 3756 2081 3755 2034 3769 c
	2017 3775 1990 3787 1980 3768 c
	1955 3723 2008 3704 1998 3672 c
	1884 3702 l
	1896 3735 1885 3736 1880 3768 c
	1876 3788 1908 3793 1895 3816 c
	1862 3869 1813 3835 1776 3822 c
	1763 3817 1752 3825 1740 3823 c
	1718 3821 1704 3797 1686 3789 c
	1637 3765 1569 3736 1620 3672 c
	1596 3654 l
	1554 3695 1522 3668 1476 3684 c
	1500 3702 l
	1434 3774 l
	1398 3743 1391 3781 1380 3810 c
	1314 3767 1353 3711 1326 3660 c
	1290 3696 l
	1269 3689 1265 3670 1248 3690 c
	1206 3642 l
	1173 3704 1194 3718 1218 3774 c
	1278 3732 l
	fk
	1956 4818 m
	1910 4756 1837 4792 1794 4740 c
	1746 4770 l
	1774 4798 1819 4858 1866 4855 c
	1885 4854 1896 4831 1914 4825 c
	1931 4820 1939 4828 1956 4818 c
	fk
	1830 4752 m
	1843 4742 1879 4739 1887 4726 c
	1904 4697 1840 4684 1824 4692 c
	1818 4740 l
	1830 4752 l
	fk
	1158 4410 m
	1152 4391 1100 4353 1083 4381 c
	1071 4399 1106 4424 1122 4422 c
	1133 4420 1146 4412 1158 4410 c
	fk
	1008 4375 m
	1027 4381 1069 4363 1059 4338 c
	1049 4315 993 4292 972 4285 c
	949 4279 915 4307 927 4332 c
	932 4344 994 4371 1008 4375 c
	fk
	1044 4014 m
	1026 4006 991 3975 972 3987 c
	960 3993 952 4103 967 4113 c
	986 4125 1038 4032 1044 4014 c
	fk
	5574 3906 m
	5802 3684 l
	5694 3655 5822 3572 5862 3534 c
	5832 3534 l
	5820 3486 l
	5753 3552 5728 3654 5674 3732 c
	5635 3786 5562 3832 5574 3906 c
	fk
	1308 3474 m
	1270 3458 1227 3494 1219 3534 c
	1216 3551 1235 3555 1246 3544 c
	1257 3533 1265 3519 1278 3508 c
	1289 3497 1297 3485 1308 3474 c
	fk
	5844 3462 m
	5871 3451 5889 3434 5922 3438 c
	5939 3439 5966 3461 5982 3457 c
	6053 3440 5987 3394 5977 3366 c
	5973 3352 5987 3330 5974 3321 c
	5961 3310 5937 3321 5922 3316 c
	5907 3312 5894 3295 5880 3288 c
	5880 3282 l
	5907 3267 5912 3259 5892 3234 c
	5872 3256 5830 3287 5853 3322 c
	5861 3336 5878 3335 5880 3354 c
	5881 3388 5843 3420 5832 3450 c
	5844 3462 l
	fk
	1620 3264 m
	1600 3255 1570 3246 1548 3253 c
	1534 3257 1513 3278 1531 3291 c
	1548 3303 1602 3271 1620 3264 c
	fk
	5880 2748 m
	5877 2700 l
	5841 2675 l
	5832 2634 l
	5788 2646 5807 2670 5796 2700 c
	5745 2660 5818 2566 5781 2514 c
	5765 2493 5677 2598 5680 2610 c
	5687 2629 5707 2644 5715 2664 c
	5728 2698 5738 2750 5766 2777 c
	5798 2807 5851 2819 5878 2856 c
	5891 2874 5879 2897 5889 2916 c
	5917 2973 5963 3010 5958 3084 c
	5955 3119 5921 3137 5911 3168 c
	5905 3190 5928 3221 5952 3217 c
	6040 3205 6019 3113 6031 3054 c
	6038 3014 6078 2951 6064 2910 c
	6061 2900 6003 2834 5994 2829 c
	5974 2818 5959 2831 5947 2808 c
	5937 2790 5949 2736 5932 2727 c
	5919 2719 5893 2744 5880 2748 c
	fk
	5442 1866 m
	5389 1902 5398 1949 5413 2004 c
	5418 2023 5431 2062 5460 2057 c
	5475 2054 5473 2032 5470 2022 c
	5455 1972 5462 1914 5442 1866 c
	fk
	5580 1458 m
	5596 1462 5611 1478 5628 1480 c
	5659 1484 5704 1435 5712 1410 c
	5687 1406 5670 1428 5646 1431 c
	5580 1438 5463 1419 5454 1530 c
	5452 1550 5472 1554 5475 1572 c
	5478 1601 5457 1653 5479 1679 c
	5514 1718 5568 1676 5583 1644 c
	5596 1613 5572 1587 5563 1560 c
	5554 1527 5567 1486 5580 1458 c
	fk
	4944 1641 m
	4996 1649 4940 1558 4902 1554 c
	4845 1547 4846 1598 4879 1631 c
	4892 1643 4927 1639 4944 1641 c
	fk
	5790 1272 m
	5766 1286 5707 1393 5742 1413 c
	5799 1445 5801 1295 5790 1272 c
	fk
	5532 1410 m
	5578 1408 5596 1370 5629 1347 c
	5640 1338 5657 1342 5668 1335 c
	5697 1315 5693 1289 5730 1314 c
	5737 1299 5756 1271 5752 1254 c
	5748 1230 5704 1196 5682 1207 c
	5646 1223 5687 1245 5668 1264 c
	5657 1276 5640 1264 5628 1260 c
	5618 1282 5629 1312 5614 1332 c
	5588 1367 5539 1353 5532 1410 c
	fk
	5490 1284 m
	5522 1219 5439 1125 5382 1092 c
	5376 1098 l
	5490 1284 l
	fk
	5826 1266 m
	5847 1252 5892 1192 5884 1164 c
	5878 1146 5861 1142 5853 1128 c
	5839 1103 5862 1068 5820 1062 c
	5751 1051 5778 1125 5736 1128 c
	5702 1129 5673 1101 5652 1080 c
	5621 1152 5754 1189 5796 1222 c
	5810 1233 5815 1251 5826 1266 c
	fk
	3318 1086 m
	3337 1070 3344 1053 3355 1032 c
	3367 1006 3395 971 3396 942 c
	3396 889 3316 873 3282 901 c
	3259 920 3267 978 3277 1002 c
	3288 1030 3303 1058 3318 1086 c
	fk
	5502 948 m
	5493 919 5455 906 5437 882 c
	5392 819 5455 748 5502 714 c
	5430 682 5444 657 5422 594 c
	5413 570 5390 558 5383 534 c
	5375 498 5374 447 5340 426 c
	5282 389 5277 442 5226 438 c
	5190 435 5161 405 5124 408 c
	5042 412 5042 456 5002 510 c
	4977 545 4938 581 4938 630 c
	4938 714 5037 645 5061 672 c
	5072 686 5069 706 5082 720 c
	5106 747 5137 756 5166 775 c
	5205 803 5245 853 5280 888 c
	5311 919 5331 985 5376 1000 c
	5403 1009 5409 979 5430 969 c
	5451 957 5479 959 5502 948 c
	fk
	6000 894 m
	6054 870 l
	6030 840 l
	6066 822 l
	6018 786 l
	6048 750 l
	5976 719 5981 857 6000 894 c
	fk
	4158 828 m
	4221 791 4293 793 4356 747 c
	4384 727 4396 689 4422 666 c
	4481 610 4558 597 4618 543 c
	4664 503 4768 418 4777 360 c
	4783 320 4761 235 4704 253 c
	4684 258 4668 283 4650 294 c
	4598 321 4548 341 4506 384 c
	4462 427 4447 480 4414 528 c
	4386 567 4346 600 4314 636 c
	4285 666 4260 702 4230 731 c
	4210 749 4176 760 4159 781 c
	4148 795 4151 812 4158 828 c
	fk
	5856 828 m
	5873 717 5672 746 5616 705 c
	5583 682 5576 606 5634 612 c
	5679 618 5715 695 5766 678 c
	5692 588 l
	5766 480 l
	5694 438 l
	5677 474 l
	5643 504 l
	5628 546 l
	5580 384 l
	5559 412 5581 446 5565 474 c
	5554 492 5526 480 5517 498 c
	5510 511 5535 555 5539 570 c
	5547 593 5564 613 5572 636 c
	5592 694 5572 723 5640 759 c
	5682 781 5728 750 5772 764 c
	5809 775 5824 809 5856 828 c
	fk
	5940 576 m
	5963 654 6026 539 5940 576 c
	fk
	6018 336 m
	6001 313 5968 301 5946 283 c
	5927 267 5909 251 5892 234 c
	5885 227 5808 148 5811 204 c
	5811 224 5841 238 5856 247 c
	5893 272 5972 345 6018 336 c
	fk
	5748 264 m
	5725 232 5636 205 5604 228 c
	5621 254 5719 275 5748 264 c
	fk
	5286 168 m
	5263 160 5244 176 5220 171 c
	5110 152 4983 151 4872 162 c
	4849 164 4748 185 4767 222 c
	4789 267 4871 248 4908 238 c
	5016 211 5110 254 5214 217 c
	5255 203 5274 223 5286 168 c
	fk
	5544 222 m
	5523 193 5458 159 5424 174 c
	5446 210 5505 238 5544 222 c
	fk
	5400 210 m
	5412 198 l
	5376 168 l
	5369 189 5380 198 5400 210 c
	fk
	5646 156 m
	5614 142 5576 154 5550 174 c
	5588 193 5618 189 5646 156 c
	fk
} bd
/OutlineContinentCyan {
	2478 3472 m
	2523 3481 2654 3427 2607 3361 c
	2590 3338 2570 3370 2556 3375 c
	2540 3380 2484 3347 2484 3330 c
	2481 3287 2517 3251 2517 3216 c
	2519 3158 2463 3110 2460 3054 c
	2458 3018 2477 2918 2424 2898 c
	2357 2875 2267 2995 2262 3048 c
	2256 3101 2347 3131 2361 3180 c
	2374 3222 2344 3275 2346 3318 c
	2346 3331 2357 3341 2361 3354 c
	2370 3377 2359 3398 2364 3420 c
	2372 3454 2450 3466 2478 3472 c
	fk
} bd
/OutlineContinentMagenta {
	1266 4590 m
	1278 4599 1285 4628 1296 4630 c
	1334 4638 1409 4592 1407 4548 c
	1405 4525 1369 4482 1344 4497 c
	1323 4508 1323 4538 1308 4552 c
	1292 4567 1277 4570 1266 4590 c
	fk
	3306 2640 m
	3377 2604 3447 2526 3472 2448 c
	3484 2406 3459 2364 3472 2322 c
	3480 2293 3542 2218 3525 2190 c
	3515 2176 3462 2189 3444 2184 c
	3428 2217 3381 2257 3378 2292 c
	3373 2336 3416 2379 3388 2424 c
	3355 2474 3270 2502 3243 2556 c
	3235 2571 3245 2597 3240 2616 c
	3306 2640 l
	fk
} bd
/OutlineBorders1Black {
	792 5142 m
	794 5114 825 5059 802 5035 c
	788 5021 750 5035 732 5032 c
	706 5027 676 5038 654 5032 c
	600 5016 574 4999 516 4998 c
	fk
	2022 4836 m
	2117 4808 2230 4921 2316 4954 c
	2335 4961 2346 4949 2364 4953 c
	2435 4968 2521 5018 2598 5010 c
	2623 5007 2646 4991 2670 4983 c
	2683 4978 2705 4985 2717 4977 c
	2735 4962 2702 4927 2730 4911 c
	2763 4891 2879 4975 2849 4872 c
	2845 4858 2835 4849 2832 4836 c
	2886 4848 l
	fk
	1680 4806 m
	1663 4791 1623 4766 1602 4764 c
	1584 4762 1571 4779 1554 4774 c
	1489 4755 1457 4710 1420 4663 c
	1403 4642 1379 4641 1368 4614 c
	fk
	1770 4794 m
	1806 4752 l
	fk
	6 4740 m
	99 4740 156 4697 246 4675 c
	288 4664 316 4683 346 4638 c
	379 4586 360 4513 414 4471 c
	432 4457 460 4457 480 4444 c
	513 4422 521 4391 543 4362 c
	566 4332 593 4317 612 4284 c
	624 4264 649 4255 648 4230 c
	646 4210 630 4199 624 4182 c
	594 4091 553 4008 480 3942 c
	438 3904 388 3903 363 3846 c
	356 3830 366 3818 366 3804 c
	366 3727 380 3691 414 3624 c
	432 3585 436 3533 446 3492 c
	464 3407 489 3324 507 3240 c
	517 3195 522 3140 546 3102 c
	591 3128 635 3102 678 3133 c
	799 3218 833 3441 876 3576 c
	fk
	0 4740 m
	6 4740 l
	fk
	1164 4500 m
	1198 4547 1214 4562 1272 4584 c
	fk
	1368 4494 m
	1401 4472 1360 4465 1371 4440 c
	1378 4421 1402 4433 1414 4425 c
	1463 4394 1411 4356 1380 4350 c
	fk
	2070 4470 m
	2121 4385 2020 4326 1950 4377 c
	1928 4392 1912 4434 1878 4426 c
	1801 4406 1797 4307 1746 4266 c
	fk
	1440 4062 m
	1467 4070 1477 4125 1506 4120 c
	1542 4115 1550 4050 1569 4027 c
	1578 4015 1605 4016 1620 4006 c
	1648 3984 1657 3941 1698 3936 c
	1791 3922 1727 4090 1794 4062 c
	fk
	1356 4002 m
	1410 3990 l
	fk
	1536 3954 m
	1564 3933 1571 3899 1596 3876 c
	1629 3844 1681 3843 1692 3792 c
	fk
	1254 3864 m
	1286 3866 1337 3887 1368 3880 c
	1389 3876 1384 3852 1399 3843 c
	1412 3834 1426 3847 1440 3844 c
	1490 3834 1465 3786 1440 3768 c
	fk
	5718 3762 m
	5676 3726 l
	fk
	1494 3708 m
	1539 3740 1555 3759 1602 3714 c
	fk
	4902 3318 m
	4975 3318 4962 3345 4975 3402 c
	4980 3422 4998 3446 4998 3468 c
	4997 3487 4974 3487 4969 3504 c
	4955 3544 5016 3571 5046 3580 c
	5057 3583 5133 3588 5142 3585 c
	5192 3562 5215 3490 5256 3456 c
	5285 3430 5329 3435 5364 3424 c
	5384 3418 5393 3396 5412 3387 c
	5459 3363 5496 3432 5514 3462 c
	5547 3438 5574 3314 5547 3277 c
	5535 3260 5510 3272 5503 3246 c
	5497 3225 5516 3215 5521 3198 c
	5529 3174 5512 3140 5502 3120 c
	fk
	1146 3354 m
	1048 3216 945 3082 844 2946 c
	805 2892 776 2793 708 2850 c
	570 2670 l
	516 2739 421 2642 372 2622 c
	381 2585 377 2547 354 2514 c
	192 2528 l
	102 2574 l
	6 2556 l
	fk
	3888 3198 m
	3888 3132 3942 3148 3969 3102 c
	3989 3066 3953 3013 3975 2982 c
	3993 2957 4090 2950 4122 2931 c
	4159 2907 4161 2857 4206 2835 c
	4247 2814 4327 2839 4374 2838 c
	4409 2836 4440 2811 4476 2808 c
	4539 2801 4558 2834 4614 2847 c
	4652 2857 4698 2847 4734 2871 c
	4753 2884 4797 2933 4798 2958 c
	4800 2978 4769 2997 4789 3017 c
	4807 3035 4844 3015 4866 3030 c
	4881 3041 4926 3068 4935 3084 c
	4945 3102 4938 3120 4956 3138 c
	4986 3168 5027 3167 5064 3186 c
	fk
	2046 2670 m
	2058 2802 l
	2019 2868 l
	2028 2949 l
	2090 3000 l
	2070 3090 l
	2105 3103 l
	2136 3174 l
	2265 3148 l
	2262 3066 l
	fk
	1494 3090 m
	1452 2970 l
	fk
	1446 2952 m
	1478 2932 1561 2914 1595 2943 c
	1616 2961 1599 3026 1650 3005 c
	1690 2988 1735 2972 1761 2934 c
	1809 2866 1811 2750 1878 2697 c
	1900 2680 1935 2672 1955 2651 c
	1967 2638 1961 2618 1974 2604 c
	1984 2596 1990 2605 1998 2610 c
	fk
	2706 2688 m
	2753 2660 2798 2643 2856 2673 c
	2880 2685 2884 2712 2916 2715 c
	2959 2720 3002 2656 3054 2666 c
	3075 2670 3120 2716 3136 2709 c
	3175 2692 3120 2635 3145 2619 c
	3172 2600 3205 2647 3240 2616 c
	fk
	0 2562 m
	6 2556 l
	fk
	2592 2406 m
	2607 2356 2728 2305 2778 2331 c
	2802 2343 2799 2380 2826 2391 c
	2841 2396 2852 2379 2868 2382 c
	2883 2386 2885 2405 2904 2405 c
	2920 2404 2941 2383 2957 2391 c
	2974 2399 2965 2422 2973 2436 c
	2983 2455 3008 2454 3023 2468 c
	3033 2478 3030 2500 3036 2514 c
	3066 2496 l
	3112 2572 3124 2501 3192 2487 c
	3209 2484 3218 2500 3234 2499 c
	3269 2499 3264 2467 3300 2502 c
	fk
	4284 2520 m
	4332 2495 l
	4377 2418 l
	4422 2387 l
	4476 2330 l
	4536 2364 l
	4563 2299 4531 2254 4513 2196 c
	4503 2160 4508 2116 4491 2082 c
	4467 2036 4381 2001 4332 2004 c
	4308 2005 4303 2033 4284 2043 c
	4266 2051 4240 2037 4225 2049 c
	4212 2057 4219 2076 4206 2087 c
	4195 2095 4155 2092 4140 2093 c
	4086 2095 4068 2029 4026 2016 c
	3985 2004 3950 2042 3912 2045 c
	3889 2046 3877 2017 3858 2019 c
	3825 2024 3777 2020 3744 2030 c
	3652 2056 3590 2127 3522 2190 c
	fk
	1320 1968 m
	1298 1964 1264 1971 1248 1959 c
	1195 1922 1247 1914 1246 1878 c
	1246 1844 1237 1803 1251 1770 c
	1279 1699 1367 1637 1428 1596 c
	1394 1571 1346 1578 1308 1563 c
	1279 1551 1256 1531 1224 1536 c
	1206 1538 1194 1551 1176 1554 c
	1133 1558 1084 1546 1044 1563 c
	1022 1571 1015 1595 996 1605 c
	969 1618 933 1598 906 1611 c
	850 1635 841 1679 808 1722 c
	792 1741 764 1752 753 1776 c
	729 1823 751 1884 741 1932 c
	736 1958 725 1987 729 2016 c
	734 2059 787 2111 828 2121 c
	844 2126 859 2114 876 2120 c
	904 2129 926 2158 954 2171 c
	973 2179 989 2172 1008 2186 c
	1061 2225 1106 2315 1170 2337 c
	1197 2348 1231 2334 1260 2334 c
	fk
	2028 2316 m
	2003 2257 2046 2205 2094 2174 c
	2113 2160 2159 2142 2151 2112 c
	2131 2024 2036 2022 1968 2036 c
	1931 2043 1895 2039 1860 2054 c
	1828 2066 1798 2090 1764 2094 c
	1727 2098 1665 2055 1638 2067 c
	1589 2086 1528 2178 1476 2181 c
	1448 2182 1452 2144 1422 2154 c
	fk
	4284 1830 m
	4342 1800 l
	4377 1710 l
	4488 1668 l
	4495 1727 l
	4608 1746 l
	4662 1785 l
	4752 1770 l
	4741 1731 4778 1716 4812 1710 c
	fk
	4662 1626 m
	4626 1566 l
	4685 1530 4718 1480 4770 1434 c
	4789 1416 4818 1401 4828 1374 c
	4835 1352 4815 1334 4819 1314 c
	4826 1284 4848 1269 4840 1236 c
	4827 1186 4743 1188 4758 1134 c
	4668 1080 l
	fk
	4410 1620 m
	4482 1566 l
	4470 1458 l
	4503 1474 4526 1484 4560 1495 c
	4575 1501 4585 1520 4602 1521 c
	4620 1522 4638 1500 4648 1488 c
	4662 1471 4661 1451 4671 1434 c
	4688 1401 4746 1366 4719 1320 c
	4696 1282 4622 1321 4591 1294 c
	4541 1251 4586 1198 4548 1170 c
	fk
	4308 1560 m
	4246 1477 4355 1459 4359 1392 c
	4360 1360 4306 1322 4284 1308 c
	fk
	4320 1080 m
	4398 1128 l
	fk
	4986 678 m
	4991 613 5073 614 5118 644 c
	5133 653 5142 671 5160 678 c
	5199 692 5246 664 5278 708 c
	5307 749 5304 813 5341 852 c
	5367 880 5397 864 5430 864 c
	fk
} bd
/OutlineBorders2Black {
	2694 4980 m
	2691 4897 2641 4849 2586 4794 c
	fk
	1464 4896 m
	1436 4858 1426 4753 1446 4710 c
	fk
	972 4872 m
	965 4843 949 4825 955 4794 c
	960 4772 983 4754 984 4734 c
	985 4690 963 4672 1008 4638 c
	fk
	1512 4854 m
	1506 4746 l
	fk
	486 4680 m
	372 4584 l
	fk
	1404 4536 m
	1483 4437 l
	1560 4434 l
	1570 4458 1558 4490 1578 4512 c
	1603 4537 1685 4482 1701 4456 c
	1709 4443 1727 4383 1727 4368 c
	1726 4349 1713 4332 1716 4314 c
	1729 4253 1776 4200 1803 4146 c
	1817 4116 1788 4089 1791 4062 c
	1792 4042 1815 4028 1818 4008 c
	1827 3937 1765 3909 1800 3840 c
	fk
	648 4242 m
	726 4212 l
	816 4254 l
	fk
	1350 4086 m
	1362 4088 1378 4099 1392 4096 c
	1512 4078 1359 3926 1356 3882 c
	fk
	546 4020 m
	622 4066 675 4011 756 4026 c
	fk
	1578 4020 m
	1571 3998 1571 3977 1554 3961 c
	1509 3924 1435 3917 1452 3840 c
	fk
	0 3948 m
	86 3904 177 3855 252 3793 c
	285 3765 315 3722 360 3750 c
	fk
	2076 3396 m
	2136 3321 l
	2193 3282 l
	2202 3162 l
	fk
	3306 2640 m
	3288 2674 3244 2714 3277 2754 c
	3314 2799 3334 2761 3372 2760 c
	3394 2759 3411 2781 3432 2787 c
	3454 2795 3475 2789 3498 2802 c
	3532 2822 3583 2874 3588 2916 c
	3590 2934 3575 2965 3585 2981 c
	3602 3009 3652 2997 3672 2982 c
	3681 3008 3679 3065 3714 3081 c
	3737 3091 3769 3057 3790 3079 c
	3807 3095 3803 3129 3822 3150 c
	3861 3193 3894 3191 3942 3217 c
	3975 3235 4009 3269 4050 3273 c
	4114 3278 4154 3205 4224 3226 c
	4273 3242 4212 3339 4284 3351 c
	4342 3360 4379 3288 4422 3267 c
	4457 3249 4518 3286 4560 3282 c
	4614 3275 4639 3220 4704 3235 c
	4760 3249 4778 3300 4824 3325 c
	4836 3331 4846 3327 4860 3325 c
	4926 3314 4900 3274 4884 3216 c
	4925 3198 4944 3227 4980 3238 c
	5013 3249 5087 3180 5098 3150 c
	5116 3098 5019 3004 5065 2958 c
	5104 2919 5162 2996 5202 2973 c
	5225 2959 5209 2908 5226 2886 c
	fk
	750 3222 m
	936 3072 l
	fk
	5346 2862 m
	5337 2907 5389 2996 5425 3029 c
	5437 3039 5451 3035 5461 3048 c
	5475 3064 5481 3117 5502 3121 c
	5513 3124 5532 3106 5544 3102 c
	fk
	2436 2910 m
	2459 2910 2474 2922 2496 2925 c
	2590 2934 2630 2845 2678 2784 c
	2690 2767 2716 2760 2718 2736 c
	2720 2683 2663 2653 2648 2610 c
	2637 2580 2609 2532 2610 2502 c
	2610 2479 2640 2474 2633 2448 c
	2625 2423 2596 2423 2588 2400 c
	2572 2356 2606 2289 2615 2250 c
	2618 2234 2634 2222 2619 2202 c
	2605 2185 2574 2206 2556 2199 c
	2532 2191 2513 2159 2496 2142 c
	fk
	828 2922 m
	1104 2721 l
	1182 2652 l
	1296 2658 l
	fk
	4296 2832 m
	4352 2748 4249 2742 4237 2676 c
	4228 2630 4310 2569 4281 2514 c
	4237 2434 4082 2459 4020 2502 c
	3990 2523 3958 2575 3924 2585 c
	3891 2593 3837 2571 3804 2568 c
	3692 2555 3553 2533 3462 2466 c
	fk
	3444 2184 m
	3441 2161 3411 2141 3423 2118 c
	3455 2054 3549 2044 3606 2019 c
	3638 2006 3664 1979 3696 1962 c
	3716 1952 3764 1938 3786 1953 c
	3800 1962 3795 2013 3792 2028 c
	fk
	4260 2046 m
	4260 1983 4200 1992 4171 1950 c
	4148 1915 4144 1871 4128 1836 c
	4116 1811 4090 1809 4077 1788 c
	4045 1738 4039 1687 3996 1644 c
	fk
	4326 2004 m
	4370 1940 4311 1907 4287 1854 c
	4254 1782 4205 1664 4251 1584 c
	4289 1515 4469 1629 4452 1686 c
	fk
	6 1428 m
	134 1638 l
	208 1710 l
	259 1779 l
	348 1829 l
	426 1832 l
	492 1866 l
	594 1808 l
	750 1782 l
	fk
	4512 1734 m
	4572 1656 l
	4626 1650 l
	4728 1608 l
	fk
	900 1236 m
	896 1276 869 1320 877 1362 c
	892 1432 965 1547 1032 1572 c
	fk
	4818 1326 m
	4801 1319 4779 1325 4764 1317 c
	4735 1300 4739 1276 4704 1308 c
	fk
} bd
/OutlineBorders1Maroon {
	1638 5268 m
	1644 5124 l
	fk
	1518 5136 m
	1507 5085 1435 5026 1386 5016 c
	fk
	1290 4890 m
	1277 4920 1301 4940 1332 4944 c
	fk
	1188 4854 m
	1206 4770 l
	fk
	1404 4830 m
	1452 4830 l
	fk
	984 4728 m
	1110 4716 l
	1156 4719 l
	1284 4620 l
	fk
	1662 4608 m
	1678 4652 1728 4686 1776 4686 c
	fk
	1524 4650 m
	1569 4596 l
	1548 4554 l
	1578 4512 l
	fk
	1704 4458 m
	1728 4507 1771 4589 1830 4602 c
	fk
	1914 4542 m
	1788 4434 l
	fk
	1302 4446 m
	1219 4260 l
	1224 4182 l
	1209 4122 l
	1206 4032 l
	fk
	1560 4434 m
	1590 4386 l
	1530 4383 l
	1470 4332 l
	fk
	1638 4314 m
	1722 4302 l
	fk
	2244 4314 m
	2274 4262 2323 4317 2364 4288 c
	2390 4268 2428 4235 2460 4225 c
	2481 4219 2502 4232 2526 4221 c
	2557 4205 2600 4168 2634 4164 c
	2658 4160 2666 4182 2688 4185 c
	2733 4189 2778 4145 2826 4152 c
	2864 4157 2921 4156 2958 4165 c
	2978 4171 2997 4190 3018 4192 c
	3036 4195 3049 4177 3066 4171 c
	3084 4166 3101 4180 3120 4174 c
	3145 4167 3156 4152 3186 4152 c
	fk
	2124 4308 m
	2088 4276 2075 4307 2040 4300 c
	2025 4296 1969 4272 1956 4264 c
	1924 4243 1931 4196 1896 4183 c
	1854 4169 1828 4202 1794 4158 c
	fk
	1386 4098 m
	1386 4153 1409 4198 1458 4227 c
	1470 4234 1488 4234 1498 4243 c
	1522 4266 1526 4298 1572 4282 c
	1626 4262 1618 4204 1692 4218 c
	fk
	2112 4026 m
	2131 3959 2106 3965 2058 3934 c
	1975 3883 1876 3886 1794 3924 c
	fk
	1440 3594 m
	1474 3590 1485 3562 1512 3546 c
	1562 3514 1616 3490 1668 3465 c
	1698 3449 1722 3414 1752 3396 c
	1770 3384 1796 3363 1818 3360 c
	1839 3356 1871 3368 1889 3352 c
	1934 3309 1939 3234 1920 3180 c
	fk
	3462 3372 m
	3462 3314 3494 3298 3534 3258 c
	3594 3196 3666 3153 3708 3078 c
	fk
	5964 3210 m
	5964 3119 6026 3041 5992 2946 c
	5956 2847 5827 2798 5790 2706 c
	fk
	1968 3156 m
	1920 3124 l
	1866 3057 l
	1716 3060 l
	1638 3068 l
	1590 3150 l
	fk
	5064 2958 m
	4948 2808 l
	4914 2750 l
	4837 2735 l
	4816 2664 l
	4728 2600 l
	4674 2604 l
	4572 2534 l
	4536 2552 l
	4482 2547 l
	4404 2627 l
	4236 2670 l
	fk
	5028 2514 m
	4986 2476 4939 2482 4890 2475 c
	4842 2469 4826 2433 4794 2408 c
	4782 2399 4767 2396 4761 2382 c
	4755 2369 4764 2358 4761 2346 c
	4753 2320 4725 2305 4735 2274 c
	4747 2240 4774 2228 4758 2190 c
	fk
	2964 2172 m
	2986 2161 3011 2148 3036 2160 c
	3051 2167 3079 2215 3099 2189 c
	3105 2179 3100 2164 3103 2154 c
	3113 2125 3152 2099 3153 2070 c
	3153 2039 3112 2016 3121 1986 c
	3127 1968 3145 1959 3153 1944 c
	3167 1914 3167 1873 3183 1842 c
	3193 1821 3215 1805 3219 1782 c
	3222 1758 3199 1745 3187 1728 c
	3172 1704 3158 1653 3151 1626 c
	3142 1587 3165 1550 3168 1512 c
	3169 1491 3154 1472 3156 1452 c
	3157 1425 3185 1396 3171 1368 c
	3155 1338 3071 1310 3042 1302 c
	fk
	4962 2136 m
	4848 1974 l
	4862 1967 4882 1977 4894 1971 c
	4942 1945 4891 1827 4903 1788 c
	4911 1758 4941 1749 4944 1716 c
	fk
	3720 1956 m
	3746 1877 3682 1865 3630 1827 c
	3610 1814 3585 1783 3564 1776 c
	3515 1761 3481 1795 3439 1745 c
	3360 1648 3442 1568 3492 1482 c
	fk
} bd
/OutlineBorders2Maroon {
	1638 5232 m
	1698 5266 l
	1812 5262 l
	fk
	1638 5184 m
	1627 5132 1558 5062 1506 5100 c
	fk
	1482 5076 m
	1542 5004 l
	fk
	1134 4914 m
	1135 4891 1149 4856 1176 4854 c
	1200 4851 1223 4880 1248 4888 c
	1295 4901 1331 4886 1368 4861 c
	1380 4852 1399 4853 1402 4836 c
	1412 4787 1359 4778 1332 4771 c
	1311 4765 1296 4741 1272 4747 c
	1254 4750 1247 4770 1230 4774 c
	1205 4781 1160 4737 1158 4716 c
	fk
	2442 4446 m
	2468 4440 2492 4424 2520 4422 c
	2620 4413 2599 4539 2625 4596 c
	2655 4665 2720 4719 2771 4771 c
	2795 4795 2793 4830 2832 4842 c
	fk
	1578 4770 m
	1563 4733 1529 4605 1470 4621 c
	1451 4625 1439 4652 1422 4662 c
	fk
	1566 4596 m
	1663 4662 1659 4552 1740 4536 c
	fk
	1740 4518 m
	1779 4477 1772 4414 1836 4398 c
	fk
	1224 4446 m
	1266 4468 1326 4451 1368 4440 c
	fk
	2364 4458 m
	2300 4392 l
	2244 4314 l
	2178 4318 l
	2124 4308 l
	2137 4360 2137 4381 2076 4386 c
	fk
	3822 4458 m
	3845 4451 3893 4409 3886 4380 c
	3883 4363 3853 4357 3861 4338 c
	3875 4302 3935 4330 3952 4284 c
	3966 4243 3947 4192 3948 4152 c
	3948 4121 3980 4106 3978 4074 c
	3975 4040 3952 3999 3961 3966 c
	3977 3913 3989 3862 4003 3810 c
	4008 3788 4024 3765 4006 3744 c
	3969 3695 3888 3724 3846 3694 c
	3804 3664 3830 3614 3798 3582 c
	3763 3547 3712 3523 3672 3496 c
	3609 3454 3571 3402 3498 3379 c
	3451 3365 3404 3390 3360 3376 c
	3329 3367 3317 3342 3282 3342 c
	3247 3341 3199 3375 3169 3351 c
	3153 3338 3159 3315 3148 3300 c
	3113 3247 3056 3214 3073 3144 c
	3077 3128 3089 3116 3094 3102 c
	3101 3080 3104 3016 3078 3012 c
	3019 3002 3017 3023 2987 3057 c
	2966 3081 2930 3080 2912 3102 c
	2868 3150 2871 3231 2802 3267 c
	2717 3310 2651 3141 2616 3090 c
	2567 3166 l
	2502 3174 l
	fk
	3486 4398 m
	3462 4310 3406 4313 3336 4276 c
	3281 4248 3233 4203 3192 4158 c
	3115 4073 3113 3947 3076 3846 c
	3049 3776 2970 3731 2930 3672 c
	2907 3639 2912 3598 2898 3564 c
	2878 3573 2848 3570 2832 3583 c
	2803 3604 2800 3645 2775 3670 c
	2721 3726 2659 3685 2610 3654 c
	2592 3702 l
	2499 3618 l
	2520 3540 l
	2502 3474 l
	fk
	1590 4386 m
	1650 4290 l
	1764 4062 l
	fk
	1428 4380 m
	1518 4278 l
	fk
	1176 4338 m
	1242 4314 l
	fk
	1224 4230 m
	1260 4230 l
	fk
	1926 4224 m
	2018 4194 2018 4097 2088 4038 c
	2113 4016 2122 4043 2148 4036 c
	2170 4031 2212 4003 2232 3988 c
	2271 3956 2276 3900 2306 3864 c
	2322 3844 2361 3857 2369 3834 c
	2390 3770 2331 3706 2307 3660 c
	2289 3626 2316 3598 2325 3570 c
	2335 3540 2314 3507 2324 3480 c
	2331 3458 2354 3441 2370 3426 c
	fk
	1656 4218 m
	1659 4122 l
	1596 4096 l
	1560 4038 l
	fk
	1158 4194 m
	1224 4194 l
	fk
	5052 3582 m
	5050 3602 5065 3641 5061 3654 c
	5038 3719 4960 3741 4962 3822 c
	4963 3927 5051 3870 5112 3913 c
	5167 3954 5143 4012 5179 4056 c
	5236 4124 5320 4056 5388 4056 c
	fk
	1728 3606 m
	1668 3468 l
	fk
	2028 3384 m
	1999 3352 2025 3341 2022 3306 c
	2017 3265 1967 3260 1938 3264 c
	fk
	1734 3276 m
	1768 3265 1800 3224 1836 3207 c
	1918 3165 2008 3157 2076 3090 c
	fk
	1728 3060 m
	1704 2982 l
	fk
	5946 2988 m
	5994 2994 l
	fk
	5982 2928 m
	6030 2880 l
	fk
	5892 2814 m
	5940 2784 l
	fk
	5766 2778 m
	5808 2736 l
	fk
	4806 2658 m
	4824 2448 l
	fk
	4512 2142 m
	4566 2048 4666 2109 4734 2162 c
	4746 2171 4752 2192 4770 2195 c
	4782 2196 4789 2185 4800 2183 c
	4827 2176 4870 2196 4894 2186 c
	4927 2171 4957 2119 5004 2124 c
	5042 2127 5073 2172 5100 2195 c
	5120 2211 5140 2217 5152 2244 c
	5162 2266 5169 2325 5152 2346 c
	5140 2361 5122 2362 5113 2382 c
	5100 2405 5109 2439 5097 2459 c
	5083 2480 5018 2480 5029 2520 c
	5049 2585 5103 2533 5142 2538 c
	5171 2541 5192 2556 5226 2556 c
	fk
	3198 2484 m
	3193 2412 l
	3240 2346 l
	3184 2318 3203 2302 3232 2262 c
	3241 2248 3251 2218 3270 2214 c
	3284 2212 3290 2232 3300 2240 c
	3327 2262 3350 2267 3384 2274 c
	fk
	2868 2382 m
	2897 2316 l
	2901 2256 l
	2939 2237 l
	2976 2190 l
	2919 2136 l
	2937 2094 l
	2964 1974 l
	2862 1989 l
	2802 1956 l
	fk
	3216 1782 m
	3246 1812 3298 1884 3354 1871 c
	3377 1865 3392 1841 3414 1830 c
	3444 1815 3472 1810 3474 1770 c
	fk
	1560 1734 m
	1428 1596 l
	fk
	3426 1584 m
	3174 1392 l
	fk
	4836 1224 m
	4932 1170 l
	fk
} bd
/OutlineBorders1Purple {
	342 5472 m
	294 5184 l
	246 4920 l
	fk
	1152 5472 m
	1212 5088 l
	fk
	1962 5472 m
	1764 5298 l
	fk
	3546 5472 m
	2880 4968 l
	fk
	3720 5472 m
	3505 4818 l
	3402 4512 l
	fk
	5604 5472 m
	5604 5244 l
	fk
	1824 5238 m
	1998 5028 l
	fk
	1560 5232 m
	1584 5214 l
	fk
	1860 4854 m
	1870 4898 1851 4948 1920 4950 c
	fk
	1512 4944 m
	1482 4872 l
	fk
	1644 4842 m
	1689 4887 1784 4929 1812 4836 c
	fk
	438 4860 m
	486 4890 l
	fk
	1896 4770 m
	1884 4734 l
	fk
	1890 4716 m
	1914 4698 l
	fk
	1782 4704 m
	1824 4704 l
	fk
	1854 4692 m
	1896 4668 l
	fk
	738 4686 m
	960 4350 l
	fk
	2076 4650 m
	2148 4518 l
	fk
	1158 4404 m
	1200 4380 l
	fk
	1086 4380 m
	1056 4356 l
	fk
	852 4206 m
	936 4296 l
	fk
	900 4134 m
	966 4104 l
	fk
	6024 4038 m
	6077 3949 5992 3788 5928 3726 c
	5896 3695 5839 3658 5796 3684 c
	fk
	1044 4014 m
	1068 3996 l
	fk
	1242 3960 m
	1272 3918 l
	fk
	5550 3816 m
	5586 3846 l
	fk
	1206 3648 m
	1185 3616 1204 3574 1224 3546 c
	fk
	1086 3510 m
	1218 3534 l
	fk
	1416 3498 m
	1383 3475 1340 3457 1302 3474 c
	fk
	5820 3492 m
	5838 3456 l
	fk
	5976 3324 m
	6034 3276 6023 3251 6006 3186 c
	fk
	6066 2910 m
	6192 2712 l
	fk
	6006 2838 m
	6008 2743 6045 2653 6036 2556 c
	6013 2327 5915 2141 5809 1944 c
	5751 1837 5680 1724 5568 1668 c
	fk
	5622 2676 m
	5700 2640 l
	fk
	5538 2628 m
	5523 2550 5442 2432 5364 2412 c
	fk
	2286 2346 m
	2280 2316 l
	fk
	1302 2052 m
	1386 2064 l
	fk
	5340 2040 m
	5412 2010 l
	fk
	5442 1866 m
	5484 1686 l
	fk
	5034 1776 m
	5039 1744 5060 1717 5064 1686 c
	5073 1587 5038 1516 4974 1446 c
	4952 1422 4929 1395 4896 1392 c
	fk
	1686 1692 m
	1791 1639 1869 1538 1974 1483 c
	2193 1367 2446 1302 2688 1252 c
	2796 1229 2959 1167 3066 1212 c
	fk
	5526 1434 m
	5532 1410 l
	fk
	5706 1428 m
	5748 1416 l
	fk
	3342 1314 m
	3565 1272 3795 1189 3978 1054 c
	4045 1005 4139 914 4158 828 c
	fk
	5796 1302 m
	5826 1266 l
	fk
	5676 1212 m
	5676 1152 l
	fk
	5682 1104 m
	5682 957 5587 807 5436 780 c
	fk
	4812 1092 m
	4849 1062 4909 1058 4956 1048 c
	5071 1022 5222 1006 5328 954 c
	fk
	3240 1086 m
	3300 1056 l
	fk
	5826 1062 m
	5866 954 l
	5856 828 l
	fk
	3330 888 m
	3330 0 l
	fk
	6042 744 m
	6078 660 l
	fk
	4650 672 m
	4938 642 l
	fk
	4644 600 m
	4614 546 l
	fk
	5604 414 m
	5642 328 5566 276 5508 228 c
	fk
	5136 408 m
	5130 240 l
	fk
	4746 264 m
	4782 234 l
	fk
	5376 192 m
	5280 180 l
	fk
	5406 192 m
	5430 180 l
	fk
	5124 162 m
	5124 0 l
	fk
} bd
/OutlineBorders2Purple {
	1170 5352 m
	1332 5340 l
	fk
	1200 5172 m
	1302 5148 l
	fk
	2100 1902 m
	2183 1769 2042 1582 1926 1518 c
	fk
	4092 1380 m
	3882 1128 l
	fk
	2256 1362 m
	2139 1046 2005 726 1865 420 c
	1805 291 1721 138 1692 0 c
	fk
	5868 924 m
	5919 924 5951 906 5988 870 c
	fk
} bd
/OutlineBorders1Navy {
	1746 4770 m
	1728 4758 l
	fk
	1776 4722 m
	1794 4740 l
	fk
	1482 3690 m
	1458 3660 l
	fk
	1614 3678 m
	1632 3654 l
	fk
	1398 3144 m
	1416 3126 l
	fk
	1356 3048 m
	1374 3042 l
	fk
} bd
/ShapeArrows {
	307 898 t 180 o
	5 1.5 m 0 1.5 l 0 -1.5 l 5 -1.5 l 5 -5 l 17 0 l 5 5 l p
	-180 o -307 -898 t
	fk
} bd
{
	currentdict end 3 1 roll [ exch /setgray load ] cvx def begin
}{
	currentdict end 5 1 roll [ 4 1 roll /setrgbcolor load ] cvx def begin
}{
	currentdict end 6 1 roll [ 5 1 roll /setcmykcolor load ] cvx def begin
} bind VisitColors
s
MapUnitLetterFont z
{
	exch load exch load
	2 index [ exch n 0 0 m true charpath pathbbox 3 2 roll add -2 div 3 1 roll add -2 div exch ] 3 1 roll
	4 dict begin /Contrast xd /Paint xd /Offset xd /Letter xd currentdict end
	[ /Power 3 2 roll { dup /Controlled ChangeController put ChangeController { dup /Outer Power /Paint get put /ChangeController false def } if } /exec load /def load ] cvx
	currentdict end 3 1 roll def begin
} VisitPowers
r
/ChangeController false def
/AUSTRIACENTER /AUSTRIA ld
/CHINACENTER /CHINA ld
/ENGLANDCENTER /ENGLAND ld
/FRANCECENTER /FRANCE ld
/GERMANYCENTER /GERMANY ld
/ITALYCENTER /ITALY ld
/JAPANCENTER /JAPAN ld
/INDIACENTER /INDIA ld
/RUSSIACENTER /RUSSIA ld
/TURKEYCENTER /TURKEY ld
/UNOWNEDCENTER /UNOWNED ld
{ currentdict end 4 1 roll [ 3 1 roll ] cvx def begin } bind
VisitSupplies
%%EndSetup
