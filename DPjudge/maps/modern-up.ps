%!PS-Adobe-3.0
%%Title: Diplomacy Map (modern-up map)
%%Creator: dpmap, using a map created with DPeye by Mario Huys (woelpad@gmail.com)
%%DocumentPaperSizes: Letter
%%LanguageLevel: 2
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentNeededResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndComments

%%BeginDefaults
%%PageResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndDefaults

% INFO
%  573   83 ADA    Adana
%  315  149 ADR    Adriatic Sea
%  425   62 AEG    Aegean Sea
%  360  122 ALB    Albania
%  478  -39 ALE    Alexandria
%  159   67 ALG    Algeria
%  232  242 ALS    Alsace
%  519   80 ANA    Anatolia
%  103  120 AND    Andalusia
%  552  125 ANK    Ankara
%  332  117 APU    Apulia
%  770  -52 ARA    Arabian Sea
%  214  653 ARC    Arctic Ocean
%  639  135 ARM    Armenia
%  527  -89 ASW    Aswan
%  314  214 AUS    Austria
%  179  197 AUV    Auvergne
%  671  129 AZE    Azerbaijan
%  355  341 BAL    Baltic Sea
%  134  154 BAR    Barcelona
%  232  284 BEL    Belgium
%  303  295 BER    Berlin
%  322  330 BHM    Bornholm Sea
%  420  287 BIE    Bielorussia
%  125  232 BIS    Bay of Biscay
%  151  199 BOR    Bordeaux
%  337  176 BOS    Bosnia
%  161  256 BRI    Brittany
%  488  640 BRN    Barents Sea
%  421  148 BUL    Bulgaria
%  509  -48 CAI    Cairo
%  699  180 CAS    Caspian Sea
%  645  184 CAU    Caucasus
%  524  285 CEN    Central Russian Plateau
%  165  387 CLY    Clyde
%  315  175 CRO    Croatia
%  324  244 CZE    Czech Republic
%  280  352 DEN    Denmark
%  529  236 DON    Donbas
%  547  166 EBS    Eastern Black Sea
%  184  400 EDI    Edinburgh
%  489   19 EME    Eastern Mediterranean
%  142  289 ENG    English Channel
%  441  -39 ESA    Eastern Sahara
%  406  386 EST    Estonia
%  397  437 FIN    Finland
%  277  275 FRA    Frankfurt
%  368  318 GDA    Gdansk
%  604  177 GEO    Georgia
%   68  118 GIB    Gibraltar
%  373  392 GOB    Gulf of Bothnia
%  195  143 GOL    Gulf of Lyon
%  536  391 GOR    Gorky
%  384   91 GRE    Greece
%  272  301 HAM    Hamburg
%  256  337 HEL    Heligoland Bight
%  245  307 HOL    Holland
%  345  201 HUN    Hungary
%  118  580 ICE    Iceland
%  356   64 ION    Ionian Sea
%  128  353 IRE    Ireland
%  115  315 IRI    Irish Sea
%  666    1 IRK    Irak
%  713   46 IRN    Iran
%  712   96 IRN/NC Iran (north coast)
%  755  -36 IRN/SC Iran (south coast)
%  542   -9 ISR    Israel
%  470  106 IST    Istanbul
%  476   75 IZM    Izmir
%  565  -23 JOR    Jordan
%  756  243 KAZ    Kazakhstan
%  537  260 KHA    Kharkov
%  494  248 KIE    Kiev
%  370  251 KRA    Krakow
%  391  549 LAP    Lapland
%  406  359 LAT    Latvia
%  351    1 LBN    Libyan Sea
%  291  -17 LIB    Libya
%  238  161 LIG    Ligurian Sea
%  391  334 LIT    Lithuania
%  175  346 LIV    Liverpool
%  195  315 LON    London
%  212  227 LYO    Lyon
%  380  135 MAC    Macedonia
%   83  170 MAD    Madrid
%  293   34 MAL    Maltese Sea
%  206  197 MAR    Marseilles
%   53  257 MID    Mid Atlantic Ocean
%  266  198 MIL    Milan
%  452  220 MOL    Moldavia
%  225  182 MON    Monaco
%   51   86 MOR    Morocco
%  500  337 MOS    Moscow
%  268  236 MUN    Munich
%  463  523 MUR    Murmansk
%   72  448 NAO    North Atlantic Ocean
%  321   96 NAP    Naples
%  110  194 NAV    Navarra
%  227  382 NTH    North Sea
%  261  536 NWG    Norwegian Sea
%  282  424 NWY    Norway
%  475  230 ODE    Odessa
%  188  238 PAR    Paris
%  731  -27 PER    Persian Gulf
%  201  270 PIC    Picardy
%  243  194 PIE    Piedmont
%  417  235 POD    Podolia
%   56  179 POR    Portugal
%  330  309 PRU    Prussia
%  553  -79 RED    Red Sea
%  296  132 ROM    Rome
%  570  204 ROS    Rostov
%  251  264 RUH    Ruhr
%  441  182 RUM    Rumania
%    0  117 SAO    South Atlantic Ocean
%  669  -70 SAU    Saudi Arabia
%  288  253 SAX    Saxony
%  360  157 SER    Serbia
%  506  219 SEV    Sevastopol
%  714  436 SIB    Siberia
%  321  273 SIL    Silesia
%  531  -35 SIN    Sinai
%  280  378 SKA    Skagerrak
%  356  222 SLO    Slovakia
%   83   98 SOG    Straits of Gibraltar
%  445  385 STP    St-Petersburg
%   68  142 SVE    Seville
%  326  392 SWE    Sweden
%  251  220 SWI    Switzerland
%  580   39 SYR    Syria
%  235   41 TUN    Tunisia
%  271  157 TUS    Tuscany
%  269  100 TYR    Tyrrhenian Sea
%  153  369 ULS    Ulster
%  571  484 URA    Urals
%  288  168 VEN    Venice
%  615  240 VOL    Volga
%  162  313 WAL    Wales
%  353  291 WAR    Warsaw
%  482  162 WBS    Western Black Sea
%  506  572 WHI    White Sea
%  179  101 WME    Western Mediterranean
%   81  -21 WSA    Western Sahara
%  196  343 YOR    Yorkshire
% MAP

%%BeginSetup
/bd { bind def } bind def
/xd { exch def } bd
/ld { load def } bd
/ifloor { .001 add floor cvi } bd
/iceiling { .001 sub ceiling cvi } bd
/min { 2 copy gt { exch } if pop } bd
/max { 2 copy lt { exch } if pop } bd
/secure_atan { 2 copy 0 eq exch 0 eq and { pop pop 0 } { atan } ifelse } bd
/center { 3 2 roll add 2 div 3 1 roll add 2 div exch } bd
/a /arc ld
/c /curveto ld
/d /setdash ld
/f /fill ld
/h /show ld
/k /stroke ld
/l /lineto ld
/m /moveto ld
/n /newpath ld
/o /rotate ld
/p /closepath ld
/r /grestore ld
/s /gsave ld
/t /translate ld
/w /setlinewidth ld
/x /scale ld
/y /scalefont ld
/z /setfont ld
/Powers 20 dict def
%%IncludeResource: font Helvetica-Bold
/MapUnitLetterFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Helvetica-Bold
/MapNameFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Courier
/TextFixedFont /Courier findfont def
%%IncludeResource: font Courier-Bold
/TextHeadingFont /Courier-Bold findfont def
%%IncludeResource: font Times-Roman
/TextTitleFont /Times-Roman findfont def
/PageSetup {
	612 0 t
	90 o
	/FinishReport { } def /InTextMode true def
	Black
	MovePhase
} bd
/ShowPage {
	DrawAliases
	DrawRemainingCenters
	InTextMode { FinishReport } { r } ifelse
	FrameMap
	showpage
} bd
/VisitColors {
	3 dict begin
	/c xd /r xd /g xd
	/BorderBlack .1 g
	/MountainGrey .5 g
	/IceGrey .9 g
	/ArrowBlack 0 g
	/ArrowWhite .9 g
	/Black 0 g
	/White .9 g
	/LandBrown .8 .7 .4 r
	/SeaBlue .1 .4 .6 r
	/ArrowRed 1 0 0 r
	/ArrowBlue .529 .808 .922 r
	/Brown .6 .45 .2 r
	/Purple .5 0 .5 r
	/Pink .3 0 0 r
	/Turquoise .2 .7 .7 r
	/Green 0 .7 0 r
	/Red 1 0 0 r
	/Orange 1 .6 0 r
	/Yellow 1 1 0 r
	/Cyan 0 1 1 r
	/DarkGreen 0 .4 0 r
	end
} def
/VisitPowers {
	1 dict begin
	/p xd
	/UNOWNED (?) /Brown /White p
	/BRITAIN (B) /Purple /White p
	/EGYPT (E) /Pink /White p
	/FRANCE (F) /Turquoise /White p
	/GERMANY (G) /Black /White p
	/ITALY (I) /Green /Black p
	/POLAND (P) /White /Black p
	/RUSSIA (R) /Red /Black p
	/SPAIN (S) /Orange /Black p
	/TURKEY (T) /Yellow /Black p
	/UKRAINE (U) /Cyan /Black p
	end
} def
/PaintFleet {
	begin
	.6 .6 x
	0 8 t
	-26 -7 m -26 -2 l -19 -2 l -19 -1 l % to bow
	-22 -1 l -22 0 l -15 0 l -15 1 l % A turret
	-18 1 l -18 2 l -10 2 l -10 0 l % B turret
	-9 0 l -9 4 l -8 4 l -8 6 l % conn tower
	-6 6 l -6 5 l -5 5 l -5 9 l % Infra struct
	-3 9 l -3 14 l -2 14 l -2 9 l % funnel 1
	0 9 l 0 5 l 1 5 l 1 8 l % funnel 2
	3 8 l 3 13 l 4 13 l 4 8 l % mast 2
	6 8 l 6 0 l 8 0 l 8 2 l % funnel 2
	16 2 l 16 1 l 13 1 l 13 0 l % C turret
	20 0 l 20 -1 l 17 -1 l 17 -2 l % D turret
	23 -2 l 23 -3 l 25 -3 l 25 -5 l % stern
	24 -5 l 24 -7 l p
	s 2 w Contrast k r Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/FleetTroopBBox [
	-16.2 0 15.6 13.8
] def
/PaintControlledFleet {
	begin
	.6 .6 x
	0 8 t
	-26 -7 m -26 -2 l -19 -2 l -19 -1 l % to bow
	-22 -1 l -22 0 l -15 0 l -15 1 l % A turret
	-18 1 l -18 2 l -10 2 l -10 0 l % B turret
	-9 0 l -9 4 l -8 4 l -8 6 l % conn tower
	-6 6 l -6 5 l -5 5 l -5 9 l % Infra struct
	-3 9 l -3 14 l -2 14 l -2 9 l % funnel 1
	0 9 l 0 5 l 1 5 l 1 8 l % funnel 2
	3 8 l 3 13 l 4 13 l 4 8 l % mast 2
	6 8 l 6 0 l 8 0 l 8 2 l % funnel 2
	16 2 l 16 1 l 13 1 l 13 0 l % C turret
	20 0 l 20 -1 l 17 -1 l 17 -2 l % D turret
	23 -2 l 23 -3 l 25 -3 l 25 -5 l % stern
	24 -5 l 24 -7 l p
	s s 6 w Outer k r 2 w Contrast k r Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledFleetTroopBBox [
	-17.4 -1.2 16.8 15
] def
/DrawFleet {
	SwitchToMapMode
	s t
	FleetTroops Power get execform
	r
} bd
/PaintWing {
	begin
	.6 .6 x
	0 8 t
	s
	0 -6 t
	% Start from the front
	1 24 m
	% Left part of cockpit
	0 24 l -1 19 l -1 15 l
	% Left wing
	-2 13 l -14 4 l -14.5 5.5 l -15 4 l
	-15 -1 l -14 -1 l -14 0 l -4 1 l
	-3 1 l
	% Tail
	-2 -5 l -5 -6 l -5 -7 l 5 -7 l
	5 -6 l 2 -5 l 3 1 l
	% Right wing
	4 1 l 14 0 l 14 -1 l 15 -1 l
	15 4 l 14.5 5.5 l 14 4 l 2 13 l
	1 15 l
	% Right part of cockpit
	1 19 l 0 24 l -1 24 l
	p
	s 2 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/WingTroopBBox [
	-9.6 -7.2 9.6 12.6
] def
/PaintControlledWing {
	begin
	.6 .6 x
	0 8 t
	s
	0 -6 t
	% Start from the front
	1 24 m
	% Left part of cockpit
	0 24 l -1 19 l -1 15 l
	% Left wing
	-2 13 l -14 4 l -14.5 5.5 l -15 4 l
	-15 -1 l -14 -1 l -14 0 l -4 1 l
	-3 1 l
	% Tail
	-2 -5 l -5 -6 l -5 -7 l 5 -7 l
	5 -6 l 2 -5 l 3 1 l
	% Right wing
	4 1 l 14 0 l 14 -1 l 15 -1 l
	15 4 l 14.5 5.5 l 14 4 l 2 13 l
	1 15 l
	% Right part of cockpit
	1 19 l 0 24 l -1 24 l
	p
	s s 6 w Outer k r 2 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledWingTroopBBox [
	-10.8 -8.4 10.8 13.8
] def
/DrawWing {
	SwitchToMapMode
	s t
	WingTroops Power get execform
	r
} bd
/PaintArmy {
	begin
	.6 .6 x
	0 8 t
	n 0 0 9 0 360 a p % wheel
	2 w Contrast k
	-20 7 m 10 7 l 10 3 l 14 3 l
	14 1 l -16 1 l -16 3 l -20 3 l p % barrel
	4 2 m 24 -8 l 26 -8 l 18 -8 l -2 2 l % carriage
	s 2 w Contrast k r Paint f
	n 0 0 9 0 360 a p % wheel
	Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ArmyTroopBBox [
	-12.6 -1.2 16.2 10.8
] def
/PaintControlledArmy {
	begin
	.6 .6 x
	0 8 t
	n 0 0 9 0 360 a p % wheel
	s 6 w Outer k r 2 w Contrast k
	-20 7 m 10 7 l 10 3 l 14 3 l
	14 1 l -16 1 l -16 3 l -20 3 l p % barrel
	4 2 m 24 -8 l 26 -8 l 18 -8 l -2 2 l % carriage
	s s 6 w Outer k r 2 w Contrast k r Paint f
	n 0 0 9 0 360 a p % wheel
	Paint f
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledArmyTroopBBox [
	-13.8 -2.4 17.4 12
] def
/DrawArmy {
	SwitchToMapMode
	s t
	ArmyTroops Power get execform
	r
} bd
/DrawAlias {
	SwitchToMapMode
	s
	3 1 roll t
	.5 .5 x
	0 -14 t
	MapNameFont z
	dup stringwidth pop -2 div 0 neg m h
	r
} bd
/DrawName {
	pop pop pop
} bd
/VisitTerritories {
	5 dict begin
	/b xd
	/g xd
	/w xd
	/l xd
	/c xd
	(ADA) 573 83 c
	(ALB) 360 122 c
	(ALE) 478 -39 c
	(ALG) 159 67 c
	(ANA) 519 80 c
	(AND) 103 120 c
	(ANK) 552 125 c
	(APU) 332 117 c
	(ASW) 527 -89 c
	(AUV) 179 197 c
	(AZE) 671 129 c
	(BAR) 134 154 c
	(BEL) 232 284 c
	(BER) 303 295 c
	(BOR) 151 199 c
	(BRI) 161 256 c
	(BUL) 421 148 c
	(CAI) 509 -48 c
	(CAU) 645 184 c
	(CLY) 165 387 c
	(CRO) 315 175 c
	(DEN) 280 352 c
	(DON) 529 236 c
	(ESA) 441 -39 c
	(EDI) 184 400 c
	(EST) 406 386 c
	(FIN) 397 437 c
	(GDA) 368 318 c
	(GEO) 604 177 c
	(GIB) 68 118 c
	(GRE) 384 91 c
	(HAM) 272 301 c
	(HOL) 245 307 c
	(ICE) 118 580 c
	(IRK) 666 1 c
	(IRE) 128 353 c
	(ISR) 542 -9 c
	(IST) 470 106 c
	(IZM) 476 75 c
	(JOR) 565 -23 c
	(KAZ) 756 243 c
	(LAP) 391 549 c
	(LAT) 406 359 c
	(LIB) 291 -17 c
	(LIT) 391 334 c
	(LIV) 175 346 c
	(LON) 195 315 c
	(MAR) 206 197 c
	(MON) 225 182 c
	(MOR) 51 86 c
	(MUR) 463 523 c
	(NAP) 321 96 c
	(NAV) 110 194 c
	(NWY) 282 424 c
	(ODE) 475 230 c
	(PIC) 201 270 c
	(PIE) 243 194 c
	(POR) 56 179 c
	(PRU) 330 309 c
	(ROM) 296 132 c
	(ROS) 570 204 c
	(RUM) 441 182 c
	(SAU) 669 -70 c
	(SER) 360 157 c
	(SEV) 506 219 c
	(SVE) 68 142 c
	(SIN) 531 -35 c
	(STP) 445 385 c
	(SWE) 326 392 c
	(SYR) 580 39 c
	(TUN) 235 41 c
	(TUS) 271 157 c
	(ULS) 153 369 c
	(URA) 571 484 c
	(VEN) 288 168 c
	(VOL) 615 240 c
	(WAL) 162 313 c
	(YOR) 196 343 c
	(ALS) 232 242 l
	(ARM) 639 135 l
	(AUS) 314 214 l
	(BIE) 420 287 l
	(BOS) 337 176 l
	(CEN) 524 285 l
	(CZE) 324 244 l
	(FRA) 277 275 l
	(GOR) 536 391 l
	(HUN) 345 201 l
	(KHA) 537 260 l
	(KIE) 494 248 l
	(KRA) 370 251 l
	(LYO) 212 227 l
	(MAC) 380 135 l
	(MAD) 83 170 l
	(MIL) 266 198 l
	(MOL) 452 220 l
	(MOS) 500 337 l
	(MUN) 268 236 l
	(PAR) 188 238 l
	(POD) 417 235 l
	(RUH) 251 264 l
	(SAX) 288 253 l
	(SIB) 714 436 l
	(SIL) 321 273 l
	(SLO) 356 222 l
	(SWI) 251 220 l
	(WAR) 353 291 l
	(WSA) 81 -21 l
	(ADR) 315 149 w
	(AEG) 425 62 w
	(ARA) 770 -52 w
	(ARC) 214 653 w
	(BAL) 355 341 w
	(BIS) 125 232 w
	(BRN) 488 640 w
	(BHM) 322 330 w
	(CAS) 699 180 w
	(EBS) 547 166 w
	(EME) 489 19 w
	(ENG) 142 289 w
	(GOB) 373 392 w
	(GOL) 195 143 w
	(HEL) 256 337 w
	(ION) 356 64 w
	(IRI) 115 315 w
	(LBN) 351 1 w
	(LIG) 238 161 w
	(MAL) 293 34 w
	(MID) 53 257 w
	(NAO) 72 448 w
	(NTH) 227 382 w
	(NWG) 261 536 w
	(PER) 731 -27 w
	(RED) 553 -79 w
	(SKA) 280 378 w
	(SAO) 0 117 w
	(SOG) 83 98 w
	(TYR) 269 100 w
	(WBS) 482 162 w
	(WME) 179 101 w
	(WHI) 506 572 w
	(IRN) 713 46 g
	(IRN/NC) 712 96 b
	(IRN/SC) 755 -36 b
	end
} def
/VisitSupplies {
	1 dict begin
	/s xd
	/NAP 311 117 s
	/ROM 280 141 s
	/GRE 402 85 s
	/BUL 400 149 s
	/IZM 452 77 s
	/MOR 36 75 s
	/ANK 530 124 s
	/LIB 269 -1 s
	/RUM 425 176 s
	/MON 221 171 s
	/HUN 359 206 s
	/SVE 57 136 s
	/MAR 204 180 s
	/BAR 158 157 s
	/VEN 281 192 s
	/KRA 355 249 s
	/BEL 223 281 s
	/GDA 354 314 s
	/HOL 235 302 s
	/SWI 235 219 s
	/GOR 556 379 s
	/GEO 583 182 s
	/MUN 283 224 s
	/POR 43 164 s
	/ADA 542 79 s
	/BER 307 310 s
	/MIL 263 188 s
	/LIT 404 327 s
	/BIE 416 308 s
	/ALE 492 -23 s
	/IRN 711 89 s
	/CZE 307 249 s
	/SAU 703 -76 s
	/SER 357 178 s
	/ISR 552 5 s
	/LON 185 304 s
	/CAI 503 -30 s
	/ODE 466 212 s
	/EDI 185 388 s
	/ASW 508 -93 s
	/SEV 495 212 s
	/IRE 138 348 s
	/LIV 168 337 s
	/NWY 300 415 s
	/BOR 153 214 s
	/LYO 204 214 s
	/DEN 301 342 s
	/FRA 269 264 s
	/GIB 58 114 s
	/MUR 449 540 s
	/KHA 518 257 s
	/ROS 551 223 s
	/SWE 346 405 s
	/STP 446 403 s
	/MOS 526 345 s
	/IST 446 131 s
	/WAR 368 286 s
	/KIE 479 263 s
	/PAR 204 249 s
	/CRO 314 191 s
	/AUS 329 220 s
	/MAD 101 161 s
	/TUN 238 62 s
	/HAM 279 316 s
	end
} def
/DrawRemainingCenters {
	SwitchToMapMode
	UNOWNED
	Centers {
		{ load exec supply } { pop } ifelse
	} forall
} bd
/PaintSupply {
	begin
	.6 .6 x
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/SupplyCenterBBox [
	-3.6 -3.6 3.6 3.6
] def
/PaintControlledSupply {
	begin
	.6 .6 x
	Outer
	n 0 0 10 0 360 a f
	Contrast
	n 0 0 8 0 360 a f
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/ControlledSupplyCenterBBox [
	-6 -6 6 6
] def
/supply {
	SwitchToMapMode
	Centers exch false put
	s t
	Power get execform
	r
} bd
/SetArrowStateOk {
	[] 0 d
} bd
/OkOrder {
	/SetArrowState /SetArrowStateOk ld
} bd
/SetArrowStateFailed {
	[4 6] 2 d
} bd
/FailedOrder {
	/SetArrowState /SetArrowStateFailed ld
} bd
/MovePhase {
	/ArrowColor /ArrowBlack ld
	/ArrowBase 20 def
	/TraceArrowHead /TraceSingleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/RetreatPhase {
	/ArrowColor /ArrowRed ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/ProposePhase {
	/ArrowColor /ArrowWhite ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/TraceSingleArrowHead {
	% draw the arrow head ...
	n
	dup -5 m
	dup 20 add 0 l
	dup 5 l
	p
} bd
/TraceDoubleArrowHead {
	% draw the double arrow head ...
	n
	dup -5 m
	dup 19.8 add
	dup -1 l
	dup -5 l
	dup 20 add 0 l
	dup 5 l
	1 l
	dup 5 l
	p
} bd
/PaintArrowMove {
	s
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.6 .6 x
	0 8 t
	o
	.6 div ArrowBase sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% if base is still too long, shorten it some more
	% to make arrow head touch support circle
	dup 14 gt {
		14 sub
	} {
		pop 0
	} ifelse
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowCircle {
	s
	5 1 roll
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.6 .6 x
	0 8 t
	o
	.6 div
	1 index sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% draw the circle ...
	1 w
	n
	2 copy add 0 4 3 roll 0 360 a
	p k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowArrive {
	s
	t
	.6 .6 x
	0 8 t
	180 rotate 54 ArrowBase add neg 0 t
	40
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	-10 0 m -20 0 l
	-30 0 m -40 0 l
	k
	r
} bd
/PaintArrowArriveFleet {
	2 copy
	PaintArrowArrive
	SetArrowStateOk
	exch 14 ArrowBase add 30 add .6 mul add exch 8.64 add t
	.8 .8 x
	FleetTroops Power get execform
} bd
/PaintArrowArriveWing {
	2 copy
	PaintArrowArrive
	SetArrowStateOk
	exch 14 ArrowBase add 30 add .6 mul add exch 8.64 add t
	.8 .8 x
	WingTroops Power get execform
} bd
/PaintArrowArriveArmy {
	2 copy
	PaintArrowArrive
	SetArrowStateOk
	exch 14 ArrowBase add 30 add .6 mul add exch 8.64 add t
	.8 .8 x
	ArmyTroops Power get execform
} bd
/PaintArrowDepart {
	s
	t
	.6 .6 x
	0 8 t
	-54 0 t
	40
	2 w
	0 0 m
	0 l
	-10 0 m -20 0 l
	-30 0 m -40 0 l
	k
	r
} bd
/ArrowMove {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowMove
	r
} bd
/ArrowHold {
	SwitchToMapMode
	s
	SetArrowState
	24 PaintArrowCircle
	r
} bd
/ArrowSupport {
	SwitchToMapMode
	s
	SetArrowState
	center
	8 PaintArrowCircle
	r
} bd
/ArrowConvoy {
	SwitchToMapMode
	s
	SetArrowState
	center
	12 PaintArrowCircle
	r
} bd
/ArrowDepart {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowDepart
	r
} bd
/ArrowArriveFleet {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArriveFleet
	r
} bd
/ArrowArriveWing {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArriveWing
	r
} bd
/ArrowArriveArmy {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArriveArmy
	r
} bd
/ArrowRetreat {
	RetreatPhase
	ArrowMove
	MovePhase
} bd
/ArrowPropose {
	ProposePhase
	ArrowMove
	MovePhase
} bd
/ArrowRetreatArriveFleet {
	RetreatPhase
	ArrowArriveFleet
	MovePhase
} bd
/ArrowRetreatArriveWing {
	RetreatPhase
	ArrowArriveWing
	MovePhase
} bd
/ArrowRetreatArriveArmy {
	RetreatPhase
	ArrowArriveArmy
	MovePhase
} bd
/ArrowRetreatDepart {
	RetreatPhase
	ArrowDepart
	MovePhase
} bd
/BuildUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.6 .6 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/SlashUnit {
	s
	3 1 roll t
	.6 .6 x
	0 8 t
	n
	-21 -16 m
	11 16 l
	21 16 l
	-11 -16 l
	p
	exec
	r
} bd
/DestroyUnit {
	SwitchToMapMode
	{ ArrowRed f } SlashUnit
} bd
/DisbandUnit {
	SwitchToMapMode
	{ s ArrowWhite f r 1 w ArrowRed k } SlashUnit
} bd
/RemoveUnit {
	SwitchToMapMode
	{ ArrowWhite f } SlashUnit
} bd
/FindUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.6 .6 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/LoseUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.6 .6 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/QueryUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.6 .6 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/MapForm <<
	/FormType 1
	/Matrix [ 3.9216 0 0 3.9216 -30 -100 ]
	/BBox [ 0 0 211.65 204 ]
	/FormDict 1 dict
	/PaintProc {
		dup /Matrix get exch /FormDict get begin
		s
		matrix invertmatrix concat
		LandBrown -30 -100 830 800 rectfill
		IncludeSeas
		IncludeIslands
		IncludeInternalBorders
		IncludeBorders
		IncludeCanals
		r
		end
	} bind
>> def
/DrawMap {
	PageSetup
	SwitchToMapMode
	MapForm execform
	/Centers << Centers { pop true } forall >> def
	UNOWNED
} bd
/DrawSupplies {
	SwitchToMapMode
	UNOWNEDCENTER
	{ SupplyCenters 3 1 roll 4 3 roll supply } bind
	VisitSupplies
} bd
/DrawAliases {
	NameTerritories
} bd
/NameTerritories {
	SwitchToMapMode
	s
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ White 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ pop pop pop } bind
	VisitTerritories
	r
} bd
/GetControlledPower {
	1 index dup length string cvs 1 index dup length string cvs
	1 index length dup 2 index length add 1 add string
	dup 0 6 5 roll putinterval dup 2 index 124 put dup 3 2 roll 1 add 4 3 roll putinterval cvn
	3 1 roll Powers 3 index known {
		pop pop
	} {
		8 dict dup begin
		exch Powers exch get /Paint get /Outer xd
		Powers 2 index get { def } forall
		end
		dup ControlledFleetTroopBBox /PaintControlledFleet load CreateTroop FleetTroops 4 index 3 2 roll put
		dup ControlledWingTroopBBox /PaintControlledWing load CreateTroop WingTroops 4 index 3 2 roll put
		dup ControlledArmyTroopBBox /PaintControlledArmy load CreateTroop ArmyTroops 4 index 3 2 roll put
		dup ControlledSupplyCenterBBox /PaintControlledSupply load CreateTroop SupplyCenters 4 index 3 2 roll put
		Powers 2 index 3 2 roll put
		[ /Power 3 index 4 3 roll {
			ChangeController {
				Power GetControlledPower exch
				/ChangeController false def
			} if pop
		} bind /exec load /def load ] cvx 2 index xd
	} ifelse
} bd
/Controls {
	/ChangeController true def
} bd
/CreateTroop {
	<<
		/BBox 4 3 roll
		/PaintProc 5 4 roll
		6 5 roll {} forall
		/FormType 1
		/Matrix matrix
	>>
} bd
/CreateTroops {
	<< 3 1 roll Powers {
		3 index 3 index CreateTroop 4 2 roll
	} forall pop pop >>
} bd
/SplitString {
	7 dict begin
	/nrChars xd
	/indentString xd
	/objectString xd
	/objectLast objectString length 1 sub def
	% Short string?
	objectLast nrChars lt {
		false objectString
	} {
		% Look for a suitable place to split.
		% First tracking backwards, if that doesn't work, look forward.
		/splitIndex -1 def
		nrChars -1 0 {
			objectString 1 index get 32 eq {
				/splitIndex xd exit
			} if pop
		} for splitIndex -1 eq {
			nrChars 1 add 1 objectLast {
				objectString 1 index get 32 eq {
					/splitIndex xd exit
				} if pop
			} for
		} if
		splitIndex -1 eq splitIndex objectLast eq or {
			false objectString
		} {
			% The first part.
			objectString 0 splitIndex getinterval
			% The second part.
			objectString splitIndex 1 add objectLast splitIndex sub getinterval
			% Add indentation if needed.
			indentString length 0 gt {
				dup length indentString length add string
				dup 0 indentString putinterval
				dup indentString length 4 3 roll putinterval
			} if
			% Add white space of the first part.
			/nonSpaceIndex objectLast 1 add def
			0 1 objectLast {
				objectString 1 index get 32 ne {
					/nonSpaceIndex xd exit
				} if pop
			} for
			nonSpaceIndex 0 gt nonSpaceIndex splitIndex lt and {
				dup length nonSpaceIndex add string
				dup 0 objectString 0 nonSpaceIndex getinterval putinterval
				dup nonSpaceIndex 4 3 roll putinterval
			} if
			exch true exch
		} ifelse
	} ifelse
	end
} bd
/DrawLayoutBorders {
	s
	TextFixedFont 7 y z
	r
} bd
/Adjustment <<
	/Steps [
		{ /Count 0 def /Y 192.46 def false true } bind
		{
			Count 9 ge { false true } {
				66 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				494.7 Y m h
				true false
			} ifelse
		} bind
		{
			66 SplitString [ exch {
				494.7 122.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				494.7 122.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 66 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 7 y z
		494.7 192.46 moveto
		(Adjustments) h
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/AdjustReport {
	SwitchToTextMode
	Adjustment begin Start end
	/FinishReport /FinishAdjustReport load def
} bd
/WriteAdjust {
	Adjustment begin Write end
} bd
/FinishAdjustReport {
	Adjustment begin Finish end
} bd
/Retreat <<
	/Steps [
		{ /Count 0 def /Y 276.46 def false true } bind
		{
			Count 9 ge { false true } {
				66 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				494.7 Y m h
				true false
			} ifelse
		} bind
		{
			66 SplitString [ exch {
				494.7 206.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				494.7 206.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 66 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 7 y z
		494.7 276.46 moveto
		(Retreats) h
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/RetreatReport {
	SwitchToTextMode
	Retreat begin Start end
	/FinishReport /FinishRetreatReport load def
} bd
/WriteRetreat {
	Retreat begin Write end
} bd
/FinishRetreatReport {
	Retreat begin Finish end
} bd
/Order <<
	/Steps [
		{ /Count 0 def /Y 549.46 def false true } bind
		{
			Count 37 ge { false true } {
				32 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				494.7 Y m h
				true false
			} ifelse
		} bind
		{ /Count 0 def /Y 549.46 def false true } bind
		{
			Count 36 ge { false true } {
				32 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				637.5 Y m h
				true false
			} ifelse
		} bind
		{
			32 SplitString [ exch {
				637.5 290.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				637.5 290.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 32 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OrderReport {
	SwitchToTextMode
	Order begin Start end
	/FinishReport /FinishOrderReport load def
} bd
/WriteOrder {
	Order begin Write end
} bd
/FinishOrderReport {
	Order begin Finish end
} bd
/DrawTitle {
	SwitchToTextMode
	TextTitleFont 21 y z
	(Diplomacy)
	494.7 574.38 m h
	TextTitleFont 14 y z
	dup stringwidth pop dup 277.2 gt {
		494.7 554.5 m
		277.2 exch div dup 1 x exch
		0 3.92 rmoveto h
		1 exch div 1 x
	} {
		pop 494.7 558.42 m h
	} ifelse
} bd
/Owner <<
	/Steps [
		{ /Count 0 def /Y 115.46 def false true } bind
		{
			Count 12 ge { false true } {
				179 SplitString
				/Count Count 1 add def /Y Y 7 sub def
				20.1 Y m h
				true false
			} ifelse
		} bind
		{
			179 SplitString [ exch {
				20.1 24.46 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				20.1 24.46 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 179 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 7 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OwnerReport {
	SwitchToTextMode
	Owner begin Start end
	/FinishReport /FinishOwnerReport load def
} bd
/WriteOwner {
	Owner begin Write end
} bd
/FinishOwnerReport {
	Owner begin Finish end
} bd
/SwitchToTextMode {
	InTextMode {
		FinishReport /FinishReport { } def
	} {
		r /InTextMode true def
	} ifelse
} bd
/SwitchToMapMode {
	InTextMode {
		FinishReport /FinishReport { } def
		/InTextMode false def
		s
		26.1 134.18 454.2 441.64 rectclip .552 .552 x 73.66 343.06 t
		ArrowColor
		OkOrder
	} if
} bd
/FrameMap {
	s
	2 w LandBrown
	23.1 131.18 m 483.3 131.18 l 483.3 578.82 l 23.1 578.82 l
	p
	s 8 w Black k r
	clipsave clip k cliprestore
	r
} bd
/IncludeSeas {
	s
	/fk {
		p
		s SeaBlue f r
		k
	} bd
	1 w BorderBlack
	OutlineChartSeawater
	r
} bd
/IncludeIslands {
	s
	/fk {
		p
		s LandBrown f r
		k
	} bd
	1 w BorderBlack
	OutlineChartLandcolor
	r
} bd
/IncludeInternalBorders {
	s
	/fk { k } bd
	.5 w [ 3 1 ] 1.5 d BorderBlack
	OutlineChartInternalborder
	r
} bd
/IncludeBorders {
	s
	/fk { k } bd
	2 w BorderBlack
	OutlineChartNationalborder
	r
} bd
/IncludeCanals {
	s
	/fk { k } bd
	2.5 w [ 2 3 ] 1.5 d SeaBlue
	OutlineChartCanalLine
	r
} bd
/OutlineChartSeawater {
	448 412 m
	451 418 l
	457 420 l
	452 427 l
	443 430 l
	439 434 l
	434 428 l
	438 423 l
	444 423 l
	446 417 l
	448 412 l
	fk
	477 431 m
	481 432 l
	480 438 l
	472 442 l
	472 448 l
	466 445 l
	468 439 l
	475 436 l
	477 431 l
	fk
	722 192 m
	720 196 l
	707 200 l
	703 209 l
	691 210 l
	689 213 l
	690 215 l
	700 214 l
	698 218 l
	706 227 l
	723 226 l
	717 230 l
	723 245 l
	720 257 l
	705 260 l
	697 256 l
	687 258 l
	676 254 l
	669 254 l
	664 242 l
	660 240 l
	657 238 l
	648 239 l
	656 230 l
	648 221 l
	644 210 l
	647 198 l
	659 193 l
	660 185 l
	662 183 l
	670 170 l
	676 171 l
	682 161 l
	694 161 l
	698 157 l
	688 151 l
	690 144 l
	692 136 l
	688 117 l
	694 109 l
	702 104 l
	708 100 l
	716 102 l
	726 98 l
	740 97 l
	741 135 l
	736 136 l
	737 145 l
	730 146 l
	729 160 l
	733 156 l
	756 154 l
	755 164 l
	750 167 l
	748 184 l
	733 180 l
	730 164 l
	728 168 l
	727 186 l
	722 192 l
	fk
	547 -100 m
	545 -94 l
	542 -90 l
	534 -70 l
	527 -54 l
	522 -44 l
	518 -36 l
	517 -32 l
	517 -31 l
	519 -32 l
	526 -42 l
	530 -52 l
	531 -53 l
	533 -50 l
	538 -39 l
	541 -36 l
	540 -40 l
	538 -46 l
	534 -52 l
	535 -54 l
	540 -55 l
	550 -58 l
	562 -70 l
	570 -90 l
	574 -100 l
	547 -100 l
	fk
	800 -70 m
	797 -65 l
	796 -60 l
	797 -46 l
	793 -44 l
	790 -50 l
	784 -60 l
	780 -64 l
	765 -73 l
	760 -75 l
	755 -76 l
	752 -74 l
	750 -66 l
	748 -60 l
	747 -67 l
	745 -70 l
	740 -67 l
	730 -55 l
	720 -40 l
	713 -26 l
	708 -18 l
	707 -12 l
	709 -10 l
	712 -8 l
	720 -10 l
	730 -14 l
	740 -30 l
	752 -36 l
	760 -38 l
	770 -35 l
	780 -24 l
	784 -22 l
	786 -20 l
	790 -20 l
	793 -21 l
	800 -24 l
	800 -70 l
	fk
	549 31 m
	555 43 l
	555 52 l
	550 60 l
	551 68 l
	555 75 l
	550 75 l
	545 71 l
	536 71 l
	523 60 l
	516 58 l
	508 60 l
	501 64 l
	490 65 l
	486 57 l
	475 55 l
	466 58 l
	459 63 l
	454 60 l
	444 59 l
	448 65 l
	447 73 l
	435 82 l
	435 89 l
	440 94 l
	432 98 l
	431 106 l
	438 113 l
	448 114 l
	452 118 l
	458 113 l
	467 122 l
	458 130 l
	470 131 l
	478 129 l
	486 130 l
	488 135 l
	499 145 l
	512 148 l
	519 152 l
	534 148 l
	541 142 l
	552 142 l
	558 139 l
	576 143 l
	580 146 l
	586 146 l
	591 152 l
	597 156 l
	600 162 l
	590 177 l
	577 177 l
	560 188 l
	551 190 l
	540 197 l
	532 199 l
	538 206 l
	547 217 l
	539 222 l
	551 235 l
	539 228 l
	531 226 l
	521 218 l
	511 211 l
	502 209 l
	495 206 l
	485 205 l
	487 211 l
	475 211 l
	468 201 l
	466 195 l
	462 192 l
	464 182 l
	458 181 l
	455 176 l
	453 171 l
	454 163 l
	449 158 l
	446 149 l
	446 142 l
	454 136 l
	455 126 l
	450 122 l
	445 122 l
	440 117 l
	432 117 l
	427 121 l
	420 120 l
	416 119 l
	407 117 l
	402 107 l
	394 109 l
	390 113 l
	390 108 l
	399 97 l
	406 92 l
	409 88 l
	413 78 l
	411 77 l
	407 81 l
	408 74 l
	406 73 l
	403 76 l
	397 75 l
	401 72 l
	403 65 l
	401 64 l
	396 68 l
	395 66 l
	400 60 l
	404 50 l
	402 49 l
	396 56 l
	396 49 l
	393 50 l
	390 58 l
	389 58 l
	387 53 l
	381 60 l
	383 63 l
	379 70 l
	380 75 l
	385 78 l
	394 77 l
	396 79 l
	385 80 l
	377 76 l
	374 80 l
	370 92 l
	363 97 l
	359 102 l
	354 111 l
	351 136 l
	339 146 l
	330 150 l
	314 167 l
	310 167 l
	306 172 l
	308 179 l
	302 180 l
	298 184 l
	297 195 l
	286 189 l
	285 180 l
	282 176 l
	294 164 l
	298 152 l
	303 148 l
	305 143 l
	313 136 l
	320 134 l
	322 127 l
	331 125 l
	342 114 l
	347 106 l
	342 100 l
	332 108 l
	327 107 l
	325 101 l
	330 96 l
	325 85 l
	321 77 l
	312 73 l
	308 79 l
	315 87 l
	318 96 l
	313 104 l
	303 111 l
	290 125 l
	279 132 l
	272 141 l
	263 151 l
	261 169 l
	252 179 l
	245 181 l
	237 173 l
	223 168 l
	212 168 l
	197 179 l
	183 175 l
	183 160 l
	176 155 l
	159 151 l
	142 142 l
	134 136 l
	134 127 l
	138 124 l
	136 118 l
	126 118 l
	121 109 l
	117 114 l
	109 108 l
	104 103 l
	95 103 l
	86 109 l
	74 110 l
	67 107 l
	57 109 l
	52 119 l
	48 127 l
	44 131 l
	34 131 l
	29 139 l
	32 145 l
	36 152 l
	35 156 l
	29 154 l
	31 165 l
	38 172 l
	47 177 l
	52 187 l
	57 203 l
	55 214 l
	60 221 l
	70 218 l
	72 225 l
	92 215 l
	118 201 l
	138 195 l
	156 230 l
	149 243 l
	149 254 l
	139 262 l
	128 265 l
	132 276 l
	148 279 l
	156 270 l
	164 270 l
	164 286 l
	171 283 l
	171 276 l
	181 273 l
	182 279 l
	192 278 l
	197 284 l
	200 290 l
	210 291 l
	219 298 l
	225 300 l
	227 307 l
	240 319 l
	256 318 l
	258 323 l
	268 320 l
	272 322 l
	273 333 l
	269 336 l
	275 342 l
	271 348 l
	274 356 l
	270 362 l
	278 369 l
	279 361 l
	290 374 l
	294 372 l
	296 366 l
	290 364 l
	290 358 l
	294 354 l
	287 349 l
	290 343 l
	294 341 l
	288 336 l
	283 337 l
	280 331 l
	284 327 l
	291 326 l
	292 321 l
	297 321 l
	307 325 l
	315 327 l
	312 319 l
	320 316 l
	324 323 l
	327 319 l
	338 325 l
	350 329 l
	356 327 l
	358 319 l
	366 322 l
	365 328 l
	376 330 l
	373 337 l
	375 343 l
	371 351 l
	377 362 l
	381 371 l
	389 370 l
	391 363 l
	397 363 l
	400 373 l
	395 381 l
	388 387 l
	393 396 l
	407 400 l
	418 399 l
	423 399 l
	431 407 l
	437 408 l
	431 413 l
	422 413 l
	409 412 l
	401 408 l
	390 407 l
	385 402 l
	376 414 l
	375 425 l
	375 438 l
	371 444 l
	384 460 l
	393 472 l
	401 481 l
	397 489 l
	390 489 l
	379 484 l
	376 472 l
	371 464 l
	363 453 l
	355 444 l
	351 434 l
	349 426 l
	349 418 l
	355 411 l
	361 406 l
	361 400 l
	355 398 l
	358 391 l
	348 388 l
	342 380 l
	343 365 l
	339 353 l
	320 346 l
	321 337 l
	309 336 l
	307 342 l
	311 348 l
	305 350 l
	309 357 l
	303 370 l
	300 381 l
	301 394 l
	293 396 l
	283 390 l
	272 385 l
	266 387 l
	264 395 l
	257 395 l
	257 401 l
	263 401 l
	266 408 l
	258 407 l
	259 424 l
	263 439 l
	271 449 l
	283 457 l
	295 461 l
	307 470 l
	319 482 l
	325 494 l
	330 505 l
	337 512 l
	341 519 l
	342 525 l
	331 523 l
	340 532 l
	341 538 l
	350 543 l
	349 530 l
	354 542 l
	362 550 l
	372 558 l
	386 564 l
	400 565 l
	413 561 l
	418 566 l
	427 560 l
	421 556 l
	428 549 l
	432 557 l
	443 549 l
	453 549 l
	467 542 l
	477 540 l
	486 533 l
	492 523 l
	489 516 l
	481 510 l
	472 506 l
	460 506 l
	453 508 l
	439 516 l
	450 505 l
	460 495 l
	461 484 l
	473 472 l
	483 473 l
	483 479 l
	474 483 l
	471 492 l
	488 491 l
	495 487 l
	496 495 l
	488 498 l
	490 504 l
	500 517 l
	505 521 l
	511 520 l
	511 527 l
	505 533 l
	504 544 l
	497 550 l
	506 553 l
	515 552 l
	519 544 l
	513 539 l
	514 534 l
	519 538 l
	524 533 l
	530 541 l
	531 553 l
	538 562 l
	543 565 l
	547 572 l
	547 576 l
	548 579 l
	549 577 l
	548 558 l
	553 554 l
	552 560 l
	553 568 l
	554 574 l
	556 575 l
	559 579 l
	563 584 l
	568 592 l
	575 596 l
	583 609 l
	590 612 l
	594 615 l
	600 614 l
	604 611 l
	614 607 l
	615 615 l
	620 617 l
	640 600 l
	660 590 l
	665 594 l
	657 608 l
	654 609 l
	653 612 l
	657 615 l
	645 625 l
	646 630 l
	665 650 l
	670 640 l
	675 635 l
	680 617 l
	690 610 l
	697 585 l
	693 570 l
	673 567 l
	690 563 l
	695 566 l
	698 573 l
	700 587 l
	702 590 l
	710 588 l
	720 584 l
	724 576 l
	740 570 l
	742 572 l
	740 574 l
	730 580 l
	714 590 l
	708 592 l
	701 595 l
	694 612 l
	690 614 l
	688 624 l
	682 640 l
	675 642 l
	674 645 l
	677 647 l
	687 652 l
	688 660 l
	692 662 l
	694 660 l
	695 652 l
	705 646 l
	711 644 l
	714 640 l
	716 642 l
	713 645 l
	705 652 l
	700 660 l
	704 663 l
	710 664 l
	720 670 l
	730 673 l
	740 671 l
	750 667 l
	752 669 l
	742 673 l
	734 675 l
	736 678 l
	750 676 l
	760 674 l
	765 670 l
	767 672 l
	766 674 l
	767 677 l
	775 676 l
	800 680 l
	800 700 l
	-30 700 l
	-30 0 l
	-15 10 l
	-5 20 l
	0 55 l
	10 68 l
	20 72 l
	25 76 l
	28 78 l
	32 82 l
	40 93 l
	45 101 l
	55 107 l
	63 101 l
	63 94 l
	78 88 l
	84 87 l
	92 81 l
	108 81 l
	124 85 l
	136 88 l
	146 84 l
	164 86 l
	193 80 l
	212 80 l
	223 74 l
	229 73 l
	235 76 l
	245 76 l
	246 68 l
	256 71 l
	257 66 l
	249 59 l
	254 49 l
	253 42 l
	256 34 l
	255 27 l
	252 24 l
	249 23 l
	246 19 l
	244 15 l
	245 10 l
	246 8 l
	250 5 l
	260 6 l
	270 8 l
	285 5 l
	295 7 l
	305 4 l
	315 2 l
	325 -14 l
	335 -20 l
	345 -30 l
	350 -34 l
	360 -36 l
	370 -35 l
	374 -30 l
	376 -24 l
	374 -20 l
	372 -14 l
	371 -6 l
	373 0 l
	375 2 l
	380 4 l
	390 2 l
	394 -2 l
	396 -4 l
	408 -6 l
	418 -9 l
	424 -14 l
	440 -16 l
	460 -20 l
	470 -24 l
	480 -22 l
	484 -20 l
	488 -16 l
	494 -12 l
	497 -10 l
	502 -9 l
	505 -10 l
	510 -13 l
	520 -16 l
	530 -13 l
	540 -10 l
	545 -2 l
	548 10 l
	fk
} bd
/OutlineChartLandcolor {
	130 300 m
	134 297 l
	140 300 l
	146 301 l
	149 298 l
	154 298 l
	155 304 l
	161 304 l
	165 298 l
	174 298 l
	182 295 l
	186 292 l
	191 293 l
	201 300 l
	193 301 l
	198 305 l
	205 308 l
	207 314 l
	208 322 l
	201 325 l
	194 322 l
	191 326 l
	199 330 l
	200 342 l
	198 350 l
	195 353 l
	195 364 l
	192 371 l
	188 375 l
	181 372 l
	188 379 l
	183 379 l
	190 382 l
	199 389 l
	205 397 l
	193 402 l
	183 402 l
	191 407 l
	197 413 l
	201 419 l
	203 425 l
	193 422 l
	189 417 l
	180 421 l
	173 410 l
	164 411 l
	160 407 l
	164 402 l
	156 385 l
	157 377 l
	166 374 l
	161 371 l
	161 365 l
	175 365 l
	169 359 l
	170 354 l
	174 349 l
	168 342 l
	160 348 l
	155 345 l
	155 339 l
	159 335 l
	154 329 l
	144 327 l
	142 324 l
	147 321 l
	152 323 l
	153 315 l
	159 313 l
	164 316 l
	160 311 l
	150 314 l
	146 311 l
	145 308 l
	136 306 l
	135 302 l
	130 300 l
	fk
	109 335 m
	115 335 l
	118 337 l
	124 333 l
	128 333 l
	131 338 l
	137 334 l
	145 346 l
	147 358 l
	153 359 l
	157 363 l
	157 370 l
	155 378 l
	149 379 l
	147 383 l
	135 383 l
	132 376 l
	134 373 l
	129 373 l
	121 378 l
	118 372 l
	118 367 l
	112 365 l
	117 361 l
	122 358 l
	114 355 l
	111 348 l
	106 351 l
	103 347 l
	103 339 l
	109 335 l
	fk
	537 56 m
	527 50 l
	518 49 l
	511 44 l
	512 37 l
	522 37 l
	531 43 l
	532 49 l
	537 56 l
	fk
	437 37 m
	435 36 l
	426 37 l
	422 40 l
	414 39 l
	412 37 l
	409 40 l
	403 39 l
	401 36 l
	401 30 l
	408 33 l
	419 28 l
	422 28 l
	426 32 l
	435 30 l
	438 34 l
	437 37 l
	fk
	306 80 m
	300 83 l
	298 79 l
	289 79 l
	284 84 l
	276 84 l
	272 79 l
	278 72 l
	288 66 l
	295 60 l
	301 56 l
	305 60 l
	305 72 l
	306 80 l
	fk
	243 104 m
	235 102 l
	231 100 l
	229 107 l
	232 117 l
	230 125 l
	228 130 l
	233 134 l
	236 130 l
	240 130 l
	243 135 l
	248 130 l
	249 123 l
	243 104 l
	fk
	250 160 m
	242 154 l
	237 152 l
	237 145 l
	241 139 l
	246 137 l
	249 147 l
	252 152 l
	250 160 l
	fk
	173 129 m
	168 129 l
	165 126 l
	166 120 l
	173 120 l
	178 125 l
	173 129 l
	fk
	224 443 m
	219 443 l
	214 436 l
	219 432 l
	224 439 l
	224 443 l
	fk
	185 461 m
	192 470 l
	196 476 l
	193 481 l
	185 479 l
	182 474 l
	188 471 l
	184 465 l
	185 461 l
	fk
	363 373 m
	360 366 l
	359 361 l
	353 360 l
	350 364 l
	350 369 l
	355 373 l
	363 373 l
	fk
	302 348 m
	305 344 l
	304 336 l
	297 333 l
	295 337 l
	298 341 l
	294 346 l
	298 350 l
	302 348 l
	fk
	174 421 m
	170 423 l
	164 418 l
	159 416 l
	158 411 l
	165 414 l
	170 414 l
	173 417 l
	174 421 l
	fk
	141 576 m
	145 580 l
	147 584 l
	150 588 l
	140 590 l
	138 600 l
	120 602 l
	118 596 l
	116 601 l
	105 596 l
	103 590 l
	99 595 l
	85 597 l
	92 610 l
	80 608 l
	78 612 l
	70 605 l
	60 597 l
	80 592 l
	65 587 l
	83 580 l
	70 570 l
	80 565 l
	90 562 l
	100 560 l
	110 563 l
	118 564 l
	130 565 l
	135 569 l
	141 576 l
	fk
	530 199 m
	525 194 l
	514 191 l
	511 182 l
	503 181 l
	497 184 l
	504 186 l
	502 195 l
	490 195 l
	489 199 l
	500 204 l
	505 207 l
	511 206 l
	515 200 l
	526 201 l
	530 199 l
	fk
} bd
/OutlineChartInternalborder {
	378 365 m
	361 367 l
	fk
	355 373 m
	342 381 l
	fk
	309 336 m
	300 329 l
	294 329 l
	288 337 l
	fk
	271 349 m
	265 354 l
	252 355 l
	241 341 l
	236 328 l
	240 319 l
	fk
	271 362 m
	264 369 l
	261 381 l
	266 389 l
	fk
	309 357 m
	294 354 l
	fk
	169 359 m
	153 359 l
	fk
	149 379 m
	156 385 l
	fk
	173 410 m
	176 380 l
	fk
	176 380 m
	165 375 l
	fk
	176 380 m
	180 362 l
	fk
	180 362 m
	187 346 l
	186 332 l
	fk
	186 332 m
	180 322 l
	fk
	180 322 m
	176 307 l
	181 296 l
	fk
	192 323 m
	179 321 l
	fk
	186 332 m
	174 330 l
	158 335 l
	fk
	193 367 m
	180 363 l
	fk
	129 300 m
	103 284 l
	fk
	132 276 m
	103 283 l
	71 295 l
	108 335 l
	fk
	103 347 m
	0 373 l
	0 168 l
	30 165 l
	fk
	170 422 m
	185 461 l
	fk
	158 410 m
	160 407 l
	fk
	185 479 m
	141 576 l
	fk
	215 435 m
	202 425 l
	fk
	224 439 m
	269 447 l
	fk
	156 230 m
	169 234 l
	fk
	169 234 m
	181 254 l
	fk
	181 254 m
	181 273 l
	fk
	196 223 m
	205 234 l
	217 243 l
	fk
	217 243 m
	222 255 l
	fk
	222 255 m
	227 264 l
	fk
	223 256 m
	211 260 l
	197 255 l
	181 255 l
	fk
	197 223 m
	199 203 l
	fk
	199 203 m
	213 214 l
	227 217 l
	fk
	199 203 m
	188 176 l
	fk
	137 122 m
	165 123 l
	fk
	178 126 m
	230 124 l
	fk
	232 100 m
	236 76 l
	fk
	240 140 m
	240 130 l
	fk
	272 78 m
	256 71 l
	fk
	305 71 m
	310 74 l
	fk
	354 110 m
	346 106 l
	fk
	402 49 m
	408 40 l
	fk
	410 32 m
	407 15 l
	fk
	467 58 m
	456 55 l
	447 43 l
	438 35 l
	fk
	432 107 m
	431 117 l
	fk
	484 129 m
	491 93 l
	fk
	440 94 m
	452 88 l
	471 93 l
	491 93 l
	fk
	491 93 m
	512 100 l
	fk
	512 100 m
	531 105 l
	fk
	531 105 m
	549 100 l
	565 103 l
	578 110 l
	592 121 l
	618 134 l
	fk
	260 184 m
	251 180 l
	fk
	260 184 m
	269 182 l
	fk
	269 182 m
	279 164 l
	285 155 l
	fk
	285 155 m
	300 141 l
	fk
	300 141 m
	309 125 l
	fk
	309 125 m
	323 114 l
	327 104 l
	fk
	308 126 m
	294 121 l
	fk
	304 143 m
	299 141 l
	fk
	285 155 m
	269 144 l
	fk
	470 131 m
	454 136 l
	fk
	394 565 m
	384 700 l
	fk
	200 300 m
	214 294 l
	fk
	70 605 m
	-30 700 l
	fk
	334 476 m
	322 488 l
	fk
	389 629 m
	150 588 l
	fk
	321 77 m
	350 35 l
	468 -6 l
	480 -22 l
	fk
	350 35 m
	315 2 l
	fk
	748 -60 m
	752 -36 l
	fk
	519 152 m
	511 182 l
	fk
	517 200 m
	515 214 l
	fk
	0 271 m
	-30 271 l
	fk
	52 117 m
	44 101 l
	fk
	103 103 m
	107 81 l
	fk
	205 172 m
	211 154 l
	236 152 l
	fk
	248 140 m
	278 132 l
	fk
	83 20 m
	185 -50 l
	230 -50 l
	fk
	168 234 m
	175 220 l
	fk
	175 220 m
	184 218 l
	196 223 l
	fk
	58 154 m
	86 150 l
	92 132 l
	fk
	70 126 m
	92 132 l
	fk
	92 132 m
	114 137 l
	fk
	82 188 m
	123 165 l
	fk
	114 137 m
	123 165 l
	fk
	114 137 m
	125 118 l
	fk
	123 165 m
	166 171 l
	fk
	175 220 m
	160 182 l
	fk
	217 243 m
	234 223 l
	fk
	256 202 m
	260 184 l
	fk
	269 182 m
	280 207 l
	fk
	255 295 m
	269 284 l
	fk
	269 284 m
	257 270 l
	266 252 l
	fk
	252 245 m
	266 252 l
	fk
	266 252 m
	275 253 l
	fk
	275 253 m
	280 237 l
	293 231 l
	291 218 l
	fk
	269 284 m
	288 300 l
	fk
	288 300 m
	291 321 l
	fk
	288 300 m
	293 279 l
	fk
	293 279 m
	275 253 l
	fk
	293 279 m
	313 284 l
	fk
	330 253 m
	329 269 l
	335 278 l
	fk
	335 278 m
	333 297 l
	fk
	318 299 m
	333 297 l
	fk
	333 297 m
	346 306 l
	fk
	346 306 m
	378 308 l
	383 325 l
	fk
	346 306 m
	343 327 l
	fk
	388 280 m
	366 268 l
	344 270 l
	335 278 l
	fk
	461 235 m
	466 256 l
	fk
	466 256 m
	450 266 l
	fk
	463 297 m
	485 305 l
	503 297 l
	561 317 l
	571 307 l
	fk
	571 307 m
	556 273 l
	fk
	514 267 m
	510 245 l
	fk
	510 245 m
	539 251 l
	568 249 l
	fk
	510 245 m
	508 229 l
	fk
	508 229 m
	522 220 l
	fk
	508 229 m
	486 218 l
	fk
	486 218 m
	487 211 l
	fk
	486 218 m
	482 247 l
	466 256 l
	fk
	431 358 m
	472 370 l
	495 369 l
	fk
	495 369 m
	497 404 l
	fk
	497 404 m
	422 455 l
	fk
	497 404 m
	530 424 l
	fk
	530 424 m
	511 520 l
	fk
	495 369 m
	553 367 l
	593 345 l
	fk
	593 345 m
	587 318 l
	571 307 l
	fk
	593 345 m
	582 413 l
	fk
	582 413 m
	530 424 l
	fk
	582 413 m
	627 437 l
	fk
	627 437 m
	798 570 l
	fk
	627 437 m
	657 383 l
	661 328 l
	fk
	567 241 m
	610 214 l
	fk
	610 214 m
	645 204 l
	fk
	610 214 m
	610 190 l
	fk
	512 100 m
	501 63 l
	fk
	531 105 m
	536 71 l
	fk
	625 62 m
	627 29 l
	601 15 l
	fk
	601 15 m
	576 10 l
	560 17 l
	fk
	601 15 m
	604 -2 l
	fk
	536 -20 m
	520 -35 l
	fk
	497 -10 m
	499 -59 l
	511 -72 l
	512 -84 l
	fk
	512 -84 m
	536 -77 l
	fk
	512 -84 m
	491 -77 l
	473 -79 l
	fk
	473 -79 m
	471 -54 l
	460 -48 l
	456 -19 l
	fk
	473 -79 m
	472 -100 l
	fk
	452 549 m
	464 580 l
	534 616 l
	568 592 l
	fk
	338 353 m
	336 324 l
	fk
	120 279 m
	100 243 l
	105 207 l
	fk
} bd
/OutlineChartNationalborder {
	650 140 m
	627 148 l
	fk
	627 148 m
	626 160 l
	614 165 l
	607 160 l
	600 162 l
	fk
	446 142 m
	436 141 l
	433 143 l
	429 134 l
	fk
	429 134 m
	433 128 l
	427 120 l
	fk
	429 134 m
	417 130 l
	410 136 l
	401 126 l
	394 129 l
	fk
	374 120 m
	372 107 l
	362 98 l
	fk
	271 212 m
	266 206 l
	260 212 l
	256 202 l
	fk
	256 202 m
	251 202 l
	251 211 l
	241 207 l
	237 211 l
	fk
	237 211 m
	240 216 l
	227 210 l
	226 217 l
	fk
	226 217 m
	234 223 l
	fk
	234 223 m
	242 228 l
	fk
	242 228 m
	249 225 l
	260 229 l
	266 225 l
	fk
	266 225 m
	267 217 l
	271 212 l
	fk
	237 211 m
	235 198 l
	228 195 l
	fk
	228 195 m
	229 189 l
	235 184 l
	234 172 l
	fk
	243 228 m
	243 241 l
	253 245 l
	fk
	253 245 m
	252 251 l
	238 257 l
	fk
	238 257 m
	244 264 l
	240 269 l
	241 283 l
	241 290 l
	fk
	241 290 m
	248 294 l
	256 295 l
	fk
	256 295 m
	252 307 l
	258 310 l
	258 314 l
	256 318 l
	fk
	241 290 m
	224 299 l
	fk
	238 257 m
	232 257 l
	234 263 l
	227 264 l
	fk
	227 264 m
	228 273 l
	224 277 l
	219 271 l
	218 280 l
	213 280 l
	211 286 l
	205 290 l
	fk
	302 394 m
	308 398 l
	316 417 l
	312 426 l
	320 432 l
	320 438 l
	315 444 l
	318 457 l
	323 469 l
	331 467 l
	334 476 l
	fk
	334 476 m
	339 487 l
	339 495 l
	349 504 l
	349 513 l
	356 522 l
	361 517 l
	361 531 l
	369 524 l
	372 526 l
	371 532 l
	fk
	371 532 m
	372 540 l
	379 545 l
	382 541 l
	381 534 l
	401 535 l
	405 539 l
	401 542 l
	402 548 l
	407 552 l
	417 549 l
	421 546 l
	421 536 l
	424 530 l
	fk
	424 530 m
	429 536 l
	428 550 l
	fk
	371 532 m
	376 531 l
	383 525 l
	388 522 l
	390 509 l
	390 488 l
	fk
	57 202 m
	64 203 l
	65 198 l
	67 193 l
	73 195 l
	74 192 l
	84 195 l
	82 188 l
	fk
	82 188 m
	79 188 l
	70 179 l
	66 168 l
	63 162 l
	58 162 l
	57 154 l
	57 148 l
	fk
	57 148 m
	44 131 l
	fk
	183 169 m
	177 168 l
	172 171 l
	167 171 l
	fk
	167 171 m
	167 178 l
	161 183 l
	fk
	161 183 m
	154 179 l
	137 195 l
	fk
	272 333 m
	280 331 l
	fk
	415 413 m
	420 427 l
	422 455 l
	fk
	422 455 m
	424 531 l
	fk
	149 379 m
	136 374 l
	136 369 l
	140 366 l
	143 368 l
	144 366 l
	144 363 l
	147 358 l
	fk
	49 124 m
	60 126 l
	70 126 l
	fk
	70 126 m
	76 109 l
	fk
	83 87 m
	83 20 l
	fk
	83 20 m
	-30 -40 l
	fk
	224 74 m
	224 60 l
	213 52 l
	217 39 l
	217 7 l
	230 -10 l
	fk
	230 -10 m
	230 -50 l
	fk
	230 -10 m
	230 -100 l
	fk
	230 -10 m
	249 5 l
	fk
	215 168 m
	216 190 l
	228 195 l
	fk
	271 212 m
	280 207 l
	fk
	291 218 m
	279 218 l
	266 225 l
	fk
	313 284 m
	318 299 l
	fk
	318 299 m
	319 316 l
	fk
	291 218 m
	304 224 l
	309 234 l
	fk
	309 234 m
	300 251 l
	313 259 l
	fk
	313 259 m
	322 250 l
	330 253 l
	fk
	313 259 m
	313 284 l
	fk
	375 330 m
	383 325 l
	fk
	383 325 m
	391 317 l
	fk
	391 317 m
	388 280 l
	fk
	388 280 m
	394 262 l
	fk
	394 262 m
	399 246 l
	375 234 l
	fk
	375 234 m
	346 238 l
	fk
	346 238 m
	330 253 l
	fk
	346 238 m
	339 229 l
	fk
	339 229 m
	326 235 l
	309 234 l
	fk
	339 229 m
	340 216 l
	fk
	340 216 m
	327 200 l
	fk
	340 216 m
	363 211 l
	376 222 l
	fk
	376 222 m
	375 234 l
	fk
	327 200 m
	296 203 l
	fk
	296 203 m
	280 207 l
	fk
	296 195 m
	296 203 l
	fk
	327 200 m
	348 188 l
	fk
	348 188 m
	347 178 l
	fk
	347 178 m
	345 167 l
	339 159 l
	fk
	339 159 m
	333 148 l
	fk
	347 178 m
	328 182 l
	324 174 l
	339 159 l
	fk
	348 188 m
	362 190 l
	fk
	362 190 m
	385 207 l
	fk
	385 207 m
	376 222 l
	fk
	362 190 m
	383 165 l
	fk
	383 165 m
	385 149 l
	fk
	385 149 m
	368 141 l
	fk
	368 141 m
	358 147 l
	347 139 l
	fk
	368 141 m
	374 120 l
	fk
	374 120 m
	394 129 l
	fk
	394 129 m
	385 149 l
	fk
	383 165 m
	416 161 l
	453 171 l
	fk
	385 207 m
	417 205 l
	441 221 l
	fk
	441 221 m
	447 199 l
	fk
	447 199 m
	462 192 l
	fk
	447 199 m
	464 218 l
	461 235 l
	fk
	441 221 m
	461 235 l
	fk
	450 266 m
	394 262 l
	fk
	450 266 m
	469 274 l
	fk
	469 274 m
	463 297 l
	fk
	556 273 m
	514 267 l
	fk
	514 267 m
	492 280 l
	469 274 l
	fk
	556 273 m
	566 262 l
	568 249 l
	fk
	568 249 m
	567 241 l
	fk
	567 241 m
	552 236 l
	fk
	463 297 m
	449 329 l
	437 338 l
	fk
	391 317 m
	410 317 l
	426 332 l
	fk
	426 332 m
	406 347 l
	370 351 l
	fk
	426 332 m
	437 338 l
	fk
	437 338 m
	431 358 l
	fk
	431 358 m
	420 375 l
	fk
	420 375 m
	400 373 l
	fk
	420 375 m
	422 399 l
	fk
	661 328 m
	633 316 l
	631 286 l
	681 256 l
	fk
	661 328 m
	691 335 l
	756 323 l
	777 332 l
	763 355 l
	772 376 l
	800 378 l
	fk
	566 183 m
	589 191 l
	610 190 l
	fk
	610 190 m
	653 160 l
	660 145 l
	fk
	618 134 m
	626 148 l
	fk
	550 60 m
	584 67 l
	625 62 l
	fk
	625 62 m
	655 78 l
	fk
	655 78 m
	633 110 l
	636 124 l
	fk
	618 134 m
	636 124 l
	fk
	636 124 m
	658 113 l
	fk
	650 140 m
	658 113 l
	fk
	650 140 m
	660 145 l
	fk
	658 113 m
	674 121 l
	688 117 l
	fk
	660 145 m
	691 140 l
	fk
	740 99 m
	769 97 l
	800 80 l
	fk
	655 78 m
	667 55 l
	674 29 l
	707 -12 l
	fk
	560 17 m
	548 19 l
	fk
	604 -2 m
	664 -19 l
	709 -21 l
	fk
	604 -2 m
	583 -12 l
	579 -30 l
	541 -56 l
	fk
	560 17 m
	558 -4 l
	540 -27 l
	fk
	540 -27 m
	536 -20 l
	fk
	536 -20 m
	534 -12 l
	fk
	540 -27 m
	541 -36 l
	fk
	428 -15 m
	425 -37 l
	434 -63 l
	432 -100 l
	fk
} bd
/OutlineChartCanalLine {
	560 -95 m
	762 -95 l
	762 -65 l
	fk
	536 191 m
	573 224 l
	657 217 l
	fk
	517 -31 m
	514 -14 l
	fk
} bd
{
	currentdict end 3 1 roll [ exch /setgray load ] cvx def begin
}{
	currentdict end 5 1 roll [ 4 1 roll /setrgbcolor load ] cvx def begin
}{
	currentdict end 6 1 roll [ 5 1 roll /setcmykcolor load ] cvx def begin
} bind VisitColors
/ChangeController false def
s
MapUnitLetterFont z
{
	exch load exch load
	2 index [ exch n 0 0 m true charpath pathbbox 3 2 roll add -2 div 3 1 roll add -2 div exch ] 3 1 roll
	4 dict begin /Contrast xd /Paint xd /Offset xd /Letter xd currentdict end
	currentdict end 3 1 roll
	Powers 2 index 3 2 roll put
	[ /Power 2 index {
		ChangeController {
			Power GetControlledPower
			/ChangeController false def
		} if
	} bind /exec load /def load ] cvx def
	begin
} VisitPowers
r
/FleetTroops FleetTroopBBox /PaintFleet load CreateTroops def
/WingTroops WingTroopBBox /PaintWing load CreateTroops def
/ArmyTroops ArmyTroopBBox /PaintArmy load CreateTroops def
/Centers <<
	{ pop pop true } bind
	VisitSupplies
>> def
/SupplyCenters SupplyCenterBBox /PaintSupply load CreateTroops def
{ currentdict end 4 1 roll [ SupplyCenters 4 2 roll 4 index ] cvx def begin } bind
VisitSupplies
/UNOWNEDCENTER /UNOWNED ld
/BRITAINCENTER /BRITAIN ld
/EGYPTCENTER /EGYPT ld
/FRANCECENTER /FRANCE ld
/GERMANYCENTER /GERMANY ld
/ITALYCENTER /ITALY ld
/POLANDCENTER /POLAND ld
/RUSSIACENTER /RUSSIA ld
/SPAINCENTER /SPAIN ld
/TURKEYCENTER /TURKEY ld
/UKRAINECENTER /UKRAINE ld
%%EndSetup
