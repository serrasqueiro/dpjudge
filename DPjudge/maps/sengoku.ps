%!PS-Adobe-3.0
%%Title: Diplomacy Map (Sengoku, designed by Benjamin Hester)
%%Creator: dpmap, using a map created with DPeye by Mario Huys (woelpad@yahoo.com)
%%DocumentPaperSizes: Letter
%%LanguageLevel: 2
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentNeededResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndComments

%%BeginDefaults
%%PageResources: font Helvetica-Bold Courier Courier-Bold Times-Roman
%%EndDefaults

% INFO
%  331  374 AKI    Aki
%  199   72 ARB    Ariake Bay
%  450  283 AWA    Awa
%  383  400 BIN    Bingo
%  431  380 BIT    Bitchu
%  469  393 BIZ    Bizen
%  199  242 BUN    Bungo
%  274  231 BUS    Bungo Strait
%  169  302 CHZ    Chikuzen
%  941  731 DEW    Dewa
%  826  591 ECG    Echigo
%   44  148 ECS    East China Sea
%  626  477 ECZ    Echizen
%  708  538 ETC    Etchu
%  529  391 HAR    Harima
%  693  487 HID    Hida
%  116  210 HIG    Higo
%  977  573 HIT    Hitachi
%  130  256 HIZ    Hizen
%  451  443 HOK    Hoki
%  269  154 HYC    Hyuga Coast
%  178  164 HYU    Hyuga
%  503  435 INA    Inaba
%  377  334 INS    Inland Sea
%  634  350 ISE    Ise
%  299  408 IWA    Iwami
%  271  457 IWC    Iwami Coast
%  353  296 IYO    Iyo
%  369  433 IZM    Izumo
%  834  376 IZU    Izu
%  655  514 KAG    Kaga
%  823  470 KAI    Kai
%  113  369 KAS    Kanmon Strait
%  548  335 KAW    Kawachi
%  920  392 KAZ    Kazusa
%  563  266 KII    Kii
%  506  245 KIS    Kii Straits
%  888  561 KOZ    Kozuke
%  681  231 KUS    Kumano Sea
%  720  374 MIK    Mikawa
%  714  430 MIN    Mino
%  869  511 MUS    Musashi
% 1017  721 MUT    Mutsu
%  220  368 NAG    Nagato
%  685  583 NOT    Noto
% 1045  501 NPO    North Pacific Ocean
%  772  537 NSH    North Shinano
%  811  749 NSJ    North Sea of Japan
%  612  416 OMI    Omi
%  488  347 OSB    Osaka Bay
%  138   96 OSU    Osumi
%  677  400 OWA    Owari
%  973  211 PAO    Pacific Ocean
%  852  319 SAB    Sagami Bay
%  463  498 SAC    Sanin Coast
%  856  409 SAG    Sagami
%  462  316 SAN    Sanuki
%  124  151 SAT    Satsuma
%  561  373 SET    Settsu
%  635  323 SHM    Shima
%  933  451 SHS    Shimosa
%  940  609 SHT    Shimotsuke
%  149   22 SHU    Shuri Straits
%  486  639 SOJ    Sea of Japan
%  584   86 SPO    South Pacific Ocean
%  758  470 SSH    South Shinano
%  148  530 SSJ    South Sea of Japan
%  276  346 SUO    Suo
%  785  393 SUR    Suruga
%  265  302 SUS    Suo Sea
%  554  435 TAN    Tango
%  874  935 TGS    Tsugaru Straits
%  327  223 TOS    Tosa
%  763  367 TOT    Totomi
%  405  193 TSB    Tosa Bay
%   33  312 TSS    Tsushima Straits
%  699  314 TTS    Totomi Sea
%  760  604 TYB    Toyama Bay
%  587  529 WAB    Wakasa Bay
%  590  357 YAS    Yamashiro
%  590  322 YAT    Yamato
% MAP

%%BeginSetup
/bd { bind def } bind def
/xd { exch def } bd
/ld { load def } bd
/ifloor { .001 add floor cvi } bd
/iceiling { .001 sub ceiling cvi } bd
/min { 2 copy gt { exch } if pop } bd
/max { 2 copy lt { exch } if pop } bd
/secure_atan { 2 copy 0 eq exch 0 eq and { pop pop 0 } { atan } ifelse } bd
/center { 3 2 roll add 2 div 3 1 roll add 2 div exch } bd
/a /arc ld
/c /curveto ld
/d /setdash ld
/f /fill ld
/h /show ld
/k /stroke ld
/l /lineto ld
/m /moveto ld
/n /newpath ld
/o /rotate ld
/p /closepath ld
/r /grestore ld
/s /gsave ld
/t /translate ld
/w /setlinewidth ld
/x /scale ld
/y /scalefont ld
/z /setfont ld
/Powers 20 dict def
%%IncludeResource: font Helvetica-Bold
/MapUnitLetterFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Helvetica-Bold
/MapNameFont /Helvetica-Bold findfont 14 y def
%%IncludeResource: font Courier
/TextFixedFont /Courier findfont def
%%IncludeResource: font Courier-Bold
/TextHeadingFont /Courier-Bold findfont def
%%IncludeResource: font Times-Roman
/TextTitleFont /Times-Roman findfont def
/PageSetup {
	612 0 t
	90 o
	/FinishReport { } def /InTextMode true def
	Black
	MovePhase
} bd
/ShowPage {
	DrawAliases
	DrawRemainingCenters
	InTextMode { FinishReport } { r } ifelse
	FrameMap
	showpage
} bd
/VisitColors {
	3 dict begin
	/c xd /r xd /g xd
	/BorderBlack .1 g
	/MountainGrey .5 g
	/IceGrey .9 g
	/ArrowBlack 0 g
	/ArrowWhite .9 g
	/Black 0 g
	/White .9 g
	/LandBrown .8 .7 .4 r
	/SeaBlue .1 .4 .6 r
	/ArrowRed 1 0 0 r
	/ArrowBlue .529 .808 .922 r
	/@Green 0 .502 0 r
	/@Olive .502 .502 0 r
	/@Purple .502 0 .502 r
	/@Orange 1 .647 0 r
	/@Maroon .502 0 0 r
	/@Navy 0 0 .502 r
	/@HotPink 1 .412 .706 r
	/@LimeGreen .196 .804 .196 r
	/Brown .6 .45 .2 r
	/DarkGreen 0 .4 0 r
	end
} def
/VisitPowers {
	1 dict begin
	/p xd
	/SHIMAZU (S) /@Green /White p
	/MORI (R) /@Olive /White p
	/CHOSOKABE (C) /@Purple /White p
	/ASAKURA (A) /@Orange /White p
	/ODA (D) /@Maroon /White p
	/UESUGI (U) /@Navy /White p
	/TAKEDA (T) /Black /White p
	/HOJO (H) /@HotPink /White p
	/NEUTRAL ( ) /@LimeGreen /White p
	/UNOWNED (?) /Brown /White p
	end
} def
/PaintFleet {
	begin
	.8 .8 x
	0 8 t
	s
	.5 .5 x
	-35 -16 t
	12 3 m 12 9 l 9 12 l 6 13 l 6 17 l % bow
	9 17 l 9 23 l 2 22 l 7 16 l 6 16 l
	1 22 l % bowsprit
	6 27 l 12 37 l 15 45 l % front sail
	19 44 l 19 48 l 16 48 l 15 49 l 19 49 l
	19 55 l 20 55 l 20 49 l 24 49 l 23 48 l
	20 48 l 20 44 l % front mast
	24 43 l 24 34 l 27 29 l 33 29 l 33 32 l
	25 32 l 28 39 l 31 51 l % mid sail left
	35 50 l 35 54 l 30 54 l 29 55 l 35 55 l
	35 63 l 36 63 l 36 56 l 36 55 l 42 55 l
	41 54 l 36 54 l 36 50 l % mid mast
	41 49 l 41 32 l 36 32 l 36 29 l 39 29 l
	41 43 l % mid sail right
	45 43 l 45 47 l 41 47 l 41 48 l 45 48 l
	45 55 l 46 55 l 46 48 l 51 48 l 50 47 l
	46 47 l 46 43 l % rear mast
	48 43 l 49 28 l 51 28 l 51 31 l 54 33 l
	54 23 l 57 26 l 57 22 l 56 21 l % rear sail and flag
	56 15 l 59 12 l 59 7 l 57 4 l 55 3 l p % bow
	s 4 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/FleetTroopBBox [
	-14.4 .4 10.4 26
] def
/PaintControlledFleet {
	begin
	.8 .8 x
	0 8 t
	s
	.5 .5 x
	-35 -16 t
	12 3 m 12 9 l 9 12 l 6 13 l 6 17 l % bow
	9 17 l 9 23 l 2 22 l 7 16 l 6 16 l
	1 22 l % bowsprit
	6 27 l 12 37 l 15 45 l % front sail
	19 44 l 19 48 l 16 48 l 15 49 l 19 49 l
	19 55 l 20 55 l 20 49 l 24 49 l 23 48 l
	20 48 l 20 44 l % front mast
	24 43 l 24 34 l 27 29 l 33 29 l 33 32 l
	25 32 l 28 39 l 31 51 l % mid sail left
	35 50 l 35 54 l 30 54 l 29 55 l 35 55 l
	35 63 l 36 63 l 36 56 l 36 55 l 42 55 l
	41 54 l 36 54 l 36 50 l % mid mast
	41 49 l 41 32 l 36 32 l 36 29 l 39 29 l
	41 43 l % mid sail right
	45 43 l 45 47 l 41 47 l 41 48 l 45 48 l
	45 55 l 46 55 l 46 48 l 51 48 l 50 47 l
	46 47 l 46 43 l % rear mast
	48 43 l 49 28 l 51 28 l 51 31 l 54 33 l
	54 23 l 57 26 l 57 22 l 56 21 l % rear sail and flag
	56 15 l 59 12 l 59 7 l 57 4 l 55 3 l p % bow
	s s 12 w Outer k r 4 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledFleetTroopBBox [
	-16 -1.2 12 27.6
] def
/DrawFleet {
	SwitchToMapMode
	s t
	FleetTroops Power get execform
	r
} bd
/PaintArmy {
	begin
	.8 .8 x
	0 8 t
	s
	.1667 .1667 x
	-90 -82 t
	39 3 m 37 8 l 32 12 l 32 25 l 27 38 l 34 46 l 34 54 l 26 63 l 16 59 l 16 52 l
	19 41 l 13 28 l 12 37 l 6 49 l 5 60 l 1 69 l 7 78 l 8 90 l 12 93 l 19 91 l
	30 80 l 38 86 l 45 97 l 50 123 l 58 133 l 65 135 l 67 146 l 75 153 l 69 160 l 57 159 l
	72 169 l 84 166 l 84 158 l 78 150 l 82 148 l 82 144 l 88 141 l 82 135 l 79 131 l 80 126 l 82 122 l
	90 118 l 93 129 l 106 136 l 104 142 l 116 137 l 123 136 l 129 132 l 139 127 l 144 124 l 141 115 l
	134 111 l 126 115 l 119 115 l 129 106 l 133 94 l 133 84 l 136 78 l 135 71 l 155 61 l 157 55 l
	149 34 l 137 25 l 130 25 l 131 33 l 134 36 l 148 47 l 145 54 l 132 56 l 125 39 l 120 17 l 127 11 l
	132 3 l 118 3 l 117 12 l 111 18 l 115 49 l 100 49 l 96 42 l 77 48 l 69 48 l 63 36 l 76 22 l
	81 9 l 76 5 l 70 10 l 71 18 l 53 31 l 55 42 l 41 37 l 37 23 l 43 12 l 49 7 l 49 3 l p
	s 12 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ArmyTroopBBox [
	-12.67 -4.93 9.73 18.8
] def
/PaintControlledArmy {
	begin
	.8 .8 x
	0 8 t
	s
	.1667 .1667 x
	-90 -82 t
	39 3 m 37 8 l 32 12 l 32 25 l 27 38 l 34 46 l 34 54 l 26 63 l 16 59 l 16 52 l
	19 41 l 13 28 l 12 37 l 6 49 l 5 60 l 1 69 l 7 78 l 8 90 l 12 93 l 19 91 l
	30 80 l 38 86 l 45 97 l 50 123 l 58 133 l 65 135 l 67 146 l 75 153 l 69 160 l 57 159 l
	72 169 l 84 166 l 84 158 l 78 150 l 82 148 l 82 144 l 88 141 l 82 135 l 79 131 l 80 126 l 82 122 l
	90 118 l 93 129 l 106 136 l 104 142 l 116 137 l 123 136 l 129 132 l 139 127 l 144 124 l 141 115 l
	134 111 l 126 115 l 119 115 l 129 106 l 133 94 l 133 84 l 136 78 l 135 71 l 155 61 l 157 55 l
	149 34 l 137 25 l 130 25 l 131 33 l 134 36 l 148 47 l 145 54 l 132 56 l 125 39 l 120 17 l 127 11 l
	132 3 l 118 3 l 117 12 l 111 18 l 115 49 l 100 49 l 96 42 l 77 48 l 69 48 l 63 36 l 76 22 l
	81 9 l 76 5 l 70 10 l 71 18 l 53 31 l 55 42 l 41 37 l 37 23 l 43 12 l 49 7 l 49 3 l p
	s s 36 w Outer k r 12 w Contrast k r Paint f
	r
	Offset aload pop m
	MapUnitLetterFont z
	Contrast Letter h
	end
} bd
/ControlledArmyTroopBBox [
	-14.27 -6.53 11.33 20.4
] def
/DrawArmy {
	SwitchToMapMode
	s t
	ArmyTroops Power get execform
	r
} bd
/DrawAlias {
	SwitchToMapMode
	s
	3 1 roll t
	.8 .8 x
	0 -14 t
	MapNameFont z
	dup stringwidth pop -2 div 0 neg m h
	r
} bd
/DrawName {
	pop pop pop
} bd
/VisitTerritories {
	3 dict begin
	/w xd
	/l xd
	/c xd
	(DEW) 941 731 c
	(MUT) 1017 721 c
	(ECG) 826 591 c
	(NOT) 685 583 c
	(HIT) 977 573 c
	(ETC) 708 538 c
	(KAG) 655 514 c
	(ECZ) 626 477 c
	(SHS) 933 451 c
	(HOK) 451 443 c
	(INA) 503 435 c
	(TAN) 554 435 c
	(IZM) 369 433 c
	(IWA) 299 408 c
	(SAG) 856 409 c
	(OWA) 677 400 c
	(BIZ) 469 393 c
	(SUR) 785 393 c
	(KAZ) 920 392 c
	(HAR) 529 391 c
	(BIT) 431 380 c
	(IZU) 834 376 c
	(SET) 561 373 c
	(AKI) 331 374 c
	(MIK) 720 374 c
	(TOT) 763 367 c
	(NAG) 220 368 c
	(BIN) 383 400 c
	(ISE) 634 350 c
	(SUO) 276 346 c
	(KAW) 548 335 c
	(SHM) 635 323 c
	(SAN) 462 316 c
	(IYO) 353 296 c
	(CHZ) 169 302 c
	(AWA) 450 283 c
	(KII) 563 266 c
	(HIZ) 130 256 c
	(BUN) 199 242 c
	(TOS) 327 223 c
	(HIG) 116 210 c
	(HYU) 178 164 c
	(SAT) 124 151 c
	(OSU) 138 96 c
	(SHT) 940 609 l
	(KOZ) 888 561 l
	(NSH) 772 537 l
	(MUS) 869 511 l
	(HID) 693 487 l
	(SSH) 758 470 l
	(KAI) 823 470 l
	(MIN) 714 430 l
	(OMI) 612 416 l
	(YAS) 590 357 l
	(YAT) 590 322 l
	(TGS) 874 935 w
	(NSJ) 811 749 w
	(SOJ) 486 639 w
	(TYB) 760 604 w
	(SSJ) 148 530 w
	(WAB) 587 529 w
	(NPO) 1045 501 w
	(SAC) 463 498 w
	(IWC) 271 457 w
	(KAS) 113 369 w
	(OSB) 488 347 w
	(INS) 377 334 w
	(SAB) 852 319 w
	(TTS) 699 314 w
	(TSS) 33 312 w
	(SUS) 265 302 w
	(KIS) 506 245 w
	(BUS) 274 231 w
	(KUS) 681 231 w
	(PAO) 973 211 w
	(TSB) 405 193 w
	(HYC) 269 154 w
	(ECS) 44 148 w
	(SPO) 584 86 w
	(ARB) 199 72 w
	(SHU) 149 22 w
	end
} def
/VisitSupplies {
	1 dict begin
	/s xd
	/MUT 1045 774 s
	/ECG 850 622 s
	/NOT 697 603 s
	/KOZ 889 590 s
	/HIT 959 531 s
	/NSH 792 521 s
	/MUS 880 486 s
	/INA 498 459 s
	/ECZ 612 452 s
	/IZM 386 449 s
	/SSH 757 444 s
	/KAI 823 440 s
	/MIN 658 439 s
	/IWA 329 432 s
	/SAG 876 423 s
	/KAZ 931 413 s
	/BIZ 480 412 s
	/OMI 609 393 s
	/NAG 251 385 s
	/YAS 585 382 s
	/BIN 387 381 s
	/ISE 633 374 s
	/OWA 669 374 s
	/SET 563 356 s
	/IZU 827 357 s
	/MIK 706 356 s
	/TOT 747 350 s
	/SAN 438 333 s
	/KII 531 300 s
	/YAT 568 297 s
	/IYO 324 285 s
	/HIZ 106 274 s
	/BUN 218 256 s
	/TOS 344 239 s
	/HIG 126 188 s
	/SAT 106 138 s
	/OSU 143 123 s
	end
} def
/DrawRemainingCenters {
	SwitchToMapMode
	UNOWNED
	Centers {
		{ load exec supply } { pop } ifelse
	} forall
} bd
/PaintSupply {
	begin
	1.2 1.2 x
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/SupplyCenterBBox [
	-7.2 -7.2 7.2 7.2
] def
/PaintControlledSupply {
	begin
	1.2 1.2 x
	Outer
	n 0 0 10 0 360 a f
	Contrast
	n 0 0 8 0 360 a f
	Paint
	n 0 0 6 0 360 a f
	end
} bd
/ControlledSupplyCenterBBox [
	-12 -12 12 12
] def
/supply {
	SwitchToMapMode
	Centers exch false put
	s t
	Power get execform
	r
} bd
/SetArrowStateOk {
	[] 0 d
} bd
/OkOrder {
	/SetArrowState /SetArrowStateOk ld
} bd
/SetArrowStateFailed {
	[4 6] 2 d
} bd
/FailedOrder {
	/SetArrowState /SetArrowStateFailed ld
} bd
/MovePhase {
	/ArrowColor /ArrowBlack ld
	/ArrowBase 20 def
	/TraceArrowHead /TraceSingleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/RetreatPhase {
	/ArrowColor /ArrowRed ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/ProposePhase {
	/ArrowColor /ArrowWhite ld
	/ArrowBase 39.8 def
	/TraceArrowHead /TraceDoubleArrowHead ld
	InTextMode not { ArrowColor } if
} bd
/TraceSingleArrowHead {
	% draw the arrow head ...
	n
	dup -5 m
	dup 20 add 0 l
	dup 5 l
	p
} bd
/TraceDoubleArrowHead {
	% draw the double arrow head ...
	n
	dup -5 m
	dup 19.8 add
	dup -1 l
	dup -5 l
	dup 20 add 0 l
	dup 5 l
	1 l
	dup 5 l
	p
} bd
/PaintArrowMove {
	s
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.8 .8 x
	0 8 t
	o
	.8 div ArrowBase sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% if base is still too long, shorten it some more
	% to make arrow head touch support circle
	dup 14 gt {
		14 sub
	} {
		pop 0
	} ifelse
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowCircle {
	s
	5 1 roll
	3 index 3 index t
	3 2 roll sub 3 1 roll exch sub exch
	2 copy dup mul exch dup mul add sqrt 3 1 roll exch secure_atan
	.8 .8 x
	0 8 t
	o
	.8 div
	1 index sub
	% if base of arrow is long enough, shorten it enough
	% to e.g. move arrow start beyond support circle
	dup 14 gt {
		14 14 0 t sub
	} {
		0 t 0
	} ifelse
	% draw the circle ...
	1 w
	n
	2 copy add 0 4 3 roll 0 360 a
	p k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	r
} bd
/PaintArrowArrive {
	s
	t
	.8 .8 x
	0 8 t
	180 rotate 54 ArrowBase add neg 0 t
	40
	1 w
	TraceArrowHead
	k
	% now the shaft ...
	2 w
	0 0 m
	0 l
	k
	-10 0 m -20 0 l
	-30 0 m -40 0 l
	k
	r
} bd
/PaintArrowArriveFleet {
	2 copy
	PaintArrowArrive
	SetArrowStateOk
	exch 14 ArrowBase add 30 add .8 mul add exch 11.520000000000001 add t
	.8 .8 x
	FleetTroops Power get execform
} bd
/PaintArrowArriveArmy {
	2 copy
	PaintArrowArrive
	SetArrowStateOk
	exch 14 ArrowBase add 30 add .8 mul add exch 11.520000000000001 add t
	.8 .8 x
	ArmyTroops Power get execform
} bd
/PaintArrowDepart {
	s
	t
	.8 .8 x
	0 8 t
	-54 0 t
	40
	2 w
	0 0 m
	0 l
	-10 0 m -20 0 l
	-30 0 m -40 0 l
	k
	r
} bd
/ArrowMove {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowMove
	r
} bd
/ArrowHold {
	SwitchToMapMode
	s
	SetArrowState
	24 PaintArrowCircle
	r
} bd
/ArrowSupport {
	SwitchToMapMode
	s
	SetArrowState
	center
	8 PaintArrowCircle
	r
} bd
/ArrowConvoy {
	SwitchToMapMode
	s
	SetArrowState
	center
	12 PaintArrowCircle
	r
} bd
/ArrowDepart {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowDepart
	r
} bd
/ArrowArriveFleet {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArriveFleet
	r
} bd
/ArrowArriveArmy {
	SwitchToMapMode
	s
	SetArrowState
	PaintArrowArriveArmy
	r
} bd
/ArrowRetreat {
	RetreatPhase
	ArrowMove
	MovePhase
} bd
/ArrowPropose {
	ProposePhase
	ArrowMove
	MovePhase
} bd
/ArrowRetreatArriveFleet {
	RetreatPhase
	ArrowArriveFleet
	MovePhase
} bd
/ArrowRetreatArriveArmy {
	RetreatPhase
	ArrowArriveArmy
	MovePhase
} bd
/ArrowRetreatDepart {
	RetreatPhase
	ArrowDepart
	MovePhase
} bd
/BuildUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.8 .8 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/SlashUnit {
	s
	3 1 roll t
	.8 .8 x
	0 8 t
	n
	-21 -16 m
	11 16 l
	21 16 l
	-11 -16 l
	p
	exec
	r
} bd
/DestroyUnit {
	SwitchToMapMode
	{ ArrowRed f } SlashUnit
} bd
/DisbandUnit {
	SwitchToMapMode
	{ s ArrowWhite f r 1 w ArrowRed k } SlashUnit
} bd
/RemoveUnit {
	SwitchToMapMode
	{ ArrowWhite f } SlashUnit
} bd
/FindUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.8 .8 x
	0 8 t
	6 w [ 3.14 6.28 ] 1.57 d
	n
	0 0 24 0 360 a
	p k
	r
} bd
/LoseUnit {
	SwitchToMapMode
	s
	t
	ArrowBlue
	.8 .8 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/QueryUnit {
	SwitchToMapMode
	s
	t
	ArrowWhite
	.8 .8 x
	0 8 t
	4 w
	-12 4 m
	-8 7 -4 7 0 4 c
	4 1 8 1 12 4 c
	-12 -4 m
	-8 -1 -4 -1 0 -4 c
	4 -7 8 -7 12 -4 c
	k
	r
} bd
/MapForm <<
	/FormType 1
	/Matrix [ 4.8137 0 0 4.8137 0 0 ]
	/BBox [ 0 0 233.71 204 ]
	/FormDict 1 dict
	/PaintProc {
		dup /Matrix get exch /FormDict get begin
		s
		matrix invertmatrix concat
		SeaBlue 0 0 1125 982 rectfill
		IncludeSeaBorders
		IncludeLand
		IncludeInternalBorders
		IncludeCrossings
		r
		end
	} bind
>> def
/DrawMap {
	PageSetup
	SwitchToMapMode
	MapForm execform
	/Centers << Centers { pop true } forall >> def
	UNOWNED
} bd
/DrawSupplies {
	SwitchToMapMode
	UNOWNEDCENTER
	{ SupplyCenters 3 1 roll 4 3 roll supply } bind
	VisitSupplies
} bd
/DrawAliases {
	NameTerritories
} bd
/NameTerritories {
	SwitchToMapMode
	s
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ DarkGreen 3 2 roll DrawAlias } bind
	{ White 3 2 roll DrawAlias } bind
	VisitTerritories
	r
} bd
/GetControlledPower {
	1 index dup length string cvs 1 index dup length string cvs
	1 index length dup 2 index length add 1 add string
	dup 0 6 5 roll putinterval dup 2 index 124 put dup 3 2 roll 1 add 4 3 roll putinterval cvn
	3 1 roll Powers 3 index known {
		pop pop
	} {
		8 dict dup begin
		exch Powers exch get /Paint get /Outer xd
		Powers 2 index get { def } forall
		end
		dup ControlledFleetTroopBBox /PaintControlledFleet load CreateTroop FleetTroops 4 index 3 2 roll put
		dup ControlledArmyTroopBBox /PaintControlledArmy load CreateTroop ArmyTroops 4 index 3 2 roll put
		dup ControlledSupplyCenterBBox /PaintControlledSupply load CreateTroop SupplyCenters 4 index 3 2 roll put
		Powers 2 index 3 2 roll put
		[ /Power 3 index 4 3 roll {
			ChangeController {
				Power GetControlledPower exch
				/ChangeController false def
			} if pop
		} bind /exec load /def load ] cvx 2 index xd
	} ifelse
} bd
/Controls {
	/ChangeController true def
} bd
/CreateTroop {
	<<
		/BBox 4 3 roll
		/PaintProc 5 4 roll
		6 5 roll {} forall
		/FormType 1
		/Matrix matrix
	>>
} bd
/CreateTroops {
	<< 3 1 roll Powers {
		3 index 3 index CreateTroop 4 2 roll
	} forall pop pop >>
} bd
/SplitString {
	7 dict begin
	/nrChars xd
	/indentString xd
	/objectString xd
	/objectLast objectString length 1 sub def
	% Short string?
	objectLast nrChars lt {
		false objectString
	} {
		% Look for a suitable place to split.
		% First tracking backwards, if that doesn't work, look forward.
		/splitIndex -1 def
		nrChars -1 0 {
			objectString 1 index get 32 eq {
				/splitIndex xd exit
			} if pop
		} for splitIndex -1 eq {
			nrChars 1 add 1 objectLast {
				objectString 1 index get 32 eq {
					/splitIndex xd exit
				} if pop
			} for
		} if
		splitIndex -1 eq splitIndex objectLast eq or {
			false objectString
		} {
			% The first part.
			objectString 0 splitIndex getinterval
			% The second part.
			objectString splitIndex 1 add objectLast splitIndex sub getinterval
			% Add indentation if needed.
			indentString length 0 gt {
				dup length indentString length add string
				dup 0 indentString putinterval
				dup indentString length 4 3 roll putinterval
			} if
			% Add white space of the first part.
			/nonSpaceIndex objectLast 1 add def
			0 1 objectLast {
				objectString 1 index get 32 ne {
					/nonSpaceIndex xd exit
				} if pop
			} for
			nonSpaceIndex 0 gt nonSpaceIndex splitIndex lt and {
				dup length nonSpaceIndex add string
				dup 0 objectString 0 nonSpaceIndex getinterval putinterval
				dup nonSpaceIndex 4 3 roll putinterval
			} if
			exch true exch
		} ifelse
	} ifelse
	end
} bd
/DrawLayoutBorders {
	s
	TextFixedFont 8 y z
	r
} bd
/Owner <<
	/Steps [
		{ /Count 0 def /Y 104.24 def false true } bind
		{
			Count 9 ge { false true } {
				115 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				21.6 Y m h
				true false
			} ifelse
		} bind
		{
			115 SplitString [ exch {
				21.6 24.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				21.6 24.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 115 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OwnerReport {
	SwitchToTextMode
	Owner begin Start end
	/FinishReport /FinishOwnerReport load def
} bd
/WriteOwner {
	Owner begin Write end
} bd
/FinishOwnerReport {
	Owner begin Finish end
} bd
/Adjustment <<
	/Steps [
		{ /Count 0 def /Y 96.24 def false true } bind
		{
			Count 8 ge { false true } {
				39 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				583.2 Y m h
				true false
			} ifelse
		} bind
		{
			39 SplitString [ exch {
				583.2 24.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				583.2 24.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 39 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 8 y z
		583.2 96.24 moveto
		(Adjustments) h
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/AdjustReport {
	SwitchToTextMode
	Adjustment begin Start end
	/FinishReport /FinishAdjustReport load def
} bd
/WriteAdjust {
	Adjustment begin Write end
} bd
/FinishAdjustReport {
	Adjustment begin Finish end
} bd
/Retreat <<
	/Steps [
		{ /Count 0 def /Y 168.24 def false true } bind
		{
			Count 7 ge { false true } {
				39 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				583.2 Y m h
				true false
			} ifelse
		} bind
		{
			39 SplitString [ exch {
				583.2 104.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				583.2 104.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 39 SplitString pop true false } bind
	]
	/Start {
		TextHeadingFont 8 y z
		583.2 168.24 moveto
		(Retreats) h
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/RetreatReport {
	SwitchToTextMode
	Retreat begin Start end
	/FinishReport /FinishRetreatReport load def
} bd
/WriteRetreat {
	Retreat begin Write end
} bd
/FinishRetreatReport {
	Retreat begin Finish end
} bd
/Order <<
	/Steps [
		{ /Count 0 def /Y 544.24 def false true } bind
		{
			Count 45 ge { false true } {
				39 SplitString
				/Count Count 1 add def /Y Y 8 sub def
				583.2 Y m h
				true false
			} ifelse
		} bind
		{
			39 SplitString [ exch {
				583.2 176.24 m h
			} /exec load ] cvx /Finish xd
			true true
		} bind
		{
			/Count 1 def /Finish {
				583.2 176.24 m (... \() h
				Count dup 1 add log iceiling string cvs h
				( more\)) h
			} bd false true
		} bind
		{ /Count Count 1 add def 39 SplitString pop true false } bind
	]
	/Start {
		TextFixedFont 8 y z
		/StepIndex 0 def
		/Step Steps 0 get def
		/Finish { } def
	} bind
	/Write {
		(  ) {
			Step {
				/StepIndex StepIndex 1 add def
				/Step Steps StepIndex get def
			} if { not { exit } if () } if
		} loop
	} bind
>> def
/OrderReport {
	SwitchToTextMode
	Order begin Start end
	/FinishReport /FinishOrderReport load def
} bd
/WriteOrder {
	Order begin Write end
} bd
/FinishOrderReport {
	Order begin Finish end
} bd
/DrawTitle {
	SwitchToTextMode
	TextTitleFont 24 y z
	(Diplomacy)
	583.2 572.72 m h
	TextTitleFont 16 y z
	dup stringwidth pop dup 187.2 gt {
		583.2 550 m
		187.2 exch div dup 1 x exch
		0 4.48 rmoveto h
		1 exch div 1 x
	} {
		pop 583.2 554.48 m h
	} ifelse
} bd
/SwitchToTextMode {
	InTextMode {
		FinishReport /FinishReport { } def
	} {
		r /InTextMode true def
	} ifelse
} bd
/SwitchToMapMode {
	InTextMode {
		FinishReport /FinishReport { } def
		/InTextMode false def
		s
		27.6 116 540 468 rectclip .4827 .4827 x 54.05 234.11 t
		ArrowColor
		OkOrder
	} if
} bd
/FrameMap {
	s
	2 w LandBrown
	26.09 113 m 569.11 113 l 569.11 587 l 26.09 587 l
	p
	s 8 w Black k r
	clipsave clip k cliprestore
	r
} bd
/IncludeSeaBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	6 w BorderBlack
	OutlineWaterBlack
	OutlineWater2Grey
	r
} bd
/IncludeLand {
	s
	.1667 .1667 x
	/fk {
		p
		s LandBrown f r
		k
	} bd
	6 w BorderBlack
	OutlineContinentGreen
	r
} bd
/IncludeInternalBorders {
	s
	.1667 .1667 x
	/fk { k } bd
	6 w BorderBlack
	OutlineInternalBlack
	OutlineInternal2Grey
	r
} bd
/IncludeCrossings {
	s
	/fk { f } bd
	ArrowBlack
	ShapeBridges
	r
} bd
/OutlineWaterBlack {
	3300 5886 m
	3333 5840 3355 5785 3391 5742 c
	3419 5709 3463 5680 3480 5639 c
	3516 5552 3508 5471 3523 5382 c
	3530 5341 3558 5305 3573 5268 c
	3594 5217 3604 5160 3629 5112 c
	3656 5059 3704 5023 3742 4980 c
	3795 4917 3845 4840 3886 4770 c
	3920 4711 3958 4639 3969 4572 c
	3978 4515 3973 4454 3992 4398 c
	4008 4353 4034 4313 4047 4266 c
	4054 4240 4045 4213 4053 4188 c
	4063 4158 4083 4134 4090 4104 c
	4101 4044 4091 3976 4106 3918 c
	4112 3893 4134 3875 4142 3852 c
	4162 3799 4164 3755 4164 3702 c
	fk
	4662 5886 m
	4662 5823 4691 5785 4715 5730 c
	4730 5695 4735 5659 4757 5628 c
	4783 5591 4824 5560 4843 5520 c
	4866 5471 4845 5410 4868 5364 c
	4878 5343 4896 5329 4906 5310 c
	4920 5283 4916 5214 4956 5210 c
	4997 5207 5027 5244 5064 5253 c
	5085 5259 5108 5252 5130 5259 c
	5157 5268 5179 5289 5208 5296 c
	5239 5302 5273 5295 5303 5307 c
	5346 5324 5375 5374 5418 5395 c
	5464 5418 5546 5421 5598 5430 c
	fk
	6282 5538 m
	6612 5625 l
	6744 5646 l
	fk
	4338 3732 m
	4385 3794 4509 3801 4584 3810 c
	4607 3813 4621 3832 4644 3837 c
	4694 3850 4759 3855 4812 3857 c
	4879 3860 4938 3832 5004 3828 c
	fk
	1122 2310 m
	1083 2363 1035 2364 984 2397 c
	927 2434 882 2491 828 2532 c
	880 2564 897 2615 937 2657 c
	965 2686 1030 2716 1068 2736 c
	1102 2754 1162 2779 1200 2787 c
	1224 2793 1253 2783 1277 2793 c
	1303 2804 1316 2840 1338 2858 c
	1380 2892 1435 2920 1482 2948 c
	1526 2974 1584 3002 1632 3020 c
	1651 3027 1673 3021 1691 3033 c
	1709 3046 1718 3068 1734 3083 c
	1762 3109 1796 3124 1822 3156 c
	1861 3205 1873 3243 1938 3265 c
	2098 3317 2281 3199 2442 3198 c
	2477 3197 2503 3224 2538 3230 c
	2626 3246 2723 3260 2814 3266 c
	2858 3269 2900 3288 2945 3281 c
	2969 3277 2979 3257 3000 3248 c
	3034 3233 3076 3242 3108 3224 c
	3135 3209 3156 3170 3192 3171 c
	3263 3172 3317 3277 3357 3322 c
	3379 3348 3417 3344 3443 3362 c
	3490 3392 3525 3452 3570 3478 c
	3701 3552 3872 3510 4014 3546 c
	fk
	6 2292 m
	57 2275 117 2274 168 2253 c
	186 2245 204 2217 226 2221 c
	264 2229 287 2290 324 2308 c
	489 2391 641 2494 828 2532 c
	fk
	5676 2328 m
	5726 2327 5774 2300 5826 2293 c
	5952 2277 6077 2269 6204 2241 c
	6380 2202 6562 2136 6744 2136 c
	fk
	0 2292 m
	6 2292 l
	fk
	5466 2184 m
	5462 2063 5471 1912 5401 1806 c
	5373 1765 5330 1775 5292 1755 c
	5172 1690 5024 1650 4890 1692 c
	4889 1653 4874 1621 4887 1584 c
	4899 1547 4952 1485 4940 1446 c
	4919 1375 4803 1387 4769 1314 c
	4721 1212 4842 1106 4847 1008 c
	4851 948 4788 920 4802 864 c
	4812 820 4890 768 4932 758 c
	4964 749 4993 761 5021 736 c
	5052 706 5060 655 5095 628 c
	5127 603 5170 599 5201 577 c
	5227 559 5227 522 5256 506 c
	5280 491 5305 500 5327 479 c
	5378 432 5404 365 5461 321 c
	5511 282 5579 283 5627 243 c
	5655 219 5659 183 5683 157 c
	5709 129 5746 116 5768 84 c
	5792 47 5781 13 5832 0 c
	fk
	2592 2154 m
	2610 2082 l
	fk
	1074 2040 m
	1158 2094 l
	fk
	4614 2064 m
	4619 2022 4662 1993 4664 1956 c
	4666 1927 4630 1907 4619 1884 c
	4603 1853 4618 1727 4650 1709 c
	4685 1690 4736 1725 4770 1734 c
	4813 1745 4860 1720 4890 1692 c
	fk
	1770 1866 m
	1848 1770 l
	fk
	2964 1722 m
	3072 1764 l
	fk
	4632 1722 m
	4608 1708 4584 1714 4560 1704 c
	4501 1680 4453 1639 4386 1638 c
	4319 1636 4252 1666 4188 1661 c
	4155 1658 4124 1642 4092 1638 c
	4054 1634 4014 1644 3978 1635 c
	3933 1625 3895 1596 3846 1599 c
	3826 1601 3811 1616 3792 1621 c
	3712 1643 3656 1663 3588 1710 c
	fk
	1608 1602 m
	1464 1590 l
	fk
	6 1386 m
	354 1554 l
	fk
	3432 1464 m
	3410 1440 3382 1413 3366 1385 c
	3357 1371 3357 1348 3345 1336 c
	3312 1308 3258 1326 3229 1295 c
	3210 1274 3181 1239 3171 1212 c
	3160 1181 3170 1155 3143 1130 c
	3125 1115 3102 1095 3078 1092 c
	3052 1089 3012 1101 2991 1083 c
	2950 1047 2944 953 2903 930 c
	2854 901 2789 893 2736 878 c
	2667 859 2610 823 2538 812 c
	2510 807 2481 828 2454 819 c
	2327 772 2203 714 2064 714 c
	2103 888 l
	2079 972 l
	2083 1026 l
	2058 1176 l
	fk
	0 1386 m
	6 1386 l
	fk
	1344 1140 m
	1812 1260 l
	fk
	2064 714 m
	2022 665 1951 642 1896 619 c
	1870 608 1851 588 1824 580 c
	1798 573 1771 580 1746 572 c
	1718 563 1696 539 1668 532 c
	1604 515 1570 517 1512 480 c
	1532 433 1536 392 1574 354 c
	1613 315 1672 291 1705 245 c
	1761 170 1766 84 1794 0 c
	fk
	1146 702 m
	1512 480 l
	fk
	696 414 m
	610 375 500 330 468 234 c
	fk
} bd
/OutlineWater2Grey {
	822 5880 m
	872 5640 l
	934 5550 l
	994 5364 l
	1155 5118 l
	1168 5052 l
	1232 4890 l
	1248 4782 l
	1309 4698 l
	1370 4512 l
	1527 4272 l
	1540 4206 l
	1604 4044 l
	1617 3942 l
	1678 3858 l
	1738 3672 l
	1893 3438 l
	1962 3276 l
	fk
	2424 3198 m
	2420 3153 2381 3132 2359 3096 c
	2313 3017 2276 2942 2274 2850 c
	fk
	3198 3168 m
	3233 2982 l
	3234 2874 l
	fk
	228 2220 m
	234 2164 252 2102 300 2066 c
	319 2053 342 2059 360 2041 c
	405 1999 443 1945 492 1908 c
	fk
	2628 1398 m
	2768 1240 l
	2862 1204 l
	2994 1086 l
	fk
	3348 1338 m
	3367 1314 3383 1283 3404 1261 c
	3425 1238 3451 1230 3466 1200 c
	3492 1149 3488 1071 3546 1040 c
	3603 1011 3713 1021 3774 1037 c
	3798 1043 3821 1061 3846 1063 c
	3881 1066 3913 1047 3948 1050 c
	3993 1054 4021 1081 4062 1090 c
	4126 1104 4194 1103 4260 1117 c
	4309 1128 4353 1156 4404 1167 c
	4444 1175 4485 1159 4524 1167 c
	4550 1172 4565 1199 4590 1209 c
	4618 1219 4650 1212 4680 1219 c
	4708 1225 4728 1247 4758 1254 c
	fk
	6 210 m
	288 255 l
	432 234 l
	684 257 l
	864 240 l
	1086 262 l
	1320 234 l
	1428 290 l
	1536 294 l
	1620 318 l
	fk
	0 210 m
	6 210 l
	fk
} bd
/OutlineContinentGreen {
	6318 5724 m
	6289 5705 6316 5706 6306 5682 c
	6298 5663 6279 5652 6270 5634 c
	6261 5616 6277 5603 6282 5592 c
	6299 5549 6276 5490 6294 5448 c
	6300 5431 6285 5404 6294 5388 c
	6311 5353 6362 5371 6378 5340 c
	6387 5320 6354 5303 6366 5280 c
	6375 5260 6404 5251 6414 5232 c
	6430 5199 6412 5156 6426 5124 c
	6433 5105 6452 5094 6462 5076 c
	6474 5050 6437 5029 6450 5004 c
	6463 4976 6496 4995 6510 4968 c
	6516 4955 6504 4933 6510 4920 c
	6532 4865 6506 4828 6492 4770 c
	6480 4724 6524 4660 6510 4626 c
	6499 4601 6484 4578 6474 4554 c
	6464 4530 6495 4513 6486 4494 c
	6473 4469 6433 4458 6414 4446 c
	6387 4429 6414 4400 6402 4380 c
	6386 4353 6335 4349 6318 4314 c
	6303 4284 6266 4188 6282 4152 c
	6286 4141 6304 4127 6306 4116 c
	6307 4106 6287 4038 6282 4026 c
	6265 3986 6165 3937 6114 3966 c
	6100 3973 6091 4000 6078 4014 c
	6043 3979 5999 3936 5982 3894 c
	5972 3871 5986 3845 5994 3828 c
	6003 3804 5984 3767 5994 3744 c
	6015 3692 6057 3581 6030 3516 c
	6006 3456 l
	5993 3425 6020 3376 6006 3348 c
	5996 3328 5968 3318 5958 3300 c
	5940 3270 5927 3234 5910 3204 c
	5901 3190 5881 3182 5874 3168 c
	5863 3146 5871 3117 5862 3096 c
	5844 3054 5819 3017 5802 2976 c
	5793 2955 5810 2924 5802 2904 c
	5793 2882 5774 2865 5766 2844 c
	5749 2805 5799 2758 5814 2730 c
	5820 2717 5832 2730 5838 2718 c
	5841 2709 5830 2684 5838 2670 c
	5850 2645 5925 2626 5898 2586 c
	5889 2572 5873 2584 5862 2580 c
	5836 2569 5802 2568 5778 2556 c
	5747 2540 5744 2506 5730 2484 c
	5718 2465 5685 2470 5670 2460 c
	5637 2439 5672 2424 5682 2406 c
	5703 2363 5669 2300 5634 2280 c
	5616 2269 5590 2276 5574 2268 c
	5530 2244 5490 2208 5448 2166 c
	5435 2153 5402 2125 5382 2136 c
	5360 2146 5352 2179 5358 2202 c
	5370 2250 5385 2307 5394 2358 c
	5397 2381 5373 2411 5394 2442 c
	5408 2463 5432 2441 5448 2472 c
	5460 2460 l
	5477 2472 5469 2482 5478 2496 c
	5488 2514 5516 2514 5526 2538 c
	5533 2554 5502 2581 5490 2580 c
	5482 2579 5473 2559 5466 2556 c
	5413 2532 5328 2484 5328 2418 c
	5328 2401 5351 2395 5358 2382 c
	5374 2349 5340 2294 5316 2280 c
	5282 2259 5253 2319 5250 2340 c
	5248 2350 5267 2354 5262 2364 c
	5236 2409 5214 2363 5178 2376 c
	5166 2388 l
	5135 2366 5058 2322 5052 2286 c
	5050 2279 5067 2267 5070 2262 c
	5080 2239 5077 2209 5094 2190 c
	5022 2142 5023 2026 4938 1998 c
	4917 1991 4863 2022 4854 2040 c
	4842 2060 4862 2090 4866 2106 c
	4871 2129 4850 2164 4854 2178 c
	4856 2187 4874 2192 4878 2202 c
	4889 2235 4887 2252 4920 2274 c
	4865 2328 4811 2297 4764 2250 c
	4740 2226 4736 2208 4722 2184 c
	4705 2155 4667 2154 4650 2124 c
	4639 2105 4638 2076 4614 2064 c
	4592 2053 4559 2060 4536 2052 c
	4527 2048 4528 2033 4518 2028 c
	4481 2008 4435 2039 4410 2052 c
	4400 2056 4384 2047 4374 2052 c
	4365 2055 4346 2076 4338 2076 c
	4326 2076 4309 2054 4290 2064 c
	4285 2066 4270 2088 4266 2088 c
	4253 2085 4247 2068 4230 2076 c
	4215 2081 4201 2096 4182 2088 c
	4167 2081 4155 2067 4140 2064 c
	4116 2058 4005 2053 4026 2094 c
	4037 2117 4053 2103 4068 2112 c
	4075 2116 4079 2137 4092 2136 c
	4113 2134 4160 2122 4176 2154 c
	4151 2170 4125 2148 4098 2160 c
	4086 2164 4064 2190 4050 2184 c
	4024 2172 4051 2137 4026 2124 c
	3963 2089 3966 2218 3966 2250 c
	3966 2280 3990 2287 3990 2316 c
	3924 2340 l
	3906 2280 l
	3822 2130 l
	3842 2119 3836 2137 3852 2136 c
	3872 2134 3881 2092 3894 2082 c
	3917 2062 3947 2045 3972 2028 c
	3998 2009 4008 1912 3978 1896 c
	3961 1886 3913 1896 3894 1896 c
	3838 1896 3808 1887 3762 1872 c
	3741 1865 3720 1873 3708 1848 c
	3695 1823 3692 1792 3672 1770 c
	3641 1735 3584 1712 3558 1680 c
	3543 1662 3550 1631 3540 1614 c
	3524 1587 3485 1602 3468 1572 c
	3456 1551 3466 1474 3444 1464 c
	3427 1456 3386 1493 3372 1500 c
	3354 1507 3329 1492 3312 1500 c
	3258 1522 3236 1559 3216 1608 c
	3211 1618 3220 1634 3216 1644 c
	3196 1682 3170 1666 3144 1680 c
	3118 1692 3128 1710 3120 1728 c
	3109 1749 3081 1745 3072 1764 c
	3068 1770 3068 1824 3072 1830 c
	3079 1841 3096 1832 3102 1848 c
	3107 1861 3081 1877 3084 1890 c
	3088 1918 3120 1914 3132 1938 c
	3144 1963 3090 1974 3108 2010 c
	3119 2032 3139 2030 3150 2052 c
	3181 2025 3182 2060 3210 2076 c
	3248 2098 3321 2152 3288 2202 c
	3269 2230 3242 2179 3228 2172 c
	3201 2158 3172 2179 3156 2196 c
	3128 2168 3086 2162 3054 2184 c
	3040 2192 3053 2210 3036 2220 c
	3018 2229 2999 2216 2982 2232 c
	2967 2245 2968 2268 2952 2280 c
	2940 2288 2909 2284 2892 2292 c
	2866 2302 2829 2268 2796 2280 c
	2787 2282 2784 2297 2772 2292 c
	2749 2281 2769 2263 2760 2250 c
	2758 2247 2721 2222 2718 2220 c
	2700 2209 2670 2219 2652 2208 c
	2631 2194 2650 2170 2634 2160 c
	2624 2153 2602 2165 2592 2160 c
	2545 2134 2532 2111 2478 2166 c
	2449 2123 2415 2169 2382 2178 c
	2353 2185 2305 2100 2280 2088 c
	2237 2066 2229 2112 2208 2124 c
	2160 2148 l
	2150 2148 2140 2129 2124 2136 c
	2117 2138 2101 2155 2094 2154 c
	2057 2144 2024 2103 2052 2070 c
	2012 2043 1981 2042 1962 2082 c
	1952 2062 1927 2010 1896 2028 c
	1879 2037 1888 2054 1872 2064 c
	1864 2068 1849 2059 1842 2064 c
	1802 2087 1828 2136 1854 2154 c
	1836 2184 l
	1812 2112 l
	1776 2010 l
	1834 2010 1817 1889 1764 1860 c
	1761 1858 1741 1858 1740 1860 c
	1720 1874 1717 1905 1692 1920 c
	1680 1926 1664 1927 1656 1944 c
	1649 1956 1656 1973 1650 1986 c
	1641 1973 1598 1942 1578 1956 c
	1564 1965 1577 1980 1572 1992 c
	1561 2012 1539 2026 1530 2046 c
	1484 2023 1489 2030 1470 2070 c
	1441 2012 1419 2064 1374 2064 c
	1349 2064 1351 2049 1332 2040 c
	1288 2018 1272 2053 1260 2076 c
	1250 2093 1229 2088 1218 2106 c
	1174 2062 1157 2101 1140 2136 c
	1127 2133 1126 2127 1116 2124 c
	1093 2116 1081 2149 1092 2166 c
	1100 2178 1111 2166 1122 2172 c
	1142 2183 1126 2188 1128 2202 c
	1129 2211 1146 2206 1152 2214 c
	1162 2230 1121 2266 1116 2280 c
	1104 2306 1158 2340 1182 2352 c
	1200 2361 1216 2344 1230 2340 c
	1242 2335 1248 2353 1254 2352 c
	1312 2339 1335 2278 1404 2322 c
	1438 2343 1446 2391 1482 2412 c
	1501 2423 1520 2416 1542 2424 c
	1550 2426 1557 2447 1566 2448 c
	1575 2448 1585 2429 1602 2436 c
	1628 2446 1612 2459 1626 2472 c
	1641 2485 1668 2487 1686 2496 c
	1700 2503 1707 2524 1722 2532 c
	1737 2539 1766 2524 1782 2532 c
	1793 2537 1808 2550 1818 2556 c
	1863 2582 1854 2640 1902 2664 c
	1915 2670 1935 2668 1950 2676 c
	1962 2682 1949 2693 1962 2700 c
	1984 2712 2018 2687 2040 2730 c
	2047 2744 2032 2750 2028 2760 c
	2020 2778 2055 2812 2070 2820 c
	2071 2820 2133 2831 2130 2832 c
	2141 2831 2155 2801 2166 2796 c
	2177 2790 2186 2801 2196 2790 c
	2201 2783 2187 2780 2190 2772 c
	2202 2738 2248 2768 2256 2784 c
	2220 2802 l
	2230 2867 2388 2868 2310 2790 c
	2316 2784 l
	2358 2820 l
	2381 2796 2390 2794 2376 2766 c
	2382 2760 l
	2395 2773 2414 2775 2424 2784 c
	2434 2792 2458 2841 2502 2820 c
	2521 2810 2530 2781 2550 2772 c
	2555 2769 2619 2760 2622 2760 c
	2634 2760 2652 2785 2664 2790 c
	2683 2798 2728 2773 2754 2784 c
	2775 2793 2804 2786 2826 2796 c
	2834 2799 2853 2820 2862 2820 c
	2872 2820 2881 2799 2898 2808 c
	2910 2814 2914 2828 2928 2832 c
	2958 2839 2972 2808 2994 2808 c
	3014 2808 3049 2831 3078 2820 c
	3093 2813 3130 2786 3150 2796 c
	3179 2810 3221 2855 3234 2880 c
	3250 2866 3289 2854 3300 2838 c
	3320 2807 3280 2743 3300 2718 c
	3321 2690 3349 2737 3366 2736 c
	3381 2734 3423 2686 3432 2676 c
	3462 2712 l
	3522 2688 l
	3552 2706 l
	3540 2730 l
	3567 2739 3555 2733 3564 2760 c
	3588 2742 l
	3588 2778 l
	3618 2808 l
	3642 2754 l
	3674 2818 3615 2867 3588 2922 c
	3690 3048 l
	3774 3108 l
	3810 3144 l
	3864 3138 l
	3834 3150 l
	3860 3172 3911 3197 3930 3234 c
	3938 3251 3930 3258 3948 3276 c
	3977 3305 4021 3315 4002 3354 c
	4075 3390 3988 3533 4014 3594 c
	4033 3639 4069 3645 4092 3690 c
	4118 3663 4123 3690 4152 3702 c
	4168 3709 4190 3684 4200 3678 c
	4205 3689 4229 3736 4248 3738 c
	4268 3739 4258 3727 4284 3738 c
	4332 3758 4374 3704 4350 3660 c
	4340 3643 4314 3650 4308 3630 c
	4300 3607 4327 3591 4290 3576 c
	4253 3560 4218 3577 4194 3528 c
	4180 3500 4218 3474 4206 3444 c
	4183 3389 4152 3370 4212 3336 c
	4227 3327 4248 3284 4272 3300 c
	4293 3314 4287 3359 4302 3378 c
	4316 3396 4330 3381 4344 3408 c
	4371 3389 4371 3433 4404 3420 c
	4417 3414 4426 3401 4440 3396 c
	4477 3380 4541 3443 4572 3456 c
	4595 3465 4631 3447 4656 3456 c
	4686 3466 4691 3498 4716 3516 c
	4731 3527 4761 3518 4776 3528 c
	4787 3535 4786 3560 4794 3570 c
	4806 3586 4824 3589 4836 3612 c
	4863 3593 4875 3649 4896 3672 c
	4913 3691 4948 3697 4962 3720 c
	4981 3754 4985 3809 5010 3840 c
	5027 3861 5047 3837 5064 3870 c
	5091 3846 5086 3869 5112 3882 c
	5169 3910 5214 3922 5250 3984 c
	5284 4042 5308 4102 5334 4164 c
	5341 4181 5326 4206 5334 4224 c
	5344 4248 5362 4283 5370 4296 c
	5380 4314 5426 4332 5442 4356 c
	5445 4361 5438 4373 5442 4380 c
	5451 4399 5480 4408 5490 4428 c
	5496 4440 5484 4462 5490 4476 c
	5498 4497 5517 4514 5526 4536 c
	5531 4549 5520 4570 5526 4584 c
	5540 4618 5569 4646 5586 4680 c
	5590 4689 5581 4706 5586 4716 c
	5601 4747 5666 4770 5622 4800 c
	5651 4835 5612 4836 5598 4866 c
	5589 4883 5599 4901 5574 4914 c
	5561 4920 5538 4907 5526 4914 c
	5501 4927 5461 5015 5478 5046 c
	5485 5060 5507 5059 5520 5070 c
	5557 4995 5579 5003 5610 5076 c
	5623 5107 5588 5149 5598 5172 c
	5606 5191 5632 5225 5622 5250 c
	5606 5286 5574 5376 5598 5424 c
	5608 5444 5630 5458 5640 5478 c
	5663 5458 5665 5468 5688 5478 c
	5703 5484 5721 5481 5736 5490 c
	5817 5537 5748 5653 5778 5712 c
	5808 5772 5855 5767 5880 5718 c
	5897 5729 5933 5701 5946 5676 c
	5963 5640 5930 5580 5946 5544 c
	5957 5517 5976 5513 5988 5490 c
	6000 5490 l
	6036 5598 l
	6132 5514 l
	6161 5543 6251 5676 6186 5706 c
	6161 5716 6133 5654 6120 5646 c
	6092 5629 6072 5662 6054 5670 c
	6042 5674 6009 5650 6000 5646 c
	5976 5693 5993 5790 6036 5820 c
	6057 5835 6094 5819 6120 5826 c
	6131 5828 6154 5844 6168 5838 c
	6191 5826 6203 5798 6228 5790 c
	6251 5782 6257 5824 6276 5826 c
	6319 5829 6299 5746 6318 5724 c
	fk
	2628 2094 m
	2653 2042 2686 2075 2724 2046 c
	2736 2036 2724 2027 2730 2016 c
	2741 1992 2757 2007 2772 1998 c
	2783 1990 2778 1970 2796 1962 c
	2824 1947 2866 1971 2886 1932 c
	2903 1897 2853 1854 2874 1824 c
	2882 1811 2893 1823 2904 1818 c
	2941 1799 2914 1761 2904 1740 c
	2928 1746 l
	2970 1716 l
	2910 1698 l
	2766 1608 l
	2730 1560 l
	2682 1512 l
	2622 1380 l
	2581 1404 2557 1460 2538 1500 c
	2514 1546 2474 1530 2442 1548 c
	2428 1555 2424 1577 2412 1590 c
	2394 1554 2380 1555 2346 1584 c
	2322 1536 l
	2220 1524 l
	2172 1416 l
	2100 1332 l
	2040 1308 l
	2052 1272 l
	2022 1236 l
	2064 1182 l
	2052 1176 2019 1155 2004 1164 c
	1987 1173 1996 1190 1980 1200 c
	1957 1212 1934 1174 1908 1188 c
	1893 1195 1886 1216 1872 1224 c
	1840 1239 1786 1221 1818 1284 c
	1839 1265 1845 1276 1866 1290 c
	1830 1314 l
	1825 1309 1817 1297 1812 1296 c
	1746 1274 1793 1365 1788 1380 c
	1780 1397 1751 1421 1764 1446 c
	1787 1492 1829 1511 1866 1530 c
	1847 1539 1817 1526 1800 1536 c
	1777 1548 1788 1596 1794 1614 c
	1735 1643 1669 1559 1608 1590 c
	1618 1654 1721 1648 1746 1698 c
	1771 1681 1822 1754 1854 1770 c
	1874 1780 1911 1780 1926 1788 c
	1936 1793 1952 1824 1962 1836 c
	1977 1855 1967 1877 1980 1896 c
	2006 1935 2063 1967 2106 1950 c
	2117 1945 2126 1955 2136 1944 c
	2151 1923 2154 1889 2166 1866 c
	2186 1882 2243 1902 2274 1890 c
	2285 1885 2314 1860 2328 1866 c
	2349 1875 2367 1908 2376 1926 c
	2391 1913 2406 1908 2418 1932 c
	2424 1944 2411 1967 2418 1980 c
	2422 1988 2466 2030 2472 2034 c
	2517 2064 2587 2053 2628 2094 c
	fk
	1020 2028 m
	1054 2045 1084 2054 1098 2010 c
	1101 1998 1076 1980 1086 1962 c
	1104 1924 1127 1891 1146 1854 c
	1170 1866 l
	1183 1838 1214 1830 1242 1854 c
	1285 1767 1302 1874 1350 1878 c
	1386 1881 1391 1842 1404 1824 c
	1418 1802 1464 1766 1440 1722 c
	1412 1672 1336 1690 1302 1656 c
	1321 1642 1332 1639 1350 1638 c
	1357 1637 1366 1661 1374 1662 c
	1399 1664 1403 1623 1422 1614 c
	1431 1609 1449 1619 1458 1614 c
	1478 1600 1457 1535 1476 1512 c
	1484 1500 1503 1505 1512 1488 c
	1526 1459 1478 1455 1500 1428 c
	1511 1413 1552 1407 1536 1374 c
	1521 1344 1497 1348 1476 1338 c
	1449 1324 1403 1264 1386 1242 c
	1366 1217 1359 1172 1344 1146 c
	1331 1124 1288 1080 1272 1062 c
	1264 1053 1246 1050 1242 1038 c
	1238 1026 1256 1000 1248 984 c
	1238 964 1209 955 1200 936 c
	1193 922 1207 910 1188 900 c
	1173 892 1146 902 1140 876 c
	1134 855 1169 855 1176 846 c
	1196 815 1161 784 1152 768 c
	1142 751 1161 718 1152 702 c
	1146 693 1131 695 1128 684 c
	1115 645 1125 586 1080 564 c
	1057 552 1028 551 1008 564 c
	991 573 980 620 960 612 c
	886 581 992 542 948 498 c
	902 452 829 454 774 432 c
	756 424 721 391 696 408 c
	678 419 696 445 702 456 c
	654 492 l
	678 508 661 512 672 534 c
	683 557 714 548 726 570 c
	741 597 711 629 732 660 c
	758 699 829 745 780 786 c
	750 738 l
	678 786 l
	663 756 642 726 630 696 c
	613 656 671 541 582 534 c
	565 532 559 562 546 564 c
	524 565 506 535 486 576 c
	472 603 475 638 462 666 c
	516 708 l
	570 714 l
	582 768 l
	552 786 l
	583 849 480 835 510 894 c
	524 923 578 1005 558 1044 c
	548 1061 530 1048 522 1062 c
	500 1094 561 1129 552 1158 c
	532 1148 536 1126 516 1116 c
	487 1101 421 1149 438 1182 c
	456 1219 477 1261 498 1296 c
	506 1309 526 1317 534 1332 c
	541 1346 529 1360 540 1374 c
	552 1368 l
	558 1370 600 1436 600 1440 c
	597 1448 579 1462 570 1458 c
	535 1442 505 1358 450 1386 c
	431 1395 409 1443 432 1458 c
	440 1463 463 1458 474 1464 c
	456 1530 l
	486 1572 l
	414 1638 l
	392 1612 390 1568 402 1542 c
	409 1523 434 1508 420 1488 c
	394 1452 363 1522 354 1542 c
	343 1562 365 1582 372 1596 c
	363 1600 349 1597 342 1602 c
	286 1632 386 1657 390 1680 c
	394 1705 347 1738 366 1776 c
	375 1794 435 1862 456 1854 c
	473 1846 478 1819 492 1806 c
	498 1866 l
	486 1908 l
	540 1938 l
	618 1872 l
	696 1938 l
	720 1926 l
	792 1950 l
	816 1998 l
	840 1998 l
	942 2082 l
	978 2070 l
	990 2082 l
	1020 2028 l
	fk
} bd
/OutlineInternalBlack {
	5622 5220 m
	5650 5220 5675 5200 5706 5208 c
	5720 5211 5737 5224 5754 5220 c
	5786 5211 5812 5182 5844 5172 c
	5906 5151 5945 5155 5970 5082 c
	5982 5044 5944 4997 5958 4956 c
	5975 4903 6020 4836 6000 4776 c
	5995 4761 5976 4748 5970 4734 c
	5952 4690 6012 4639 5994 4596 c
	5963 4521 5887 4474 5862 4398 c
	5841 4337 5909 4297 5886 4242 c
	5863 4187 5786 4173 5760 4110 c
	5741 4065 5808 4055 5796 4026 c
	5781 3992 5699 3961 5670 3954 c
	5649 3948 5604 3966 5592 3960 c
	5578 3952 5575 3921 5556 3912 c
	5524 3896 5485 3885 5454 3870 c
	5474 3845 5438 3811 5448 3774 c
	5451 3760 5458 3731 5466 3720 c
	5473 3707 5502 3697 5502 3678 c
	5502 3612 5434 3555 5460 3480 c
	5467 3458 5483 3408 5496 3390 c
	5515 3362 5566 3356 5550 3306 c
	5536 3266 5503 3256 5478 3228 c
	5468 3217 5462 3193 5448 3186 c
	5386 3152 5309 3140 5262 3204 c
	5246 3224 5236 3260 5208 3270 c
	5172 3281 5145 3212 5112 3204 c
	5096 3200 5088 3217 5076 3222 c
	4997 3248 4985 3285 4998 3360 c
	5033 3354 5076 3355 5094 3396 c
	5099 3409 5091 3424 5100 3438 c
	5115 3460 5131 3479 5142 3504 c
	5150 3524 5123 3536 5130 3552 c
	5149 3597 5194 3545 5214 3558 c
	5248 3579 5203 3616 5208 3642 c
	5211 3660 5237 3665 5244 3684 c
	5247 3695 5235 3716 5232 3726 c
	5251 3735 5271 3719 5286 3726 c
	5300 3732 5294 3747 5304 3756 c
	5315 3765 5343 3771 5352 3786 c
	5372 3820 5354 3870 5358 3900 c
	5358 3906 5376 3918 5376 3924 c
	5376 3959 5345 3959 5382 3996 c
	5328 4038 l
	5316 4122 l
	fk
	5376 3924 m
	5454 3870 l
	fk
	5814 2730 m
	5770 2730 5754 2753 5718 2766 c
	5663 2784 5613 2798 5592 2862 c
	5582 2890 5620 2911 5628 2934 c
	5641 2974 5623 3025 5634 3066 c
	5639 3088 5611 3112 5610 3132 c
	5607 3167 5649 3210 5652 3246 c
	5662 3377 5724 3522 5784 3642 c
	5798 3670 5827 3655 5844 3672 c
	5893 3721 5831 3801 5910 3834 c
	5923 3839 5971 3816 5994 3816 c
	fk
	4758 2940 m
	4716 2946 4686 2987 4656 3012 c
	4593 3062 4456 3092 4380 3054 c
	4356 3082 4340 3148 4380 3174 c
	4391 3181 4412 3185 4422 3198 c
	4443 3228 4436 3276 4458 3306 c
	4478 3334 4516 3305 4542 3318 c
	4563 3328 4571 3349 4590 3360 c
	4608 3369 4654 3345 4680 3354 c
	4720 3367 4756 3446 4806 3402 c
	4818 3390 4857 3359 4860 3348 c
	4864 3329 4842 3325 4836 3312 c
	4825 3291 4808 3255 4818 3228 c
	4837 3169 4916 3155 4932 3108 c
	4935 3097 4955 3071 4950 3060 c
	4939 3038 4859 2981 4836 2976 c
	4816 2971 4792 2979 4776 2970 c
	4748 2954 4755 2908 4776 2892 c
	4788 2881 4804 2879 4818 2868 c
	4792 2842 4722 2795 4746 2748 c
	4762 2715 4791 2691 4776 2646 c
	4772 2634 4752 2616 4752 2604 c
	4752 2581 4790 2571 4788 2544 c
	4784 2500 4723 2446 4758 2394 c
	4767 2380 4790 2344 4812 2358 c
	4821 2363 4827 2391 4842 2394 c
	4861 2397 4882 2351 4890 2340 c
	4944 2370 l
	5010 2316 l
	5082 2328 l
	fk
	4848 3372 m
	4904 3419 4945 3412 4998 3360 c
	fk
	4134 3348 m
	4119 3318 4093 3297 4080 3264 c
	4062 3223 4101 3162 4086 3126 c
	4070 3089 4035 3060 4020 3024 c
	4013 3007 4016 2985 4008 2970 c
	3988 2937 3912 2939 3924 2892 c
	3939 2830 3965 2820 4014 2784 c
	4061 2748 4072 2664 4122 2640 c
	4171 2615 4223 2707 4242 2730 c
	4269 2763 4328 2762 4344 2808 c
	4346 2815 4334 2831 4338 2844 c
	4341 2859 4355 2866 4362 2880 c
	4370 2897 4357 2927 4362 2946 c
	4370 2980 4380 3015 4380 3054 c
	fk
	4926 3036 m
	4989 3036 4953 3005 4968 2976 c
	5004 3000 l
	5013 2980 5022 2955 5040 2940 c
	5048 2932 5078 2918 5082 2904 c
	5087 2882 5059 2853 5076 2826 c
	5087 2806 5125 2790 5142 2778 c
	5181 2746 5226 2688 5226 2634 c
	5358 2646 l
	5358 2716 5449 2720 5478 2772 c
	5491 2796 5470 2845 5472 2868 c
	5473 2883 5490 2895 5496 2910 c
	5508 2939 5482 2964 5490 2988 c
	5497 3010 5506 3050 5526 3066 c
	5534 3072 5548 3068 5556 3078 c
	5579 3107 5570 3118 5610 3132 c
	fk
	3966 2814 m
	3938 2790 3910 2792 3882 2778 c
	3832 2753 3803 2710 3780 2670 c
	3773 2658 3754 2651 3750 2640 c
	3745 2628 3765 2604 3774 2598 c
	3798 2578 3861 2533 3852 2496 c
	3845 2469 3843 2428 3828 2406 c
	3807 2375 3770 2373 3750 2346 c
	3740 2333 3749 2317 3744 2304 c
	3734 2281 3696 2262 3696 2238 c
	3696 2229 3708 2214 3702 2202 c
	3684 2167 3638 2169 3624 2136 c
	3613 2111 3641 2074 3606 2052 c
	3564 2025 3536 2054 3498 2064 c
	3470 2070 3458 2049 3438 2046 c
	3425 2043 3400 2048 3384 2046 c
	3384 2088 l
	fk
	2874 2808 m
	2856 2640 l
	2880 2562 l
	fk
	3090 2808 m
	3102 2760 l
	3096 2676 l
	3126 2568 l
	3078 2472 l
	fk
	4338 2802 m
	4357 2782 4352 2762 4368 2742 c
	4404 2692 4437 2637 4452 2580 c
	4460 2546 4434 2540 4422 2520 c
	4408 2497 4442 2397 4458 2382 c
	4473 2366 4482 2389 4500 2382 c
	4540 2365 4581 2347 4608 2400 c
	4614 2412 4605 2429 4614 2442 c
	4638 2479 4669 2491 4686 2532 c
	4697 2559 4682 2593 4692 2622 c
	4705 2662 4750 2680 4758 2724 c
	fk
	2550 2772 m
	2550 2741 2547 2717 2532 2694 c
	2524 2682 2494 2668 2502 2652 c
	2508 2637 2567 2624 2550 2598 c
	2537 2578 2495 2601 2478 2592 c
	2450 2576 2473 2536 2442 2526 c
	2338 2491 2222 2529 2112 2502 c
	2062 2489 2010 2447 1974 2418 c
	1953 2401 1922 2401 1902 2388 c
	1863 2362 1850 2314 1812 2292 c
	1787 2277 1756 2268 1734 2250 c
	1714 2234 1716 2185 1686 2178 c
	1677 2175 1595 2190 1584 2196 c
	1632 2244 1652 2236 1590 2268 c
	1594 2293 1617 2300 1632 2322 c
	1647 2345 1620 2349 1626 2370 c
	1634 2405 1663 2429 1614 2454 c
	fk
	5358 2646 m
	5393 2616 5406 2634 5442 2646 c
	5463 2653 5493 2629 5514 2628 c
	5533 2626 5556 2635 5580 2628 c
	5641 2607 5685 2546 5748 2526 c
	fk
	5226 2634 m
	4860 2388 l
	fk
	5520 2628 m
	5496 2580 l
	fk
	2970 2256 m
	3222 2454 l
	3300 2514 l
	3354 2484 l
	3450 2490 l
	3594 2586 l
	fk
	2472 2166 m
	2489 2218 2463 2282 2478 2340 c
	2483 2361 2499 2374 2508 2394 c
	2516 2414 2493 2448 2526 2466 c
	2544 2476 2573 2458 2592 2472 c
	2607 2482 2628 2549 2652 2544 c
	2671 2539 2694 2466 2682 2448 c
	2670 2430 2639 2454 2634 2424 c
	2622 2357 2710 2290 2730 2232 c
	fk
	3456 2496 m
	3483 2462 3472 2416 3492 2382 c
	3503 2361 3533 2352 3546 2328 c
	3575 2269 3520 2153 3624 2136 c
	fk
	3924 2340 m
	3850 2352 3906 2479 3948 2490 c
	3988 2500 4016 2450 4050 2448 c
	4083 2445 4126 2497 4146 2490 c
	4155 2486 4158 2465 4170 2460 c
	4188 2450 4200 2477 4218 2472 c
	4233 2466 4244 2448 4260 2442 c
	4275 2435 4298 2443 4314 2436 c
	4350 2417 4386 2345 4362 2310 c
	4342 2281 4300 2306 4278 2310 c
	4240 2316 4192 2274 4146 2298 c
	4128 2306 4110 2340 4086 2328 c
	4023 2296 4089 2256 4074 2220 c
	4068 2205 4054 2198 4050 2184 c
	fk
	4422 2346 m
	4432 2325 4459 2312 4470 2292 c
	4490 2250 4437 2224 4422 2202 c
	4395 2164 4371 2106 4350 2064 c
	fk
	4890 2340 m
	4878 2304 l
	fk
	3288 2208 m
	3345 2246 3389 2298 3474 2298 c
	fk
	1398 2064 m
	1463 2129 1484 2196 1584 2196 c
	fk
	1692 2184 m
	1722 2158 1777 2142 1818 2142 c
	fk
	3618 2058 m
	3630 2045 3679 2008 3684 1992 c
	3701 1921 3632 1880 3594 1842 c
	3618 1788 l
	3660 1758 l
	fk
	3438 2046 m
	3438 2006 3418 1982 3402 1950 c
	3384 1915 3393 1869 3360 1842 c
	3337 1823 3313 1835 3294 1830 c
	3279 1825 3261 1782 3258 1770 c
	3253 1750 3302 1678 3324 1668 c
	3347 1656 3362 1697 3384 1686 c
	3402 1675 3407 1629 3444 1650 c
	3515 1689 3464 1807 3534 1842 c
	3546 1848 3579 1842 3594 1842 c
	fk
	3948 2046 m
	3834 1974 l
	3744 2004 l
	3684 1992 l
	fk
	2442 2004 m
	2514 1938 l
	2538 1866 l
	2601 1897 2670 1823 2724 1806 c
	2740 1800 2761 1810 2778 1806 c
	2821 1795 2874 1788 2922 1788 c
	fk
	3114 1920 m
	3138 1915 3160 1911 3186 1920 c
	3197 1923 3221 1948 3234 1944 c
	3263 1934 3294 1857 3294 1830 c
	fk
	612 1872 m
	638 1818 686 1819 726 1806 c
	758 1795 765 1731 804 1716 c
	823 1707 843 1732 858 1728 c
	878 1721 893 1686 912 1674 c
	933 1659 960 1675 978 1662 c
	1007 1638 980 1562 1002 1530 c
	1116 1566 l
	1188 1632 l
	1302 1650 l
	fk
	2538 1866 m
	2538 1800 2593 1729 2520 1686 c
	2478 1661 2416 1692 2382 1704 c
	2328 1721 2273 1703 2226 1692 c
	2204 1686 2179 1697 2160 1686 c
	2108 1655 2079 1621 2040 1578 c
	2023 1560 2002 1557 1986 1536 c
	1963 1505 1950 1464 1914 1440 c
	1892 1425 1862 1439 1842 1428 c
	1818 1415 1813 1380 1788 1368 c
	fk
	2544 1704 m
	2580 1602 l
	2676 1500 l
	fk
	1002 1530 m
	1002 1451 987 1296 1104 1296 c
	1092 1226 1052 1180 1014 1122 c
	997 1097 961 1082 948 1056 c
	923 1006 893 952 876 900 c
	866 872 888 860 894 840 c
	901 808 897 767 912 732 c
	930 688 954 664 954 612 c
	fk
	1104 1296 m
	1200 1362 l
	1230 1314 l
	1290 1320 l
	1320 1260 l
	1380 1236 l
	fk
	558 1002 m
	678 966 l
	756 978 l
	894 942 l
	fk
} bd
/OutlineInternal2Grey {
	5574 3936 m
	5700 3816 l
	5766 3798 l
	5802 3834 l
	5868 3786 l
	fk
	4422 3408 m
	4458 3312 l
	fk
	4026 3372 m
	4039 3365 4053 3331 4074 3342 c
	4082 3346 4094 3367 4104 3366 c
	4139 3360 4139 3325 4182 3354 c
	fk
	5550 3312 m
	5652 3276 l
	fk
	4080 3126 m
	4147 3103 4219 3120 4290 3126 c
	4314 3128 4323 3145 4350 3132 c
	fk
	3696 3048 m
	3696 2985 3776 2974 3816 2952 c
	3834 2940 3848 2921 3870 2916 c
	3887 2911 3911 2916 3930 2916 c
	fk
	2082 2820 m
	2106 2754 l
	2106 2682 l
	2124 2598 l
	2082 2490 l
	fk
	3552 2706 m
	3554 2688 3585 2577 3606 2586 c
	3623 2593 3634 2620 3648 2634 c
	3687 2587 3703 2596 3750 2628 c
	fk
	2664 2538 m
	2784 2550 l
	2826 2550 l
	2880 2568 l
	2988 2532 l
	3066 2478 l
	3174 2418 l
	fk
	2454 2532 m
	2486 2510 2552 2506 2526 2466 c
	fk
	2130 2502 m
	2094 2406 l
	2136 2310 l
	2166 2148 l
	fk
	3846 2472 m
	3924 2472 l
	fk
	3492 2376 m
	3456 2323 3481 2266 3462 2208 c
	3450 2172 3422 2131 3402 2100 c
	3376 2059 3296 2136 3294 2154 c
	fk
	4464 2376 m
	4436 2348 4406 2334 4368 2334 c
	fk
	4584 2370 m
	4584 2331 4576 2282 4620 2268 c
	4636 2262 4654 2273 4668 2262 c
	4693 2241 4701 2224 4734 2208 c
	fk
	570 1386 m
	630 1386 679 1457 750 1440 c
	768 1435 799 1437 816 1428 c
	853 1406 882 1372 924 1362 c
	956 1353 986 1369 1014 1374 c
	fk
	780 786 m
	780 812 809 870 846 852 c
	867 841 866 822 894 822 c
	fk
} bd
/ShapeBridges {
	431 365 t -75.96 o
	21.14 .6 m 3.6 .6 l 3.6 2.4 l 0 0 l 3.6 -2.4 l 3.6 -.6 l 21.14 -.6 l 21.14 -2.4 l 24.74 0 l 21.14 2.4 l p
	75.96 o -431 -365 t
	201 355 t -144.64 o
	34.41 .6 m 3.6 .6 l 3.6 2.4 l 0 0 l 3.6 -2.4 l 3.6 -.6 l 34.41 -.6 l 34.41 -2.4 l 38.01 0 l 34.41 2.4 l p
	144.64 o -201 -355 t
	277 267 t -176.82 o
	32.46 .6 m 3.6 .6 l 3.6 2.4 l 0 0 l 3.6 -2.4 l 3.6 -.6 l 32.46 -.6 l 32.46 -2.4 l 36.06 0 l 32.46 2.4 l p
	176.82 o -277 -267 t
	fk
} bd
{
	currentdict end 3 1 roll [ exch /setgray load ] cvx def begin
}{
	currentdict end 5 1 roll [ 4 1 roll /setrgbcolor load ] cvx def begin
}{
	currentdict end 6 1 roll [ 5 1 roll /setcmykcolor load ] cvx def begin
} bind VisitColors
/ChangeController false def
s
MapUnitLetterFont z
{
	exch load exch load
	2 index [ exch n 0 0 m true charpath pathbbox 3 2 roll add -2 div 3 1 roll add -2 div exch ] 3 1 roll
	4 dict begin /Contrast xd /Paint xd /Offset xd /Letter xd currentdict end
	currentdict end 3 1 roll
	Powers 2 index 3 2 roll put
	[ /Power 2 index {
		ChangeController {
			Power GetControlledPower
			/ChangeController false def
		} if
	} bind /exec load /def load ] cvx def
	begin
} VisitPowers
r
/FleetTroops FleetTroopBBox /PaintFleet load CreateTroops def
/ArmyTroops ArmyTroopBBox /PaintArmy load CreateTroops def
/Centers <<
	{ pop pop true } bind
	VisitSupplies
>> def
/SupplyCenters SupplyCenterBBox /PaintSupply load CreateTroops def
{ currentdict end 4 1 roll [ SupplyCenters 4 2 roll 4 index ] cvx def begin } bind
VisitSupplies
/SHIMAZUCENTER /SHIMAZU ld
/MORICENTER /MORI ld
/CHOSOKABECENTER /CHOSOKABE ld
/ASAKURACENTER /ASAKURA ld
/ODACENTER /ODA ld
/UESUGICENTER /UESUGI ld
/TAKEDACENTER /TAKEDA ld
/HOJOCENTER /HOJO ld
/NEUTRALCENTER /NEUTRAL ld
/UNOWNEDCENTER /UNOWNED ld
%%EndSetup
